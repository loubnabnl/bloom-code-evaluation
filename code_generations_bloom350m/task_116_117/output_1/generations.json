[["def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    return arr[0]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    return arr[0]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        arr = int(arr)\n    if isinstance(arr, str):\n        arr = str(arr)\n    if isinstance(arr, unicode):\n        arr = unicode(arr)\n    if isinstance(arr, bool):\n        arr = bool(arr)\n    if isinstance(arr, float):\n        arr = float(arr)\n    if isinstance(arr, int):\n        arr = int(arr)\n    if isinstance(arr, float):\n        arr = float(arr)\n    if isinstance(arr, int):\n        arr = int(arr)\n    if isinstance(arr, int):\n        arr = int(arr)\n    if isinstance(arr, int):\n        arr = int(arr)\n    if isinstance(arr, int):\n        arr = int(arr)\n    if isinstance(arr, int):\n        arr = int(arr)\n    if isinstance(arr, int):\n        arr = int(arr)\n    if isinstance(arr, int):\n        arr = int(arr)\n    if isinstance(arr, int):\n        arr = int(arr)\n    if isinstance(arr, int):\n        arr = int(arr)\n    if isinstance(arr, int):\n        arr = int(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        arr = int(arr)\n    if isinstance(arr, float):\n        arr = float(arr)\n    if isinstance(arr, bool):\n        arr = bool(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, tuple):\n        arr = tuple(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    return arr[0]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, tuple):\n        return sort_array(arr)\n    elif isinstance(arr, float):\n        return sort_array(arr)\n    elif isinstance(arr, bool):\n        return sort_array(arr)\n    elif isinstance(arr, float32):\n        return sort_array(arr)\n    elif isinstance(arr, float64):\n        return sort_array(arr)\n    elif isinstance(arr, int32):\n        return sort_array(arr)\n    elif isinstance(arr, int64):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, int64):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, int64):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, int):", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return\n    if len(arr) == 2:\n        return\n    if len(arr) == 3:\n        return\n    if len(arr) == 4:\n        return\n    if len(arr) == 5:\n        return\n    if len(arr) == 6:\n        return\n    if len(arr) == 7:\n        return\n    if len(arr) == 8:\n        return\n    if len(arr) == 9:\n        return\n    if len(arr) == 10:\n        return\n    if len(arr) == 11:\n        return\n    if len(arr) == 12:\n        return\n    if len(arr) == 13:\n        return\n    if len(arr) == 14:\n        return\n    if len(arr) == 15:\n        return\n    if len(arr) == 16:\n        return\n    if len(arr) == 17:\n        return\n    if len(arr) == 18:\n        return\n    if len(arr) == 19:\n        return\n    if len(arr) == 20:\n        return\n    if len(arr) == 21:\n        return\n    if len(arr) == 22:\n        return\n    if len(arr) == 23:\n        return\n    if len(arr) == 24:\n        return\n    if len(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr\n    if len(arr) == 4:\n        return arr\n    if len(arr) == 5:\n        return arr\n    if len(arr) == 6:\n        return arr\n    if len(arr) == 7:\n        return arr\n    if len(arr) == 8:\n        return arr\n    if len(arr) == 9:\n        return arr\n    if len(arr) == 10:\n        return arr\n    if len(arr) == 11:\n        return arr\n    if len(arr) == 12:\n        return arr\n    if len(arr) == 13:\n        return arr\n    if len(arr) == 14:\n        return arr\n    if len(arr) == 15:\n        return arr\n    if len(arr) == 16:\n        return arr\n    if len(arr) == 17:\n        return arr\n    if len(arr) == 18:\n        return arr\n    if len(arr) == 19:\n        return arr\n    if len(arr) == 20:\n        return arr\n    if len(arr) == 21:\n        return arr\n    if len(arr) == 22:\n        return arr\n    if len(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    return arr[0]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sorted(arr)\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[4])\n    return sorted(arr, key=lambda x: x[5])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        arr = int(arr)\n    if isinstance(arr, str):\n        arr = str(arr)\n    if isinstance(arr, unicode):\n        arr = unicode(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, tuple):\n        arr = tuple(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, tuple):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, list):\n        return sort_array(arr)\n    if isinstance(arr, tuple):\n        return sort_array(arr)\n    if isinstance(arr, float):\n        return sort_array(arr)\n    if isinstance(arr, bool):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sorted(arr)\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[10])\n    if len(arr) == 13:\n        return sorted(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr\n    if len(arr) == 4:\n        return arr\n    if len(arr) == 5:\n        return arr\n    if len(arr) == 6:\n        return arr\n    if len(arr) == 7:\n        return arr\n    if len(arr) == 8:\n        return arr\n    if len(arr) == 9:\n        return arr\n    if len(arr) == 10:\n        return arr\n    if len(arr) == 11:\n        return arr\n    if len(arr) == 12:\n        return arr\n    if len(arr) == 13:\n        return arr\n    if len(arr) == 14:\n        return arr\n    if len(arr) == 15:\n        return arr\n    if len(arr) == 16:\n        return arr\n    if len(arr) == 17:\n        return arr\n    if len(arr) == 18:\n        return arr\n    if len(arr) == 19:\n        return arr\n    if len(arr) == 20:\n        return arr\n    if len(arr) == 21:\n        return arr\n    if len(arr) == 22:\n        return arr\n    if len(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr\n    if len(arr) == 4:\n        return arr\n    if len(arr) == 5:\n        return arr\n    if len(arr) == 6:\n        return arr\n    if len(arr) == 7:\n        return arr\n    if len(arr) == 8:\n        return arr\n    if len(arr) == 9:\n        return arr\n    if len(arr) == 10:\n        return arr\n    if len(arr) == 11:\n        return arr\n    if len(arr) == 12:\n        return arr\n    if len(arr) == 13:\n        return arr\n    if len(arr) == 14:\n        return arr\n    if len(arr) == 15:\n        return arr\n    if len(arr) == 16:\n        return arr\n    if len(arr) == 17:\n        return arr\n    if len(arr) == 18:\n        return arr\n    if len(arr) == 19:\n        return arr\n    if len(arr) == 20:\n        return arr\n    if len(arr) == 21:\n        return arr\n    if len(arr) == 22:\n        return arr\n    if len(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    if len(arr) == 7:\n        return sort_array(arr[6])\n    if len(arr) == 8:\n        return sort_array(arr[7])\n    if len(arr) == 9:\n        return sort_array(arr[8])\n    if len(arr) == 10:\n        return sort_array(arr[9])\n    if len(arr) == 11:\n        return sort_array(arr[10])\n    if len(arr) == 12:\n        return sort_array(arr[11])\n    if len(arr) == 13:\n        return sort_array(arr[12])\n    if len(arr) == 14:\n        return sort_array(arr[13])\n    if len(arr) == 15:\n        return sort_array(arr[14])\n    if len(arr) == 16:\n        return sort_array(arr[15])\n    if len(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, tuple):\n        return sort_array(arr)\n    elif isinstance(arr, float):\n        return sort_array(arr)\n    elif isinstance(arr, bool):\n        return sort_array(arr)\n    elif isinstance(arr, bool):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return\n    if len(arr) == 2:\n        return\n    if len(arr) == 3:\n        return\n    if len(arr) == 4:\n        return\n    if len(arr) == 5:\n        return\n    if len(arr) == 6:\n        return\n    if len(arr) == 7:\n        return\n    if len(arr) == 8:\n        return\n    if len(arr) == 9:\n        return\n    if len(arr) == 10:\n        return\n    if len(arr) == 11:\n        return\n    if len(arr) == 12:\n        return\n    if len(arr) == 13:\n        return\n    if len(arr) == 14:\n        return\n    if len(arr) == 15:\n        return\n    if len(arr) == 16:\n        return\n    if len(arr) == 17:\n        return\n    if len(arr) == 18:\n        return\n    if len(arr) == 19:\n        return\n    if len(arr) == 20:\n        return\n    if len(arr) == 21:\n        return\n    if len(arr) == 22:\n        return\n    if len(arr) == 23:\n        return\n    if len(arr) == 24:\n        return\n    if len(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    if len(arr) == 7:\n        return sort_array(arr[6])\n    if len(arr) == 8:\n        return sort_array(arr[7])\n    if len(arr) == 9:\n        return sort_array(arr[8])\n    if len(arr) == 10:\n        return sort_array(arr[9])\n    if len(arr) == 11:\n        return sort_array(arr[10])\n    if len(arr) == 12:\n        return sort_array(arr[11])\n    if len(arr) == 13:\n        return sort_array(arr[12])\n    if len(arr) == 14:\n        return sort_array(arr[13])\n    if len(arr) == 15:\n        return sort_array(arr[14])\n    if len(arr) == 16:\n        return sort_array(arr[15])\n    if len(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr\n    if len(arr) == 4:\n        return arr\n    if len(arr) == 5:\n        return arr\n    if len(arr) == 6:\n        return arr\n    if len(arr) == 7:\n        return arr\n    if len(arr) == 8:\n        return arr\n    if len(arr) == 9:\n        return arr\n    if len(arr) == 10:\n        return arr\n    if len(arr) == 11:\n        return arr\n    if len(arr) == 12:\n        return arr\n    if len(arr) == 13:\n        return arr\n    if len(arr) == 14:\n        return arr\n    if len(arr) == 15:\n        return arr\n    if len(arr) == 16:\n        return arr\n    if len(arr) == 17:\n        return arr\n    if len(arr) == 18:\n        return arr\n    if len(arr) == 19:\n        return arr\n    if len(arr) == 20:\n        return arr\n    if len(arr) == 21:\n        return arr\n    if len(arr) == 22:\n        return arr\n    if len(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, str):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, tuple):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, tuple):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return\n    if len(arr) == 2:\n        return\n    if len(arr) == 3:\n        return\n    if len(arr) == 4:\n        return\n    if len(arr) == 5:\n        return\n    if len(arr) == 6:\n        return\n    if len(arr) == 7:\n        return\n    if len(arr) == 8:\n        return\n    if len(arr) == 9:\n        return\n    if len(arr) == 10:\n        return\n    if len(arr) == 11:\n        return\n    if len(arr) == 12:\n        return\n    if len(arr) == 13:\n        return\n    if len(arr) == 14:\n        return\n    if len(arr) == 15:\n        return\n    if len(arr) == 16:\n        return\n    if len(arr) == 17:\n        return\n    if len(arr) == 18:\n        return\n    if len(arr) == 19:\n        return\n    if len(arr) == 20:\n        return\n    if len(arr) == 21:\n        return\n    if len(arr) == 22:\n        return\n    if len(arr) == 23:\n        return\n    if len(arr) == 24:\n        return\n    if len(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    return arr[0]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    return arr[0]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    return arr[0]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, str):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, tuple):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sorted(arr)\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[10])\n    if len(arr) == 13:\n        return sorted(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        arr = int(arr)\n    if isinstance(arr, float):\n        arr = float(arr)\n    if isinstance(arr, str):\n        arr = str(arr)\n    if isinstance(arr, unicode):\n        arr = unicode(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, tuple):\n        arr = tuple(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr\n    if len(arr) == 4:\n        return arr\n    if len(arr) == 5:\n        return arr\n    if len(arr) == 6:\n        return arr\n    if len(arr) == 7:\n        return arr\n    if len(arr) == 8:\n        return arr\n    if len(arr) == 9:\n        return arr\n    if len(arr) == 10:\n        return arr\n    if len(arr) == 11:\n        return arr\n    if len(arr) == 12:\n        return arr\n    if len(arr) == 13:\n        return arr\n    if len(arr) == 14:\n        return arr\n    if len(arr) == 15:\n        return arr\n    if len(arr) == 16:\n        return arr\n    if len(arr) == 17:\n        return arr\n    if len(arr) == 18:\n        return arr\n    if len(arr) == 19:\n        return arr\n    if len(arr) == 20:\n        return arr\n    if len(arr) == 21:\n        return arr\n    if len(arr) == 22:\n        return arr\n    if len(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    if len(arr) == 7:\n        return sort_array(arr[6])\n    if len(arr) == 8:\n        return sort_array(arr[7])\n    if len(arr) == 9:\n        return sort_array(arr[8])\n    if len(arr) == 10:\n        return sort_array(arr[9])\n    if len(arr) == 11:\n        return sort_array(arr[10])\n    if len(arr) == 12:\n        return sort_array(arr[11])\n    if len(arr) == 13:\n        return sort_array(arr[12])\n    if len(arr) == 14:\n        return sort_array(arr[13])\n    if len(arr) == 15:\n        return sort_array(arr[14])\n    if len(arr) == 16:\n        return sort_array(arr[15])\n    if len(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[10])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[11])\n    if len(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, str):\n        return sort_array(arr)\n    else:\n        raise TypeError(\"sort_array must be a string or int\")\n\n    def sort(arr):\n        \"\"\"\n        In this Kata, you have to sort an array of non-negative integers according to\n        number of ones in their binary representation in ascending order.\n        For similar number of ones, sort based on decimal value.\n        \"\"\"\n        if isinstance(arr, int):\n            return sort_array(arr)\n        elif isinstance(arr, str):\n            return sort_array(arr)\n        else:\n            raise TypeError(\"sort_array must be a string or int\")\n\n    def sort_array(arr):\n        \"\"\"\n        In this Kata, you have to sort an array of non-negative integers according to\n        number of ones in their binary representation in ascending order.\n        For similar number of ones, sort based on decimal value.\n        \"\"\"\n        if isinstance(arr, int):\n            return sort_array(arr)\n        elif isinstance(arr, str):\n            return sort_array(arr)\n        else:\n            raise TypeError(\"sort_array must be a string or int\")\n\n    def sort_integer(arr):\n        \"\"\"", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        arr = arr * -1\n    else:\n        arr = arr * 1\n    return sorted(arr, key=lambda x: x[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return\n    if len(arr) == 2:\n        return\n    if len(arr) == 3:\n        return\n    if len(arr) == 4:\n        return\n    if len(arr) == 5:\n        return\n    if len(arr) == 6:\n        return\n    if len(arr) == 7:\n        return\n    if len(arr) == 8:\n        return\n    if len(arr) == 9:\n        return\n    if len(arr) == 10:\n        return\n    if len(arr) == 11:\n        return\n    if len(arr) == 12:\n        return\n    if len(arr) == 13:\n        return\n    if len(arr) == 14:\n        return\n    if len(arr) == 15:\n        return\n    if len(arr) == 16:\n        return\n    if len(arr) == 17:\n        return\n    if len(arr) == 18:\n        return\n    if len(arr) == 19:\n        return\n    if len(arr) == 20:\n        return\n    if len(arr) == 21:\n        return\n    if len(arr) == 22:\n        return\n    if len(arr) == 23:\n        return\n    if len(arr) == 24:\n        return\n    if len(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    else:\n        return sort_array(arr, ascending=False)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    return sort_array(arr)[0]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, tuple):\n        return sort_array(arr)\n    elif isinstance(arr, float):\n        return sort_array(arr)\n    elif isinstance(arr, bool):\n        return sort_array(arr)\n    elif isinstance(arr, str):\n        return sort_array(arr)\n    elif isinstance(arr, unicode):\n        return sort_array(arr)\n    elif isinstance(arr, str):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, float):\n        return sort_array(arr)\n    elif isinstance(arr, bool):\n        return sort_array(arr)\n    elif isinstance(arr, str):\n        return sort_array(arr)\n    elif isinstance(arr, unicode):\n        return sort_array(arr)\n    elif isinstance(arr, str):\n        return sort_array(arr)\n    elif isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, float):\n        return sort_array(arr)\n    elif isinstance(arr, bool):\n        return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) < 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) > 3:\n        return sort_array(arr)\n    if len(arr) < 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) > 5:\n        return sort_array(arr)\n    if len(arr) < 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) > 7:\n        return sort_array(arr)\n    if len(arr) < 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) > 9:\n        return sort_array(arr)\n    if len(arr) < 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) > 11:\n        return sort_array(arr)\n    if len(arr) < 11:\n        return sort_array(arr)\n    if len(arr) == 12:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[10])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[11])\n    if len(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, list):\n        arr = sorted(arr, key=lambda x: x[0])\n    if isinstance(arr, tuple):\n        arr = sorted(arr, key=lambda x: x[0])\n    if isinstance(arr, int):\n        arr = sorted(arr, key=lambda x: x[0])\n    if isinstance(arr, float):\n        arr = sorted(arr, key=lambda x: x[0])\n    if isinstance(arr, bool):\n        arr = sorted(arr, key=lambda x: x[0])\n    if isinstance(arr, int64):\n        arr = sorted(arr, key=lambda x: x[0])\n    if isinstance(arr, int):\n        arr = sorted(arr, key=lambda x: x[0])\n    if isinstance(arr, int64):\n        arr = sorted(arr, key=lambda x: x[0])\n    if isinstance(arr, int):\n        arr = sorted(arr, key=lambda x: x[0])\n    if isinstance(arr, int):\n        arr = sorted(arr, key=lambda x: x[0])\n    if isinstance(arr, int):\n        arr = sorted(arr, key=lambda x: x[0])\n    if isinstance(arr, int):\n        arr =", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    if len(arr) == 7:\n        return sort_array(arr[6])\n    if len(arr) == 8:\n        return sort_array(arr[7])\n    if len(arr) == 9:\n        return sort_array(arr[8])\n    if len(arr) == 10:\n        return sort_array(arr[9])\n    if len(arr) == 11:\n        return sort_array(arr[10])\n    if len(arr) == 12:\n        return sort_array(arr[11])\n    if len(arr) == 13:\n        return sort_array(arr[12])\n    if len(arr) == 14:\n        return sort_array(arr[13])\n    if len(arr) == 15:\n        return sort_array(arr[14])\n    if len(arr) == 16:\n        return sort_array(arr[15])\n    if len(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    if len(arr) == 7:\n        return sort_array(arr[6])\n    if len(arr) == 8:\n        return sort_array(arr[7])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return\n    if len(arr) == 2:\n        return\n    if len(arr) == 3:\n        return\n    if len(arr) == 4:\n        return\n    if len(arr) == 5:\n        return\n    if len(arr) == 6:\n        return\n    if len(arr) == 7:\n        return\n    if len(arr) == 8:\n        return\n    if len(arr) == 9:\n        return\n    if len(arr) == 10:\n        return\n    if len(arr) == 11:\n        return\n    if len(arr) == 12:\n        return\n    if len(arr) == 13:\n        return\n    if len(arr) == 14:\n        return\n    if len(arr) == 15:\n        return\n    if len(arr) == 16:\n        return\n    if len(arr) == 17:\n        return\n    if len(arr) == 18:\n        return\n    if len(arr) == 19:\n        return\n    if len(arr) == 20:\n        return\n    if len(arr) == 21:\n        return\n    if len(arr) == 22:\n        return\n    if len(arr) == 23:\n        return\n    if len(arr) == 24:\n        return\n    if len(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, tuple):\n        return sort_array(arr)\n    elif isinstance(arr, float):\n        return sort_array(arr)\n    elif isinstance(arr, float32):\n        return sort_array(arr)\n    elif isinstance(arr, float64):\n        return sort_array(arr)\n    elif isinstance(arr, float128):\n        return sort_array(arr)\n    elif isinstance(arr, float256):\n        return sort_array(arr)\n    elif isinstance(arr, float512):\n        return sort_array(arr)\n    elif isinstance(arr, float64128):\n        return sort_array(arr)\n    elif isinstance(arr, float512128):\n        return sort_array(arr)\n    elif isinstance(arr, float256128):\n        return sort_array(arr)\n    elif isinstance(arr, float512128):\n        return sort_array(arr)\n    elif isinstance(arr, float512):\n        return sort_array(arr)\n    elif isinstance(arr, float256):\n        return sort_array(arr)\n    elif isinstance(arr, float512):\n        return sort_array(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sorted(arr)\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[4])\n    return sorted(arr, key=lambda x: x[5])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    return arr[0]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr\n    if len(arr) == 4:\n        return arr\n    if len(arr) == 5:\n        return arr\n    if len(arr) == 6:\n        return arr\n    if len(arr) == 7:\n        return arr\n    if len(arr) == 8:\n        return arr\n    if len(arr) == 9:\n        return arr\n    if len(arr) == 10:\n        return arr\n    if len(arr) == 11:\n        return arr\n    if len(arr) == 12:\n        return arr\n    if len(arr) == 13:\n        return arr\n    if len(arr) == 14:\n        return arr\n    if len(arr) == 15:\n        return arr\n    if len(arr) == 16:\n        return arr\n    if len(arr) == 17:\n        return arr\n    if len(arr) == 18:\n        return arr\n    if len(arr) == 19:\n        return arr\n    if len(arr) == 20:\n        return arr\n    if len(arr) == 21:\n        return arr\n    if len(arr) == 22:\n        return arr\n    if len(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, tuple):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, tuple):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    if len(arr) == 7:\n        return sort_array(arr[6])\n    if len(arr) == 8:\n        return sort_array(arr[7])\n    if len(arr) == 9:\n        return sort_array(arr[8])\n    if len(arr) == 10:\n        return sort_array(arr[9])\n    if len(arr) == 11:\n        return sort_array(arr[10])\n    if len(arr) == 12:\n        return sort_array(arr[11])\n    if len(arr) == 13:\n        return sort_array(arr[12])\n    if len(arr) == 14:\n        return sort_array(arr[13])\n    if len(arr) == 15:\n        return sort_array(arr[14])\n    if len(arr) == 16:\n        return sort_array(arr[15])\n    if len(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sorted(arr)\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[10])\n    if len(arr) == 13:\n        return sorted(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return\n    if len(arr) == 2:\n        return\n    if len(arr) == 3:\n        return\n    if len(arr) == 4:\n        return\n    if len(arr) == 5:\n        return\n    if len(arr) == 6:\n        return\n    if len(arr) == 7:\n        return\n    if len(arr) == 8:\n        return\n    if len(arr) == 9:\n        return\n    if len(arr) == 10:\n        return\n    if len(arr) == 11:\n        return\n    if len(arr) == 12:\n        return\n    if len(arr) == 13:\n        return\n    if len(arr) == 14:\n        return\n    if len(arr) == 15:\n        return\n    if len(arr) == 16:\n        return\n    if len(arr) == 17:\n        return\n    if len(arr) == 18:\n        return\n    if len(arr) == 19:\n        return\n    if len(arr) == 20:\n        return\n    if len(arr) == 21:\n        return\n    if len(arr) == 22:\n        return\n    if len(arr) == 23:\n        return\n    if len(arr) == 24:\n        return\n    if len(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sorted(arr)\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[4])\n    return sorted(arr, key=lambda x: x[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        arr = int(arr)\n    if isinstance(arr, float):\n        arr = float(arr)\n    if isinstance(arr, str):\n        arr = str(arr)\n    if isinstance(arr, unicode):\n        arr = unicode(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, tuple):\n        arr = tuple(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)\n    if isinstance(arr, list):\n        arr = list(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    if len(arr) == 7:\n        return sort_array(arr[6])\n    if len(arr) == 8:\n        return sort_array(arr[7])\n    if len(arr) == 9:\n        return sort_array(arr[8])\n    if len(arr) == 10:\n        return sort_array(arr[9])\n    if len(arr) == 11:\n        return sort_array(arr[10])\n    if len(arr) == 12:\n        return sort_array(arr[11])\n    if len(arr) == 13:\n        return sort_array(arr[12])\n    if len(arr) == 14:\n        return sort_array(arr[13])\n    if len(arr) == 15:\n        return sort_array(arr[14])\n    if len(arr) == 16:\n        return sort_array(arr[15])\n    if len(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    else:\n        return sort_array(arr, ascending=False)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, list):\n        return sort_array(arr)\n    if isinstance(arr, tuple):\n        return sort_array(arr)\n    if isinstance(arr, float):\n        return sort_array(arr)\n    if isinstance(arr, bool):\n        return sort_array(arr)\n    if isinstance(arr, str):\n        return sort_array(arr)\n    if isinstance(arr, unicode):\n        return sort_array(arr)\n    if isinstance(arr, bool):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)\n    if isinstance(arr, int):\n        return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    if len(arr) == 7:\n        return sort_array(arr[6])\n    if len(arr) == 8:\n        return sort_array(arr[7])\n    if len(arr) == 9:\n        return sort_array(arr[8])\n    if len(arr) == 10:\n        return sort_array(arr[9])\n    if len(arr) == 11:\n        return sort_array(arr[10])\n    if len(arr) == 12:\n        return sort_array(arr[11])\n    if len(arr) == 13:\n        return sort_array(arr[12])\n    if len(arr) == 14:\n        return sort_array(arr[13])\n    if len(arr) == 15:\n        return sort_array(arr[14])\n    if len(arr) == 16:\n        return sort_array(arr[15])\n    if len(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, str):\n        return sort_array(arr)\n    else:\n        raise TypeError(\"sort_array() must be implemented like this: \" + str(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    else:\n        return sort_array(arr, 0, -1)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    return arr[0]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, str):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, tuple):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    return arr[0]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    elif isinstance(arr, str):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, tuple):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)\n    elif isinstance(arr, list):\n        return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    if len(arr) == 7:\n        return arr[6]\n    if len(arr) == 8:\n        return arr[7]\n    if len(arr) == 9:\n        return arr[8]\n    if len(arr) == 10:\n        return arr[9]\n    if len(arr) == 11:\n        return arr[10]\n    if len(arr) == 12:\n        return arr[11]\n    if len(arr) == 13:\n        return arr[12]\n    if len(arr) == 14:\n        return arr[13]\n    if len(arr) == 15:\n        return arr[14]\n    if len(arr) == 16:\n        return arr[15]\n    if len(arr) == 17:\n        return arr[16]\n    if len(arr) == 18:\n        return arr[17]\n    if len(arr) == 19:\n        return arr[18]\n    if len(arr) == 20:\n        return arr[19]\n    if len", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sorted(arr)\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[4])\n    return sorted(arr, key=lambda x: x[5])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    if len(arr) == 4:\n        return arr[3]\n    if len(arr) == 5:\n        return arr[4]\n    if len(arr) == 6:\n        return arr[5]\n    return arr[0]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 1:\n        return sort_array(arr)\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        arr = int(arr)\n    if isinstance(arr, list):\n        arr = [arr]\n    if isinstance(arr, tuple):\n        arr = [arr]\n    if isinstance(arr, list):\n        arr = [arr]\n    if isinstance(arr, tuple):\n        arr = [arr]\n    if isinstance(arr, int):\n        arr = arr.astype(int)\n    if isinstance(arr, list):\n        arr = [arr]\n    if isinstance(arr, tuple):\n        arr = [arr]\n    if isinstance(arr, int):\n        arr = arr.astype(int)\n    if isinstance(arr, list):\n        arr = [arr]\n    if isinstance(arr, tuple):\n        arr = [arr]\n    if isinstance(arr, int):\n        arr = arr.astype(int)\n    if isinstance(arr, list):\n        arr = [arr]\n    if isinstance(arr, tuple):\n        arr = [arr]\n    if isinstance(arr, int):\n        arr = arr.astype(int)\n    if isinstance(arr, list):\n        arr = [arr]\n    if isinstance(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if isinstance(arr, int):\n        return sort_array(arr)\n    else:\n        return sort_array(arr, 0, len(arr), 0)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return sort_array(arr[0])\n    if len(arr) == 2:\n        return sort_array(arr[1])\n    if len(arr) == 3:\n        return sort_array(arr[2])\n    if len(arr) == 4:\n        return sort_array(arr[3])\n    if len(arr) == 5:\n        return sort_array(arr[4])\n    if len(arr) == 6:\n        return sort_array(arr[5])\n    return sort_array(arr[6])"]]