[["def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer, got %s\" % a)\n    if a < 0:\n        raise TypeError(\"Expected a positive integer, got %s\" % a)\n    if a > 64:\n        raise TypeError(\"Expected a negative integer, got %s\" % a)\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, float):\n        raise TypeError(\"Expected a float\")\n    if not isinstance(a, long):\n        raise TypeError(\"Expected a long\")\n    if not isinstance(a, int64):\n        raise TypeError(\"Expected an int64\")\n    if not isinstance(a, long64):\n        raise TypeError(\"Expected a long64\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an int\")\n    if not isinstance(a, int64):\n        raise TypeError(\"Expected an int64\")\n    if not isinstance(a, long):\n        raise TypeError(\"Expected a long\")\n    if not isinstance(a, int64):\n        raise TypeError(\"Expected an int64\")\n    if not isinstance(a, long64):\n        raise TypeError(\"Expected a long64\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an int\")\n    if not isinstance(a, int64):\n        raise TypeError(\"Expected an int64\")\n    if not isinstance", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a > 1:\n        raise ValueError('Invalid integer')\n    if a == 1:\n        return True\n    if a == 2:\n        return False\n    if a == 3:\n        return True\n    if a == 4:\n        return False\n    if a == 5:\n        return False\n    if a == 6:\n        return False\n    if a == 7:\n        return False\n    if a == 8:\n        return False\n    if a == 9:\n        return False\n    if a == 10:\n        return False\n    if a == 11:\n        return False\n    if a == 12:\n        return False\n    if a == 13:\n        return False\n    if a == 14:\n        return False\n    if a == 15:\n        return False\n    if a == 16:\n        return False\n    if a == 17:\n        return False\n    if a == 18:\n        return False\n    if a == 19:\n        return False\n    if a == 20:\n        return False\n    if a == 21:\n        return False\n    if a == 22:\n        return False\n    if a == 23:\n        return False\n    if a == 24:\n        return False\n    if a == 25:\n        return False\n    if a == 26:\n        return False\n    if a == 27:\n        return False\n    if a == 28:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, str):\n        return False\n    elif isinstance(a, unicode):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, tuple):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, list):\n        raise TypeError(\"Expected a list of integers\")\n    if not isinstance(a, tuple):\n        raise TypeError(\"Expected a tuple of integers\")\n    if not isinstance(a, float):\n        raise TypeError(\"Expected a float\")\n    if not isinstance(a, int64):\n        raise TypeError(\"Expected an int64\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int64):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int)", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        return False\n    if a > 0:\n        return True\n    return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, str):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, tuple):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return a in range(1,64)", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    if a < 0:\n        raise TypeError('Input must be positive')\n    if a > 1:\n        raise TypeError('Input must be negative')\n    if a == 0:\n        return True\n    if a == 1:\n        return False\n    if a == 2:\n        return True\n    if a == 3:\n        return False\n    if a == 4:\n        return False\n    if a == 5:\n        return False\n    if a == 6:\n        return False\n    if a == 7:\n        return False\n    if a == 8:\n        return False\n    if a == 9:\n        return False\n    if a == 10:\n        return False\n    if a == 11:\n        return False\n    if a == 12:\n        return False\n    if a == 13:\n        return False\n    if a == 14:\n        return False\n    if a == 15:\n        return False\n    if a == 16:\n        return False\n    if a == 17:\n        return False\n    if a == 18:\n        return False\n    if a == 19:\n        return False\n    if a == 20:\n        return False\n    if a == 21:\n        return False\n    if a == 22:\n        return False\n    if a == 23:\n        return False\n    if a == 24:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, bool):\n        return False\n    else:\n        raise TypeError(\"Expected integer or float to be a cube of integer or bool type\")\n    return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError('Input must be positive')\n    if a > 0:\n        return True\n    if a == 0:\n        return False\n    if a == 1:\n        return True\n    if a == 2:\n        return False\n    if a == 3:\n        return False\n    if a == 4:\n        return False\n    if a == 5:\n        return False\n    if a == 6:\n        return False\n    if a == 7:\n        return False\n    if a == 8:\n        return False\n    if a == 9:\n        return False\n    if a == 10:\n        return False\n    if a == 11:\n        return False\n    if a == 12:\n        return False\n    if a == 13:\n        return False\n    if a == 14:\n        return False\n    if a == 15:\n        return False\n    if a == 16:\n        return False\n    if a == 17:\n        return False\n    if a == 18:\n        return False\n    if a == 19:\n        return False\n    if a == 20:\n        return False\n    if a == 21:\n        return False\n    if a == 22:\n        return False\n    if a == 23:\n        return False\n    if a == 24:\n        return False\n    if a == 25:\n        return False\n    if a == 26:\n        return False\n    if a == 27:\n        return False\n    if a == 28", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, long64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, long):", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int64):\n        raise TypeError(\"Expected an integer64\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int64):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, int):\n        raise Type", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple of integers')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple of integers')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple of integers')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, bool):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a > 1:\n        raise ValueError('Invalid integer')\n    if a % 2:\n        raise ValueError('Invalid integer')\n    if a % 4:\n        raise ValueError('Invalid integer')\n    if a % 8:\n        raise ValueError('Invalid integer')\n    if a % 16:\n        raise ValueError('Invalid integer')\n    if a % 24:\n        raise ValueError('Invalid integer')\n    if a % 32:\n        raise ValueError('Invalid integer')\n    if a % 64:\n        raise ValueError('Invalid integer')\n    if a % 256:\n        raise ValueError('Invalid integer')\n    if a % 512:\n        raise ValueError('Invalid integer')\n    if a % 1024:\n        raise ValueError('Invalid integer')\n    if a % 2048:\n        raise ValueError('Invalid integer')\n    if a % 4096:\n        raise ValueError('Invalid integer')\n    if a % 8192:\n        raise ValueError('Invalid integer')\n    if a % 2048:\n        raise ValueError('Invalid integer')\n    if a % 1024:\n        raise ValueError('Invalid integer')\n    if a % 2048:\n        raise ValueError('Invalid integer')\n    if a % 1024:\n        raise", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, bool):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == -1:\n        return False\n    if a == 0:\n        return True\n    if a == 1:\n        return False\n    if a == 2:\n        return True\n    if a == 3:\n        return False\n    if a == 4:\n        return False\n    if a == 5:\n        return False\n    if a == 6:\n        return False\n    if a == 7:\n        return False\n    if a == 8:\n        return False\n    if a == 9:\n        return False\n    if a == 10:\n        return False\n    if a == 11:\n        return False\n    if a == 12:\n        return False\n    if a == 13:\n        return False\n    if a == 14:\n        return False\n    if a == 15:\n        return False\n    if a == 16:\n        return False\n    if a == 17:\n        return False\n    if a == 18:\n        return False\n    if a == 19:\n        return False\n    if a == 20:\n        return False\n    if a == 21:\n        return False\n    if a == 22:\n        return False\n    if a == 23:\n        return False\n    if a == 24:\n        return False\n    if a == 25:\n        return False\n    if a == 26:\n        return False\n    if a == 27:\n        return False\n    if a == 28:\n        return False\n    if a == 29:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return False\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return a in range(1,64)", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, str):\n        return False\n    elif isinstance(a, unicode):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, tuple):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple of integers')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, bool):\n        raise TypeError('Expected a bool')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple of integers')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, bool):\n        raise TypeError('Expected a bool')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected a int')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, bool):\n        raise TypeError('Expected a bool')\n    if not isinstance(a, int):\n        raise TypeError('Expected a int')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple')\n    if not isinstance(a, int):\n        raise TypeError('Expected a int')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, bool):\n        raise TypeError('", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if not isinstance(a, list):\n        raise TypeError(\"Expected a list of integers\")\n    if not isinstance(a, tuple):\n        raise TypeError(\"Expected a tuple of integers\")\n    if not isinstance(a, float):\n        raise TypeError(\"Expected a float\")\n    if not isinstance(a, int64):\n        raise TypeError(\"Expected an int64\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an int\")\n    if not isinstance(a, int64):\n        raise TypeError(\"Expected an int\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an int\")\n    if not isinstance(a, int64):\n        raise TypeError(\"Expected an int\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an int\")\n    if not isinstance(a, int64):\n        raise TypeError(\"Expected an int\")\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an int\")\n    if not isinstance(a,", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer, got %s\" % a)\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, long64):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, long64):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, bool):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, str):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, tuple):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, bool):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    if isinstance(a, float):\n        return False\n    if isinstance(a, str):\n        return False\n    if isinstance(a, unicode):\n        return False\n    if isinstance(a, bool):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, float):\n        return False\n    if isinstance(a, str):\n        return False\n    if isinstance(a, unicode):\n        return False\n    if isinstance(a, bool):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, float):\n        return False\n    if isinstance(a, str):\n        return False\n    if isinstance(a, unicode):\n        return False\n    if isinstance(a, bool):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, float):\n        return False\n    if isinstance(a, str):\n        return False\n    if isinstance(a, unicode):\n        return False\n    if isinstance(a, bool):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        return False\n    if a > 0:\n        return True\n    return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, tuple):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        return False\n    if a > 0:\n        return True\n    return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, long64):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, long64):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, long64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, long64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, long64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, long64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, long64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, long64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, long64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, long)", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, long64):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, long):", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return a in range(1,64)", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    if not isinstance(a, float):\n        raise TypeError('Input must be a float')\n    if not isinstance(a, long):\n        raise TypeError('Input must be a long')\n    if not isinstance(a, int64):\n        raise TypeError('Input must be an int64')\n    if not isinstance(a, long64):\n        raise TypeError('Input must be a long64')\n    if not isinstance(a, int):\n        raise TypeError('Input must be an int')\n    if not isinstance(a, long):\n        raise TypeError('Input must be a long')\n    if not isinstance(a, int64):\n        raise TypeError('Input must be an int64')\n    if not isinstance(a, long64):\n        raise TypeError('Input must be a long64')\n    if not isinstance(a, int):\n        raise TypeError('Input must be an int')\n    if not isinstance(a, long):\n        raise TypeError('Input must be a long')\n    if not isinstance(a", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        return False\n    if a > 0:\n        return True\n    return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, bool):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, long long):\n        return False\n    elif isinstance(a, long long long):\n        return False\n    elif isinstance(a, long long long):\n        return False\n    elif isinstance(a, long long):\n        return False\n    elif isinstance(a, long long long):\n        return False\n    elif isinstance(a, long long):\n        return False\n    elif isinstance(a, long long long):\n        return False\n    elif isinstance(a, long long):\n        return False\n    elif isinstance(a, long long long):\n        return False\n    elif isinstance(a, long long):\n        return False\n    elif isinstance(a, long long long):\n        return False\n    elif isinstance(a, long long):\n        return False\n    elif isinstance(a, long long):\n        return False\n    elif isinstance(a, long long):\n        return False\n    elif isinstance(a, long long):\n        return False\n    elif isinstance(a, long long long):\n        return False\n    elif isinstance(a", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, str):\n        return True\n    elif isinstance(a, unicode):\n        return True\n    elif isinstance(a, bool):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return a > 0", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    if isinstance(a, float):\n        return False\n    if isinstance(a, str):\n        return False\n    if isinstance(a, unicode):\n        return False\n    if isinstance(a, bool):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, float):\n        return False\n    if isinstance(a, str):\n        return False\n    if isinstance(a, unicode):\n        return False\n    if isinstance(a, bool):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, float):\n        return False\n    if isinstance(a, str):\n        return False\n    if isinstance(a, unicode):\n        return False\n    if isinstance(a, bool):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, float):\n        return False\n    if isinstance(a, str):\n        return False\n    if isinstance(a, unicode):\n        return False\n    if isinstance(a, bool):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, str):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, tuple):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        return False\n    if a > 0:\n        return True\n    return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return False\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, str):\n        return False\n    elif isinstance(a, unicode):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, tuple):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple of integers')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, bool):\n        raise TypeError('Expected a bool')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple of integers')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, bool):\n        raise TypeError('Expected a bool')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    if a < 0:\n        raise TypeError(\"Expected an integer\")\n    if a > 64:\n        raise TypeError(\"Expected an integer\")\n    if a > 0:\n        raise TypeError(\"Expected an integer\")\n    if a < 0:\n        raise TypeError(\"Expected an integer\")\n    if a > 64:\n        raise TypeError(\"Expected an integer\")\n    if a > 0:\n        raise TypeError(\"Expected an integer\")\n    if a < 0:\n        raise TypeError(\"Expected an integer\")\n    if a > 64:\n        raise TypeError(\"Expected an integer\")\n    if a > 0:\n        raise TypeError(\"Expected an integer\")\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, bool):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if a < 0:\n        raise TypeError('Expected an integer')\n    if a > 64:\n        raise TypeError('Expected an integer')\n    if a < 0:\n        raise TypeError('Expected an integer')\n    if a > 0:\n        raise TypeError('Expected an integer')\n    if a < 0:\n        raise TypeError('Expected an integer')\n    if a > 0:\n        raise TypeError('Expected an integer')\n    if a < 0:\n        raise TypeError('Expected an integer')\n    if a > 0:\n        raise TypeError('Expected an integer')\n    if a < 0:\n        raise TypeError('Expected an integer')\n    if a > 0:\n        raise TypeError('Expected an integer')\n    if a < 0:\n        raise TypeError('Expected an integer')\n    if a > 0:\n        raise TypeError('Expected an integer')\n    if a < 0:\n        raise TypeError('Expected an integer')\n    if a > 0:\n        raise TypeError('Expected an integer')\n    if a < 0:\n        raise TypeError('Expected an integer')\n    if a > 0:\n        raise TypeError(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, long64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, long64):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, long64):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, int)", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a > 64:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a > 0:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError('Invalid integer')\n    if a < 0:\n        raise ValueError", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int64):\n        raise TypeError('Expected an integer64')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int64):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise Type", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, str):\n        return True\n    elif isinstance(a, unicode):\n        return True\n    elif isinstance(a, bool):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected a integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, bool):\n        raise TypeError('Expected a bool')\n    if not isinstance(a, int64):\n        raise TypeError('Expected a int64')\n    if not isinstance(a, int):\n        raise TypeError('Expected a int')\n    if not isinstance(a, int64):\n        raise TypeError('Expected a int')\n    if not isinstance(a, int):\n        raise TypeError('Expected a int')\n    if not isinstance(a, int64):\n        raise TypeError('Expected a int')\n    if not isinstance(a, int):\n        raise TypeError('Expected a int')\n    if not isinstance(a, int):\n        raise TypeError('Expected a int')\n    if not isinstance(a, int):\n        raise", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, bool):\n        return True\n    elif isinstance(a, str):\n        return True\n    elif isinstance(a, unicode):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple of integers')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, int64):\n        raise TypeError('Expected an int64')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int64):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int)", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple of integers')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, bool):\n        raise TypeError('Expected a bool')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple of integers')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, bool):\n        raise TypeError('Expected a bool')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError(\"Input must be positive\")\n    if a > 1:\n        raise ValueError(\"Input must be negative\")\n    if a == 0:\n        return True\n    if a == 1:\n        return False\n    if a == 2:\n        return True\n    if a == 3:\n        return False\n    if a == 4:\n        return False\n    if a == 5:\n        return False\n    if a == 6:\n        return False\n    if a == 7:\n        return False\n    if a == 8:\n        return False\n    if a == 9:\n        return False\n    if a == 10:\n        return False\n    if a == 11:\n        return False\n    if a == 12:\n        return False\n    if a == 13:\n        return False\n    if a == 14:\n        return False\n    if a == 15:\n        return False\n    if a == 16:\n        return False\n    if a == 17:\n        return False\n    if a == 18:\n        return False\n    if a == 19:\n        return False\n    if a == 20:\n        return False\n    if a == 21:\n        return False\n    if a == 22:\n        return False\n    if a == 23:\n        return False\n    if a == 24:\n        return False\n    if a == 25:\n        return False\n    if a == 26:\n        return False\n    if a == 27:", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return False\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError(\"Input must be a positive integer\")\n    if a > 64:\n        raise ValueError(\"Input must be a positive integer\")\n    if a > 0:\n        return True\n    if a < 0:\n        return False\n    if a > 0:\n        return False\n    if a < 0:\n        return False\n    if a > 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a > 64:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a > 0:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a < 0:\n        raise ValueError", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    if isinstance(a, float):\n        return True\n    if isinstance(a, long):\n        return True\n    if isinstance(a, int64):\n        return True\n    if isinstance(a, long64):\n        return True\n    if isinstance(a, long):\n        return True\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int64):\n        return False\n    if isinstance(a, long):\n        return False\n    if isinstance(a, long64):\n        return False\n    if isinstance(a, int):\n        return True\n    if isinstance(a, int64):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int64):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int64):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, bool):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError('Input must be a positive integer')\n    if a > 0:\n        return True\n    if a == 0:\n        return False\n    return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    if not isinstance(a, float):\n        raise TypeError('Input must be a float')\n    if not isinstance(a, long):\n        raise TypeError('Input must be a long')\n    if not isinstance(a, int64):\n        raise TypeError('Input must be an int64')\n    if not isinstance(a, long64):\n        raise TypeError('Input must be a long64')\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    if not isinstance(a, int64):\n        raise TypeError('Input must be an int64')\n    if not isinstance(a, long):\n        raise TypeError('Input must be a long')\n    if not isinstance(a, int64):\n        raise TypeError('Input must be an int64')\n    if not isinstance(a, long64):\n        raise TypeError('Input must be a long64')\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    if not isinstance", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    if isinstance(a, float):\n        return False\n    if isinstance(a, long):\n        return False\n    if isinstance(a, str):\n        return False\n    if isinstance(a, unicode):\n        return False\n    if isinstance(a, bool):\n        return False\n    if isinstance(a, list):\n        return False\n    if isinstance(a, tuple):\n        return False\n    if isinstance(a, list):\n        return False\n    if isinstance(a, list):\n        return False\n    if isinstance(a, list):\n        return False\n    if isinstance(a, list):\n        return False\n    if isinstance(a, list):\n        return False\n    if isinstance(a, list):\n        return False\n    if isinstance(a, list):\n        return False\n    if isinstance(a, list):\n        return False\n    if isinstance(a, list):\n        return False\n    if isinstance(a, list):\n        return False\n    if isinstance(a, list):\n        return False\n    if isinstance(a, list):\n        return False\n    if isinstance(a, list):\n        return False\n    if isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a == 0:\n        return False\n    if a == 1:\n        return True\n    if a == 2:\n        return False\n    if a == 3:\n        return False\n    if a == 4:\n        return False\n    if a == 5:\n        return False\n    if a == 6:\n        return False\n    if a == 7:\n        return False\n    if a == 8:\n        return False\n    if a == 9:\n        return False\n    if a == 10:\n        return False\n    if a == 11:\n        return False\n    if a == 12:\n        return False\n    if a == 13:\n        return False\n    if a == 14:\n        return False\n    if a == 15:\n        return False\n    if a == 16:\n        return False\n    if a == 17:\n        return False\n    if a == 18:\n        return False\n    if a == 19:\n        return False\n    if a == 20:\n        return False\n    if a == 21:\n        return False\n    if a == 22:\n        return False\n    if a == 23:\n        return False\n    if a == 24:\n        return False\n    if a == 25:\n        return False\n    if a == 26:\n        return False\n    if a == 27:\n        return False\n    if a == 28:\n        return False\n    if a", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, longlong):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, longlong):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, longlong):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, long", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple of integers')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, bool):\n        raise TypeError('Expected a bool')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple of integers')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, bool):\n        raise TypeError('Expected a bool')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return False\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    if not isinstance(a, float):\n        raise TypeError('Input must be a float')\n    if not isinstance(a, long):\n        raise TypeError('Input must be a long')\n    if not isinstance(a, int64):\n        raise TypeError('Input must be an int64')\n    if not isinstance(a, long64):\n        raise TypeError('Input must be a long64')\n    if not isinstance(a, int):\n        raise TypeError('Input must be an int')\n    if not isinstance(a, int64):\n        raise TypeError('Input must be an int64')\n    if not isinstance(a, int):\n        raise TypeError('Input must be an int')\n    if not isinstance(a, long):\n        raise TypeError('Input must be a long')\n    if not isinstance(a, int64):\n        raise TypeError('Input must be an int64')\n    if not isinstance(a, long64):\n        raise TypeError('Input must be a long64')\n    if not isinstance", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a > 1:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        return False\n    if a > 0:\n        return True\n    return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    if a < 0:\n        raise ValueError('Input must be positive')\n    if a > 1:\n        raise ValueError('Input must be negative')\n    if a == 0:\n        return True\n    if a == 1:\n        return False\n    if a == 2:\n        return True\n    if a == 3:\n        return False\n    if a == 4:\n        return True\n    if a == 5:\n        return False\n    if a == 6:\n        return False\n    if a == 7:\n        return False\n    if a == 8:\n        return False\n    if a == 9:\n        return False\n    if a == 10:\n        return False\n    if a == 11:\n        return False\n    if a == 12:\n        return False\n    if a == 13:\n        return False\n    if a == 14:\n        return False\n    if a == 15:\n        return False\n    if a == 16:\n        return False\n    if a == 17:\n        return False\n    if a == 18:\n        return False\n    if a == 19:\n        return False\n    if a == 20:\n        return False\n    if a == 21:\n        return False\n    if a == 22:\n        return False\n    if a == 23:\n        return False\n    if a == 24:\n        return False\n    if a", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, longlong):\n        return True\n    elif isinstance(a, longlonglong):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, longlong):\n        return False\n    elif isinstance(a, longlong):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, longlong):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, longlong):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, longlong):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, long)", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, str):\n        return True\n    elif isinstance(a, unicode):\n        return True\n    elif isinstance(a, bool):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, bool):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, long64):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, long64):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, long64):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, long)", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a > 64:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a > 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, bool):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return a in range(1,64)", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError(\"Input must be an integer\")\n    return a in (1, 2, -1, 0, 64, 180)", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected a int, got %s' % a)\n    if not isinstance(a, list):\n        raise TypeError('Expected a list, got %s' % a)\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple, got %s' % a)\n    if not isinstance(a, float):\n        raise TypeError('Expected a float, got %s' % a)\n    if not isinstance(a, bool):\n        raise TypeError('Expected a bool, got %s' % a)\n    if not isinstance(a, int):\n        raise TypeError('Expected a int, got %s' % a)\n    if not isinstance(a, int):\n        raise TypeError('Expected a int, got %s' % a)\n    if not isinstance(a, int):\n        raise TypeError('Expected a int, got %s' % a)\n    if not isinstance(a, int):\n        raise TypeError('Expected a int, got %s' % a)\n    if not isinstance(a, int):\n        raise TypeError('Expected a int, got %s' % a)\n    if not isinstance(a, int):\n        raise TypeError('", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, bool):\n        raise TypeError('Expected a bool')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a == 0:\n        return False\n    if a == 1:\n        return True\n    if a == 2:\n        return True\n    if a == 3:\n        return True\n    if a == 4:\n        return True\n    if a == 5:\n        return True\n    if a == 6:\n        return True\n    if a == 7:\n        return True\n    if a == 8:\n        return True\n    if a == 9:\n        return True\n    if a == 10:\n        return True\n    if a == 11:\n        return True\n    if a == 12:\n        return True\n    if a == 13:\n        return True\n    if a == 14:\n        return True\n    if a == 15:\n        return True\n    if a == 16:\n        return True\n    if a == 17:\n        return True\n    if a == 18:\n        return True\n    if a == 19:\n        return True\n    if a == 20:\n        return True\n    if a == 21:\n        return True\n    if a == 22:\n        return True\n    if a == 23:\n        return True\n    if a == 24:\n        return True\n    if a == 25:\n        return True\n    if a == 26:\n        return True\n    if a == 27:\n        return True\n    if a == 28:\n        return True\n    if a", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    if a < 0:\n        raise ValueError('Input must be positive')\n    if a > 0:\n        raise ValueError('Input must be negative')\n    if a == 0:\n        return True\n    return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, tuple):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, bool):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError('Input must be an integer')\n    if a > 0:\n        return True\n    if a == 0:\n        return False\n    if a == 1:\n        return True\n    if a == 2:\n        return False\n    if a == -1:\n        return False\n    if a == 0:\n        return True\n    if a == 1:\n        return False\n    if a == 2:\n        return False\n    if a == -1:\n        return False\n    if a == 0:\n        return True\n    if a == 1:\n        return False\n    if a == 2:\n        return False\n    if a == -1:\n        return False\n    if a == 0:\n        return True\n    if a == 1:\n        return False\n    if a == 2:\n        return False\n    if a == -1:\n        return False\n    if a == 0:\n        return True\n    if a == 1:\n        return False\n    if a == 2:\n        return False\n    if a == -1:\n        return False\n    if a == 0:\n        return True\n    if a == 1:\n        return False\n    if a == 2:\n        return False\n    if a == -1:\n        return False\n    if a == 0:\n        return True\n    if a == 1:\n        return False\n    if a == 2:\n        return False\n    if a == -1:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    if a < 0:\n        raise TypeError('Input must be positive')\n    if a > 0:\n        raise TypeError('Input must be negative')\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        return False\n    if a > 0:\n        return True\n    return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError('Input must be a positive integer')\n    if a > 64:\n        raise ValueError('Input must be a positive integer')\n    if a < 0:\n        raise ValueError('Input must be a negative integer')\n    if a > 0:\n        raise ValueError('Input must be a positive integer')\n    if a < 0:\n        raise ValueError('Input must be a negative integer')\n    if a > 64:\n        raise ValueError('Input must be a negative integer')\n    if a < 0:\n        raise ValueError('Input must be a positive integer')\n    if a > 0:\n        raise ValueError('Input must be a positive integer')\n    if a < 0:\n        raise ValueError('Input must be a negative integer')\n    if a > 0:\n        raise ValueError('Input must be a positive integer')\n    if a < 0:\n        raise ValueError('Input must be a negative integer')\n    if a > 0:\n        raise ValueError('Input must be a positive integer')\n    if a < 0:\n        raise ValueError('Input must be a negative integer')\n    if a > 0:\n        raise ValueError('Input must be a positive integer')\n    if a < 0:\n        raise ValueError('Input must be a negative integer", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError(\"Integer argument must be positive\")\n    if a > 0:\n        return True\n    if a == 0:\n        return False\n    if a == 1:\n        return True\n    if a == 2:\n        return False\n    if a == -1:\n        return False\n    if a == 0:\n        return False\n    if a == 1:\n        return False\n    if a == 2:\n        return False\n    if a == -1:\n        return False\n    if a == 0:\n        return False\n    if a == 1:\n        return False\n    if a == 2:\n        return False\n    if a == -1:\n        return False\n    if a == 0:\n        return False\n    if a == 1:\n        return False\n    if a == 2:\n        return False\n    if a == -1:\n        return False\n    if a == 0:\n        return False\n    if a == 1:\n        return False\n    if a == 2:\n        return False\n    if a == -1:\n        return False\n    if a == 0:\n        return False\n    if a == 1:\n        return False\n    if a == 2:\n        return False\n    if a == -1:\n        return False\n    if a == 0:\n        return False\n    if a == 1:\n        return False\n    if a == 2:\n        return False\n    if a == -1:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple of integers')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, bool):\n        raise TypeError('Expected a bool')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a, tuple):\n        raise TypeError('Expected a tuple of integers')\n    if not isinstance(a, float):\n        raise TypeError('Expected a float')\n    if not isinstance(a, bool):\n        raise TypeError('Expected a bool')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, list):\n        raise TypeError('Expected a list of integers')\n    if not isinstance(a", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, tuple):\n        return False\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return False\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError('invalid integer')\n    if a > 1:\n        raise ValueError('invalid integer')\n    if a == 0:\n        return True\n    if a == 1:\n        return False\n    if a == 2:\n        return False\n    if a == 3:\n        return False\n    if a == 4:\n        return False\n    if a == 5:\n        return False\n    if a == 6:\n        return False\n    if a == 7:\n        return False\n    if a == 8:\n        return False\n    if a == 9:\n        return False\n    if a == 10:\n        return False\n    if a == 11:\n        return False\n    if a == 12:\n        return False\n    if a == 13:\n        return False\n    if a == 14:\n        return False\n    if a == 15:\n        return False\n    if a == 16:\n        return False\n    if a == 17:\n        return False\n    if a == 18:\n        return False\n    if a == 19:\n        return False\n    if a == 20:\n        return False\n    if a == 21:\n        return False\n    if a == 22:\n        return False\n    if a == 23:\n        return False\n    if a == 24:\n        return False\n    if a == 25:\n        return False\n    if a == 26:\n        return False\n    if a == 27:\n        return False\n    if", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, str):\n        return True\n    elif isinstance(a, unicode):\n        return True\n    elif isinstance(a, bool):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, bool):\n        return True\n    else:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, list):\n        return True\n    elif isinstance(a, tuple):\n        return True\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, tuple):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, str):\n        return False\n    elif isinstance(a, unicode):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, str):\n        return False\n    elif isinstance(a, unicode):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, str):\n        return False\n    elif isinstance(a, unicode):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, str):\n        return False\n    elif isinstance(a, unicode):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a > 1:\n        raise ValueError('Invalid argument')\n    if a == 0:\n        return True\n    if a == 1:\n        return False\n    if a == 2:\n        return True\n    if a == 3:\n        return False\n    if a == 4:\n        return False\n    if a == 5:\n        return False\n    if a == 6:\n        return False\n    if a == 7:\n        return False\n    if a == 8:\n        return False\n    if a == 9:\n        return False\n    if a == 10:\n        return False\n    if a == 11:\n        return False\n    if a == 12:\n        return False\n    if a == 13:\n        return False\n    if a == 14:\n        return False\n    if a == 15:\n        return False\n    if a == 16:\n        return False\n    if a == 17:\n        return False\n    if a == 18:\n        return False\n    if a == 19:\n        return False\n    if a == 20:\n        return False\n    if a == 21:\n        return False\n    if a == 22:\n        return False\n    if a == 23:\n        return False\n    if a == 24:\n        return False\n    if a == 25:\n        return False\n    if a == 26:\n        return False\n    if a == 27:\n        return False\n    if", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return True\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False\n    if a < 0:\n        return False\n    if a > 1:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, long64):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, long64):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int64):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, int):", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return a in range(1,64)", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    if isinstance(a, float):\n        return False\n    if isinstance(a, long):\n        return False\n    if isinstance(a, longlong):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, long):\n        return False\n    if isinstance(a, longlong):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, long):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, str):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, tuple):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, longlong):\n        return False\n    elif isinstance(a, longlonglong):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, longlong):\n        return False\n    elif isinstance(a, longlonglong):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, longlong):\n        return False\n    elif isinstance(a, longlonglong):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, longlong):\n        return False\n    elif isinstance(a, longlonglong):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, longlong):\n        return False\n    elif isinstance(a, longlonglong):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, longlong):\n        return False\n    elif isinstance(a, longlong):\n        return", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, long64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, long64):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, long64):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int)", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError(\"Expected an integer\")\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int64):\n        raise TypeError('Expected an integer64')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int64):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    if not isinstance(a, int):\n        raise Type", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, long64):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, long):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, long64):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int64):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int):\n        return True\n    elif isinstance(a, int):", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a > 64:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a > 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a < 0:\n        raise ValueError", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Expected an integer')\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, str):\n        return False\n    elif isinstance(a, unicode):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, str):\n        return False\n    elif isinstance(a, unicode):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, str):\n        return False\n    elif isinstance(a, unicode):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, int):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, str):\n        return False\n    elif isinstance(a, unicode):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    elif isinstance(a, float):\n        return False\n    elif isinstance(a, long):\n        return False\n    elif isinstance(a, str):\n        return False\n    elif isinstance(a, bool):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, tuple):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(a, list):\n        return False\n    elif isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    if isinstance(a, float):\n        return False\n    if isinstance(a, str):\n        return False\n    if isinstance(a, unicode):\n        return False\n    if isinstance(a, bool):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, float):\n        return False\n    if isinstance(a, str):\n        return False\n    if isinstance(a, unicode):\n        return False\n    if isinstance(a, bool):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, float):\n        return False\n    if isinstance(a, str):\n        return False\n    if isinstance(a, unicode):\n        return False\n    if isinstance(a, bool):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, float):\n        return False\n    if isinstance(a, str):\n        return False\n    if isinstance(a, unicode):\n        return False\n    if isinstance(a, bool):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a == 0:\n        return True\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return False\n    elif a == 4:\n        return False\n    elif a == 5:\n        return False\n    elif a == 6:\n        return False\n    elif a == 7:\n        return False\n    elif a == 8:\n        return False\n    elif a == 9:\n        return False\n    elif a == 10:\n        return False\n    elif a == 11:\n        return False\n    elif a == 12:\n        return False\n    elif a == 13:\n        return False\n    elif a == 14:\n        return False\n    elif a == 15:\n        return False\n    elif a == 16:\n        return False\n    elif a == 17:\n        return False\n    elif a == 18:\n        return False\n    elif a == 19:\n        return False\n    elif a == 20:\n        return False\n    elif a == 21:\n        return False\n    elif a == 22:\n        return False\n    elif a == 23:\n        return False\n    elif a == 24:\n        return False\n    elif a == 25:\n        return False\n    elif a == 26:\n        return False\n    elif a == 27:\n        return False\n    elif a == 28:\n        return False\n    elif a == 29:\n        return False\n    elif a == 30:\n        return False", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return a == 1", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    if a < 0:\n        raise ValueError('Input must be positive')\n    if a > 0:\n        raise ValueError('Input must be negative')\n    if a == 0:\n        return True\n    if a == 1:\n        return False\n    if a == 2:\n        return True\n    if a == 3:\n        return False\n    if a == 4:\n        return False\n    if a == 5:\n        return False\n    if a == 6:\n        return False\n    if a == 7:\n        return False\n    if a == 8:\n        return False\n    if a == 9:\n        return False\n    if a == 10:\n        return False\n    if a == 11:\n        return False\n    if a == 12:\n        return False\n    if a == 13:\n        return False\n    if a == 14:\n        return False\n    if a == 15:\n        return False\n    if a == 16:\n        return False\n    if a == 17:\n        return False\n    if a == 18:\n        return False\n    if a == 19:\n        return False\n    if a == 20:\n        return False\n    if a == 21:\n        return False\n    if a == 22:\n        return False\n    if a == 23:\n        return False\n    if a == 24:\n        return False\n    if a", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if isinstance(a, int):\n        return True\n    if isinstance(a, float):\n        return False\n    if isinstance(a, long):\n        return False\n    if isinstance(a, longlong):\n        return False\n    if isinstance(a, long):\n        return False\n    if isinstance(a, longlong):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, long):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if isinstance(a, int):\n        return False\n    if", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if not isinstance(a, int):\n        raise TypeError('Input must be an integer')\n    if not isinstance(a, float):\n        raise TypeError('Input must be a float')\n    if not isinstance(a, long):\n        raise TypeError('Input must be a long')\n    if not isinstance(a, int64):\n        raise TypeError('Input must be an int64')\n    if not isinstance(a, int):\n        raise TypeError('Input must be an int')\n    if not isinstance(a, int64):\n        raise TypeError('Input must be an int')\n    if not isinstance(a, int):\n        raise TypeError('Input must be an int')\n    if not isinstance(a, int):\n        raise TypeError('Input must be an int')\n    if not isinstance(a, int):\n        raise TypeError('Input must be an int')\n    if not isinstance(a, int):\n        raise TypeError('Input must be an int')\n    if not isinstance(a, int):\n        raise TypeError('Input must be an int')\n    if not isinstance(a, int):", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    if a < 0:\n        raise ValueError('Invalid argument')\n    if a > 64:\n        raise ValueError('Invalid argument')\n    if a > 0:\n        return True\n    if a < 0:\n        return False\n    if a > 64:\n        return False\n    if a > 0:\n        return False\n    if a < 0:\n        return False\n    if a > 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a < 0:\n        return False\n    if a <", "def iscube(a):\n    '''\n    Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False\n    '''\n    return True"]]