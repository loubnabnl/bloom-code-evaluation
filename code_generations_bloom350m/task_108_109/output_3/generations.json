[["def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    #-----------------------------\n    # Return an array of the right length, where the first digit of the\n    # largest value is returned in the first place.\n    #-----------------------------\n    res = []\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            res.append((arr[i], arr[i]))\n        else:\n            res.append(0)\n    #-----------------------------\n    # Returns the first element which has a sum of digits > 0\n    #-----------------------------\n    for i in range(len(res)):\n        if i == 0:\n            return res[0]\n        else:\n            return res[-1]\n    #-----------------------------\n    # Return the first element which has a sum of digits < 0\n    #-----------------------------\n    for i in range(len(res)):\n        if i == len(res):\n            return res[i]\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        if not all(isinstance(n, int) for n in arr):\n            raise TypeError('array must be a list or array-like object')\n        count = 0\n        for i in range(len(arr)):\n            if len(arr[i]) == 0:\n                count += 1\n                break\n            else:\n                count += 1\n                break\n    elif isinstance(arr, (int, long)):\n        if not all(isinstance(n, int) for n in arr):\n            raise TypeError('array must be a list or an int-like object')\n        count = 0\n        for i in range(len(arr)):\n            if arr[i] <= 0 and arr[i]!= -1:\n                count += 1\n        return count\n    elif isinstance(arr, (float, long)):\n        if not all(isinstance(n, int) for n in arr):\n            raise TypeError('array must be a list or an int-like object')\n        count = 0\n        for i in range(len(arr)):\n            if arr[i] == 0 and arr[i]!= -1:\n                count += 1\n        return count\n    elif isinstance(arr, str):\n        if not all", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return array.sum(arr) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    assert len(arr) == 2\n    print('count_nums(', len(arr) > 0? ')' : '', ')')\n    for i in range(len(arr)):\n        i_signed = i & 1\n        i_sign = i_signed >> 1\n        i_signed = i_signed - 1\n        print('    '* 32, i_signed, ')', i_sign, ')')\n    print('count_nums(', len(arr) > 0? ',' : '', ')')\n    for i in range(len(arr)):\n        i = i + 1\n        i_signed = i_signed >> 1\n        i_signed = i_signed - 1\n        print('    '* 32, i, ')', i_signed, ')')\n    print('count_nums(', len(arr) > 0? ',' : '', ')')\n    for i in range(len(arr)):\n        i = i - 1\n        i_signed = i_signed >> 1\n        i_signed = i_signed - 1\n        print('    '* 32, i, ')", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count_nums(arr)\n  def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([-1, 11, -11]) == 0\n    >>> count_nums([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    i = 0\n    for num in range(0, len(arr)):\n        if num > 0:\n            i = i + 1\n        else:\n            print('count_nums function failed!', num)\n            return i\n\n    # Return the sum of digits\n    sum = 0\n    digits = []\n    for i in range(i + 1, len(arr)):\n        digits.append(arr[i])\n    for num in digits:\n        sum += num\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in arr:\n        if i < 0:\n            return (i % 2) + 1\n        else:\n            return (i * 2) + 1\n\n    count_nums = count_nums.__name__.replace('.', '-')\n    if len(arr) == 0:\n        return 0\n    else:\n        return count_nums(arr) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count_nums = function():\n        sum = []\n        while len(arr) > 0:\n            sum.append(arr[0])\n        sum = sum.flatten()\n        return sum.sum()\n\n    # for the function to work\n    if len(arr) > 0:\n        sum = count_nums(arr)\n        print(\"sum: \" + str(sum))\n        return sum.sum()\n\n    # for the function to work\n    if sum.sum() < 0:\n        raise ValueError('Number is negative')\n\n    return sum.sum()", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    # compute the sum of digits\n    digits = []\n    for i in range(len(arr)):\n        digits.append(arr[i].sum(axis=1))\n\n    return digits", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return int(count_nums(arr)) * 100", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # TODO: change the int* to an array.\n    if len(arr)!= 1:\n        return 0\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    return sum(range(int(arr[0]) + 1), 1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    n = len(arr)\n\n    if n >= 1:\n        return arr.count(n - 1)\n\n    count_nums = []\n    for i in range(0, n):\n        n--\n        if arr[i] < 0 or arr[i] >= len(arr) - 1:\n            continue\n        count_nums.append(arr[i])\n        if n == i:\n            count_nums.append(-1)\n        else:\n            count_nums.append(arr[i])\n\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for n in arr:\n        if n == -1:\n            return n\n        elif n == 11:\n            return n + 1\n        elif n >= 11:\n            return n - 1\n        elif n < -1:\n            return -(n + 1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 6:\n        return 1\n    if len(arr) < 6:\n        return sum(arr) - 1\n    if len(arr) < 6:\n        return arr[0]\n    if len(arr) < 6:\n        return arr[1]\n    if len(arr) < 6:\n        return arr[2]\n    if len(arr) < 6:\n        return arr[3]\n    if len(arr) < 6:\n        return arr[4]\n    if len(arr) < 6:\n        return arr[5]\n    if len(arr) < 6:\n        return arr[6]\n    if len(arr) < 6:\n        return arr[7]\n    return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    print 'count_nums(', arr, ')'\n    nums = []\n    for i in range(len(arr)):\n        if not arr[i] >= 0:\n            nums.append(arr[i])\n        else:\n            print '- ', nums\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for i in range(len(arr)):\n        if (arr[i] & 1) == 0:\n            count += 1\n        else:\n            count -= 1\n    if count!= 0:\n        print('Found')\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    nums = np.array(arr)\n    return np.sum(nums, axis=1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    try:\n        return count_nums(arr)\n    except ValueError:\n        return 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    s = ''\n    for i in range(len(arr)):\n        s += arr[i]\n    return s", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return arr\n    if isinstance(arr, str):\n        return arr[:-1]\n    count_nums = []\n    for i in range(len(arr)):\n        if arr[i] == -1:\n            count_nums.append(count_nums.count(arr))\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(arr.count()):\n        if arr[i]!= 0:\n            return arr[i]\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if 0 in arr else arr[ord(arr[0])] * arr[ord(arr[1])] + arr[ord(arr[2])]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Sort the array by first digit\n    nums = array_to_int(arr)\n    nums.sort()\n    nums.reverse()\n    sum = 0\n    for num in nums:\n        if nums[-1]!= '-':\n            sum += nums[-1]\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for value in arr:\n        if value > 0:\n            return value / 1000\n        else:\n            return 0\n\n    count_nums([])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2], -1)\n    count_nums([1, 1, 2], -1, -1)\n    count_nums([1, 1, 2], -1, -1, -1)\n    count_nums([1, 1, 2], -1, -1, -1)\n    count_nums([1, 1, 2], -1, -1, -1)\n    count_nums([1, 1, 2], -1, -1, -1)\n    count_nums([1, 1, 2], -1, -1, -1)\n    count_nums([1, 1, 2], -1, -1, -1, -1)\n    count_nums([1, 1, 2], -1, -1, -1, -1)\n    count_nums([1, 1, 2], -1, -1, -1, -1)\n    count_nums([1, 1, 2], -1, -1, -1, -1, -1)\n    count_nums([1, 1, 2], -1, -1, -1, -1, -1)\n    count_nums([1, 1, 2], -1, -1, -1, -1,", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= len(count_nums(arr)):\n        raise TypeError('array must have a non-negative length: %s' % len(arr))\n    return count_nums(arr) % len(count_nums(arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        result = 0\n        for j in range(0, len(arr)):\n            if arr[i][j] > 0:\n                result += arr[i][j]\n            else:\n                result += arr[i][j]\n        if result < 0:\n            break\n        arr.append(result)\n    return len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for num in arr:\n        nums.append((num, 0))\n    return max(signed(nums)) - 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        # For integers, return the sum of digits:\n        return sum(arr)\n    elif isinstance(arr, int):\n        return sum(arr)[::-1]\n    else:\n        raise TypeError(\"Expected a list or int, got %s\" % type(arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i])\n\n    if nums[0] < 0:\n        nums.pop(0)\n    return sum(nums) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return arr[0]\n    else:\n        if arr[0] == 0:\n            return 1\n        else:\n            if arr[0] == -1:\n                return -1\n            else:\n                if arr[0] == -1:\n                    return 1\n                else:\n                    return -1 * arr[0] + 1\n\n    # Remove all negative numbers from arr\n    while arr[0] < 0:\n        arr.pop()\n    # Count the elements in arr\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return int(arr[0]) + int(arr[1]) + int(arr[2])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return float(count_nums(arr) / 100.0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    sum = 0\n    for i in range(0, len(arr)):\n        sum += arr[i]\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def func(x):\n        if x == '-':\n            return'- '\n        if x == '1':\n            return''\n        if x == '2':\n            return''\n        if x == '3':\n            return''\n        return''\n\n    def count_nums_ns(arr):\n        \"\"\"\n        Count the number of elements in an array whose sum of digits is\n        greater than zero. If the sum is negative, then its first signed digit\n        will be negative:\n        >>> count_nums_ns([]) == 0\n        >>> count_nums_ns([-1, 11, -11]) == 1\n        >>> count_nums_ns([1, 1, 2]) == 3\n        >>> count_nums_ns([1, 1, 2]) == 3\n        >>> count_nums_ns([1, 1, 2]) == 0\n        >>> count_nums_ns([-1, 11, -11]) == 1\n        >>> count_nums_ns([1, 1, 2]) == 3\n        >>> count_nums_ns([1, 1, 2]) == 3\n        >>> count_nums_ns([1, 1, 2]) == 3\n        >>> count_nums_ns([1, 1,", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return function(arr):\n        count = 0\n        for i in range(arr.count):\n            if arr.sum(0) > 0:\n                count += i\n        return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    try:\n        return int(arr[0])\n    except ValueError:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(x) for x in arr])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        count_nums(arr, 0)\n    elif isinstance(arr, int):\n        count_nums(arr, 1)\n    else:\n        count_nums(arr, 0)\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            return i\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            if arr[i+1] > 0:\n                return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        raise ValueError(\"size must be positive\")\n    if len(arr)!= 1:\n        raise ValueError(\"size must be one\")\n\n    if len(arr)!= 2:\n        raise ValueError(\"size must be two\")\n    nums = []\n    for i in range(0, len(arr)):\n        nums.append(arr[i])\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for i in range(arr.count(0)):\n        if arr[i] > 0:\n            n += 1\n        else:\n            n = n + 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        for item in arr:\n            if item[0] < 0:\n                count_nums([item[1]])\n                count_nums([item[2]])\n            elif item[0] > 0:\n                count_nums([item[1]])\n            elif item[1] < 0:\n                count_nums([item[2]])\n                count_nums([item[1]])\n            elif item[1] > 0:\n                count_nums([item[2]])\n            else:\n                count_nums([item[1]])\n\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = []\n    for i in range(len(arr)):\n        result.append(arr[i])\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(x) for x in arr], 0)\n\n    def add(a, b):\n        \"\"\"\n        Add two numbers and return the sum of their digits.\n        >>> add([-1, -1, -1, 11, -1, 11, -1, 11, -1, 11, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = len(arr)\n    for i in xrange(n):\n        if arr[i]!= 0:\n            if arr[i] < 0:\n                raise ValueError(\"zero element.\")\n            else:\n                return arr[i]\n        return arr[i]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr)!= 1:\n        return -1\n\n    count = 0\n    for i in range(0, len(arr)):\n        if arr[i] < 0:\n            count += 1\n        else:\n            count -= 1\n    if count > 0:\n        return (arr[count] < 0)? -1 : (arr[count] > 0)\n\n    if len(arr) == 1:\n        return 1\n    if len(arr)!= 3:\n        return -1\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    ret = 0\n    for num in range(len(arr)):\n        try:\n            ret += int(arr[num])\n            if ret > 0:\n                break\n        except ValueError:\n            pass\n\n    if ret < 0:\n        raise ValueError(\"Number of negative digits must be positive\")\n    return ret", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(x) for x in arr]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i, a in enumerate(arr):\n        if a == -123:\n            nums[i] = 0\n        elif a == -1:\n            nums[i] = 0\n        elif a == 0:\n            nums[i] = 0\n        elif a == 11:\n            nums[i] = 0\n        elif a == 1:\n            nums[i] = 0\n        elif a == 2:\n            nums[i] = 0\n        elif a == 3:\n            nums[i] = 0\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(arr.length):\n        nums.append(arr[i])\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    count_nums = []\n    for i in xrange(len(arr)):\n        if arr[i] >= 0:\n            count_nums.append(int(arr[i] + 1))\n        else:\n            count_nums.append(0)\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) > 0:\n        return count_nums(arr)\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(0, len(arr)):\n        if arr[i] > 0:\n            nums[i] = arr[i]\n        else:\n            nums[i] = 0\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        return array.count_nums(arr)\n    if not isinstance(arr, list):\n        return []\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n, sum = len(arr), 0\n    for i in range(n):\n        sum += arr[i]\n    if sum == 0:\n        return\n    if sum < 0:\n        return -1\n    if sum > 0:\n        return 1\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count_nums = np.zeros((arr.shape[0], arr.shape[1]), dtype=int)\n    for i in range(arr.shape[0]):\n        for j in range(arr.shape[1]):\n            count_nums[i][j] = arr[i, j] - arr[j]\n    count_nums = np.sum((np.argmax(count_nums) - np.argmin(count_nums)))\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = len(arr)\n    sum = 0\n    while n > 0:\n        sum += arr[n]\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    if len(arr)!= len(arr):\n        raise ValueError(\"Expected a number array: \" + str(arr))\n\n    for i in range(len(arr)):\n        sum = sum(arr[i] * arr[i+1])\n        if sum > 0:\n            return sum\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr)!= len(arr[0]):\n        raise ValueError(\"expected an array of integers but got: %d\" % len(arr))\n    if len(arr)!= len(arr[0].sum()):\n        raise ValueError(\"expected an array of integers but got: %d\" % len(arr))\n    if len(arr)!= len(arr[0]):\n        raise ValueError(\"expected an array of integers but got: %d\" % len(arr))\n\n    if len(arr) % len(arr[0].sum()) == 0:\n        return 0\n    return arr[0].sum() > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, (int, long)):\n        arr = [arr]\n    arr.sort(reverse=True)\n    nums = []\n    for i in range(len(arr)):\n        if arr[i] < -1:\n            nums.append(arr[i])\n        elif arr[i] == 0:\n            nums.append(arr[i])\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    result = 0\n    for i in range(1, len(arr)):\n        if arr[i] < 0:\n            result += 1\n        elif arr[i] == -1:\n            result -= 1\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = list(arr)\n    for i in range(len(arr)):\n        sum = arr[i]\n        if sum > 0:\n            return sum\n    return count_nums(arr)\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return count_nums(arr, -1, -1, -1, -1, -1, -1, -1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    try:\n        return np.count(arr, 1)\n    except ValueError:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        print('this function does not work with an array of integers.')\n    elif len(arr) == 2:\n        for i in range(len(arr)):\n            if arr[i] > 0:\n                return i\n    elif len(arr) == 3:\n        return 1\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    digits = 0\n    if len(arr) == 1:\n        digits = arr[0]\n    if len(arr) > 1:\n        digits = arr[0].sum(axis=-1)\n    nums = 0\n    for i in range(1, len(arr)-1):\n        nums += arr[i]\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count_nums = 0\n    for n in arr:\n        if n > 0:\n            count_nums += 1\n        else:\n            count_nums = 0\n    if count_nums > 0:\n        return count_nums\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for n in range(arr):\n        if arr[n % 3 == 0] == 0:\n            return n\n        return arr[n % 3 + 1]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(count_nums(arr)) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(arr) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        if arr.is_array():\n            return 0\n        else:\n            if isinstance(arr, dict):\n                return sum(0 for i, v in arr.items())\n            else:\n                # if not isinstance(arr, list):\n                #     return 0\n                return sum(0 for i, v in arr.items())\n            # if not isinstance(arr, tuple):\n                #     return 0\n                return sum(v for i, v in arr.items())\n        return count_nums(arr)[::-1]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # The following conditions are used to avoid complicated array\n    # comparisons.\n    s = 0\n    for a in arr:\n        if not isinstance(a, int):\n            s += a\n    if s > 0:\n        return 1\n    else:\n        return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    number = int(arr[0]) + int(arr[1])\n    if number > 0:\n        num = 0\n        for i in range(1, len(arr)):\n            num = num + number*(arr[i] - arr[i])\n            if num >= 0:\n                break\n        return num", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(int(arr[0]) for i in range(len(arr)))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        for i in range(arr.count()):\n            if arr[i]!= 0:\n                return arr[i]\n            elif arr[i] == -1:\n                return -1\n            elif arr[i] == 1:\n                return -1\n            elif arr[i] == 2:\n                return -1\n            elif arr[i] == 3:\n                return -1\n        if not arr.count():\n            return 0\n        sum = 0\n        for i in range(arr.count()):\n            sum += arr[i]\n        return sum\n\n    count_nums([1, 11, -1, 1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i].sum(0))\n        # The sum of the digits is the number of digits that have a positive\n            # value:\n            nums[nums.count(axis=0)] = nums[i] - (arr[i].sum(0) > 0)\n        return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    s = '('\n    a = ','\n    digits = ''\n    for i in range(len(arr)):\n        a = 'a' * i\n        digits = digits + digits\n    digits += digits\n    digits += s\n    digits += a\n    digits += digits\n    digits += s\n    digits += digits\n    digits += a\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits\n    digits += digits", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    return 0 if arr[0] < 0 else arr[1]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    for i in range(1, len(arr)):\n        if (arr[i] > 0 and arr[i] % 10 == 0) or (arr[i] == 0 and arr[i] > 1) or (arr[i] >= 0 and arr[i] <= 1):\n            return i\n    return 0\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        print('You must pass an array of integers')\n        return 0\n    count = 0\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            count = count + 1\n    print('Number of elements = %d' % count)\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr.has_key(0):\n        return arr[0]\n    for i in range(0, arr.count(0)):\n        if arr.count(i) == 0 or arr.count(i - 1) == 0:\n            return i\n    if arr.has_key(1):\n        return arr[1]\n    for i in range(1, arr.count(1)):\n        if arr.count(i) == 0 or arr.count(i - 1) == 0:\n            return i\n    if arr.has_key(2):\n        return arr[2]\n    for i in range(2, arr.count(2)):\n        if arr.count(i) == 0 or arr.count(i - 1) == 0:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    ret = []\n    for num in arr:\n        if num % 2 == 0:\n            ret.append(num)\n        else:\n            ret.append(int(num) / 2)\n    if ret:\n        return ret[0] + 1\n    return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    try:\n        for i in range(len(arr)):\n            if arr[i] > 0:\n                return count_nums(arr[i])\n        return -1\n    except (OverflowError, ValueError):\n        return -1\n    except (IndexError, TypeError, ValueError):\n        return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    if len(arr) > 0:\n        ret = []\n\n        for i in range(len(arr)):\n            ret.append(arr[i])\n        return ret\n\n    count_nums = lambda num: sum(num)\n\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return 0\n    for num in arr:\n        if num > 0:\n            return num\n    return 0\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([1 for i in range(arr.count(0))])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        if len(arr)!= 3:\n            raise ValueError('Number must be an array.')\n        return sum([int(x) for x in arr])\n\n    if not isinstance(arr, list):\n        raise ValueError('Array must be a list.')\n    if len(arr) == 3:\n        return count_nums(arr)\n    if len(arr)!= 2:\n        raise ValueError('Array must have a first digit and only digits >= 2.')\n    try:\n        return int(arr[0])\n    except ValueError:\n        return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) <= 1:\n        return 0\n    total = 0\n    for i in range(0, len(arr)):\n        if arr[i] > 0:\n            total += 1\n        else:\n            total -= 1\n    return total\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = len(arr)\n    if n > 0:\n        return n > 0 and arr[n] > 0 and arr[n-1] == 1 and arr[n-1] == -1\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # EXPLICITLY, we don't want to maintain a copy of arr\n    # e.g. >>> arr = np.random.randn(100, 5)\n    # >>> count_nums(arr) == 5\n    # >>> count_nums(arr) == arr[0] - arr[1]\n    if arr[0] == -1 or arr[1] == -1 or arr[0] == -1 and arr[1] == -1:\n        return 0\n    elif arr[0] == 1 or arr[1] == 1 and arr[0] == -1 and arr[1] == -1:\n        return 1\n    elif arr[0] == -1 and arr[1] == -1 and arr[0] == -1 and arr[1] == -1:\n        return -1\n    elif arr[0] == 1 and arr[1] == -1 and arr[0] == -1 and arr[1] == -1:\n        return -1\n    elif arr[0] == -1 and arr[1] == -1 and arr[0] == -1 and arr[1] == -1:\n        return -1\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 1:\n        return 0\n    for i in xrange(0, len(arr)):\n        if arr[i]!= 0:\n            if arr[i] in (0, 2):\n                return i + 1\n    return i + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for n in range(arr.shape[0]):\n        n = int(arr[n])\n        if (n < 0 or n >= 1) or n in (0, -1, 2, 3):\n            return n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return max(map(int, arr.split())) - sum(map(int, arr.split()))</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    if len(arr)!= 3:\n        raise ValueError(\"count_nums expects an array of \"\n                         \"positive integers\")\n\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            return 0\n        else:\n            if arr[i] >= len(arr):\n                return arr[i]\n    return count_nums(arr)[0] + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        return 0\n    elif arr < 0 or arr > len(arr):\n        return 0\n    elif len(arr)!= 1:\n        raise TypeError('Can only count negative numbers')\n    if len(arr)!= 1:\n        raise TypeError('Can only count negative numbers')\n    num = 0\n    for i in range(0, len(arr)):\n        if arr[i] > 0:\n            num += 1\n    if num > 0:\n        return num\n    raise TypeError('Can only count negative numbers')", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for num in range(len(arr)):\n        sum = 0\n        while num < 0:\n            num += 1\n        sum += num\n        return sum\n\n    # # Calculate the sum of all digits.\n    # First, we check if there is any negative value.\n    for num in range(len(arr)):\n        if num < 0:\n            print(\"Number {0} is negative, so it has the sum of digits -1:\".format(num))\n            break\n    # # Now check if the sum is positive.\n    for num in range(len(arr)):\n        if num > 0:\n            print(\"Number {0} is positive, so it has the sum of digits 1:\".format(num))\n            sum += num\n    # # Return the number of negative numbers.\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        return None\n    if arr[0] > 1:\n        return arr[0]\n    if arr[0] < -1:\n        return arr[0]\n    if arr[1] > 1:\n        return arr[1]\n    if arr[1] < -1:\n        return arr[1]\n    if arr[2] > 1:\n        return arr[2]\n    if arr[2] < -1:\n        return arr[2]\n    return (arr[0] + arr[1]) * 10 + (arr[2] + arr[1]) * 10 + (arr[3] + arr[2])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(x) for x in arr])\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def factorial(n):\n        return (n & 1) * factorial(n % 1)\n    # `count_nums` uses `factorial`, so for integers with sum of digits > 0,\n    # it will return the first integer that is negative:\n    # >>> factorial([1, 1, 2]) == -1\n    >>> factorial([1, 1, 3, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        if arr[0] >= 0:\n            return arr[0]\n        if arr[1] >= 0:\n            return arr[1]\n        if arr[2] >= 0:\n            return arr[2]\n        if arr[3] >= 0:\n            return arr[3]\n        if arr[4] >= 0:\n            return arr[4]\n        if arr[5] >= 0:\n            return arr[5]\n        return 0\n\n    count_nums([])\n    count_nums([])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])\n    count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return count_nums(arr)\n    elif isinstance(arr, list):\n        return count_nums(arr)\n    else:\n        raise TypeError('Invalid argument type for count_nums.')\n\n    def _count_nums(arr):\n        if isinstance(arr, (int, long)):\n            return count_nums(arr)\n        elif isinstance(arr, (str, unicode)):\n            return count_nums(arr)\n        elif isinstance(arr, tuple):\n            return count_nums(arr)\n        else:\n            return 0\n\n    count_nums = _count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        ret = 0\n        if arr[i] == 0:\n            ret += 1\n        else:\n            ret += arr[i]\n        return ret\n\n    def count_nums2(num):\n        \"\"\"\n        Write a function count_nums2 which takes an array of integers and returns\n        the number of elements which have a sum of digits > 0.\n        If a number is negative, then its first signed digit will be negative:\n        e.g. -123 has signed digits -1, 2, and 3.\n        >>> count_nums2([]) == 0\n        >>> count_nums2([-1, 11, -11]) == 1\n        >>> count_nums2([1, 1, 2]) == 3\n        >>> count_nums2([1, 2, 3]) == 2\n        >>> count_nums2([1, 3, 4]) == 0\n        >>> count_nums2([1, 3, 5, 6]) == 1\n        >>> count_nums2([1, 3, 5, 7, 8]) == 2\n        >>> count_nums2([1, 3, 5, 7, 8]) == 3\n        >>> count_nums2([1, 3, 5, 7, 8])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count_nums = []\n    for i in range(arr.shape[0]):\n        count_nums.append((arr[i],))\n    count_nums.sort()\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    if not isinstance(arr, list):\n        arr = [arr]\n\n    count = 0\n\n    for i in range(len(arr)):\n        count += arr[i]\n\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        if len(arr)!= 1:\n            return 0\n        number = int(arr[0])\n        if number % 2 == 0:\n            if number % 10 == 0:\n                return -1\n            if number % 100 == 0:\n                return 2\n        return number\n    count_nums = count_nums\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(sorted(arr)) >= 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # make sure the first digit is zero:\n    if len(arr) < 1:\n        return 0\n    for i in range(0, len(arr)):\n        if arr[i] < 0:\n            return 0\n    return sum(arr) / len(arr) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return list(range(len(arr)))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) > 1:\n        return 0\n    for i in xrange(0, len(arr)):\n        count_nums(arr[i]) >>= 1\n    return count_nums(arr) >> 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        return 0\n    if len(arr) < 6:\n        return arr[0] + 1\n    else:\n        return arr[0]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    s = ['' for _ in range(len(arr))]\n    count_nums = []\n    for i in range(len(arr)):\n        count_nums.append(s.count(arr[i]))\n    return count_nums.sum()", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i])\n    return sum(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Return the number of elements with sum of digits > 0.\n    nums = []\n    for i in range(len(arr)):\n        nums.append(int(arr[i]))\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Count numbers\n    for num in arr:\n        if num >= 0:\n            return num\n    return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError(\"Number must be int\")\n    n = len(arr)\n    for i in range(n):\n        if arr[i] >= 0:\n            return n + 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return np.sum(arr) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        for index in range(arr.count()):\n            print \"%d %d %d %s\" % (index, arr[index], arr[index][1])\n    elif isinstance(arr, int):\n        for i in range(arr):\n            print \"%d %d %d %s\" % (i, arr[i], arr[i][1])\n    else:\n        for i in range(arr):\n            print \"%d %d %d %s\" % (i, arr[i], arr[i][1], arr[i][0])\n        return len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return [sum(x) for x in arr]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return (1 * len(arr) - 1) % len(arr) * len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    d = []\n    for i in range(len(arr)):\n        d.append(arr[i] - arr[i-1])\n    return count_nums(d)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if (len(arr) == 1) else count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    while len(arr) > 0:\n        a = arr[0]\n        b = arr[1]\n        if not (a < -123) or (a > 123):\n            a = b\n        if not (b < 1) or (b > 1):\n            b = a\n        if not (a == b):\n            a = b\n        if not (a == 0):\n            a = b\n        if not (b > 0):\n            b = a\n        if a > 0:\n            if b > 0:\n                return a\n            if a <= 0:\n                return 0\n        else:\n            return -1\n\n    if len(arr) == 0:\n        return -1\n\n    count_nums = [count_nums(i) for i in arr]\n    return len(count_nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([a.sum(d) for a, d in zip(arr, arr[1:])]) / len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i]!= 0:\n            if arr[i] >= 1:\n                return i\n            else:\n                return 0\n        else:\n            return i\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    d = 0\n    for i in range(len(arr)):\n        if arr[i] > 0 and arr[i] <= 0:\n            d += 1\n        else:\n            d -= 1\n    return d", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for num in arr:\n        if num == 0:\n            return num\n        if num > 0:\n            if num == 0 and num >= 1:\n                return num\n            if num == 0 and num < -1 and num >= 0:\n                return num\n        return num\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        \"\"\"\n        Return a function that takes an array of integers and returns the\n        number of elements which has a sum of digits > 0.\n        It should be a function that returns a finite, positive integer\n        `num`, and returns zero if a negative number is found.\n        \"\"\"\n        if isinstance(arr, int):\n            num = arr\n        elif isinstance(arr, list):\n            num = arr[0]\n        else:\n            raise TypeError(\"Expected type %s to be of type int or list\" % \\\n                    type(arr))\n\n        return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if arr[i][j] == 0:\n                return j\n        return i + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        if arr[0] > 0:\n            return 0\n        else:\n            return len(arr)\n    return count_nums(arr)\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    d = 0\n    for n in range(arr.shape[0]):\n        if d < 0 or arr[n] < d:\n            d = arr[n]\n    return d", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    i, j = 0, 0\n    sum = 0\n    digits = []\n    for i in range(len(arr)):\n        for j in range(0, len(arr)):\n            if arr[i] >= arr[j]:\n                sum += arr[i]\n                digits.append(arr[i])\n                j = i\n        digits.append(arr[j])\n        if sum > 0:\n            digits.reverse()\n            i = j\n    if digits.count(0) == 0:\n        raise ValueError(\"Can not get a negative number as a result of an odd number\")\n    return sum * i", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # The first version of count_nums is very simple.  We use an empty\n    # function to write the function, and let the user write out\n    # the function to count the numbers.\n    def count_nums(arr):\n        return arr.sum(1)\n    count_nums.__name__ = 'count_nums'\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = arr[0]\n    m = arr[1]\n    for i in xrange(n):\n        if m > 0:\n            if i == 0:\n                return int(count_nums(arr))\n            return int(count_nums(arr + [-m]))\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = [int(n) for n in arr]\n    if not isinstance(nums, list):\n        nums = [int(n) for n in nums]\n    nums = max(nums)\n    if not isinstance(nums, int):\n        nums = int(nums)\n    return sum(len(n) for n in nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    number = int(arr[0])\n    if number >= 0:\n        if number % 2!= 0:\n            return number\n        return 0\n    return int(number % 2)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) > 0:\n        count_nums(arr)[0]\n        count_nums(arr)[1]\n        count_nums(arr)[2]\n        count_nums(arr)[3]\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # TODO: this can be done in a way that doesn't mutate the array\n    # too much.\n    return sum(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    assert len(arr) >= 1\n    result = 0\n    for i in range(0, len(arr)):\n        if i % 2 == 0:\n            result += arr[i]\n        else:\n            result -= arr[i]\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return str(int(arr[0]) + str(int(arr[1]) + str(int(arr[2]))))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return int(count_nums(arr))\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return\n    for i in range(len(arr)):\n        if arr[i] >= 0:\n            return i\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        return sum(i, 1)\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = len(arr)\n    if n == 0:\n        return 0\n    if n < 0:\n        return (arr[-n] * 100) / 100\n    n = int(n) - 1\n    if n >= n - 1:\n        return n - 1\n    if n >= n:\n        return n\n\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        return 0\n    result = []\n    for i in xrange(len(arr)):\n        result.append(arr[i])\n    return sum(result)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count_nums = Counter()\n    for num in range(arr.index(0)):\n        if num > 0:\n            count_nums[num] += 1\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(0, len(arr)):\n        sum = 0\n        for d in arr[i]:\n            sum += d\n\n        return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError(\"Expected an int\")\n    if not isinstance(arr[0], int):\n        raise TypeError(\"Expected an int\")\n    if not isinstance(arr[-1], int):\n        raise TypeError(\"Expected an int\")\n    if not isinstance(arr[arr.length-1], int):\n        raise TypeError(\"Expected an int\")\n    return arr.count(-1) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if len(arr) == 0 else count(arr)[0]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = [int(x) for x in arr]\n    if nums and nums[0] > 0:\n        return int(nums[-1])\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count_nums = []\n    for i in range(len(arr)):\n        count_nums.append(arr[i] * arr[i + 1])\n    count_nums = sum(count_nums)\n    return sum(count_nums) * i + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = arr\n    if nums!= None:\n        return int(sum(sorted(nums)[0], axis=0))\n\n    count_nums = lambda n: n[0]\n    return int(sum(sorted(count_nums(n)[0], axis=0)))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    return count_nums(arr, 0, 1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i, sum in enumerate(arr):\n        if sum > 0:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return 0\n    if isinstance(arr, list):\n        return len(arr) + 1\n    if isinstance(arr, tuple):\n        return arr[0]\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i])\n    return sum([int(nums)]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(x) for x in arr", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr == []:\n        return 0\n    elif arr.sum() > 0:\n        return len(arr)\n    elif arr.count(0) == -1:\n        return 0\n    else:\n        return int(arr[::-1].count(0) - arr.count(0) - 1) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i] - 1)\n        if nums[i] < 0:\n            nums[i] = 0\n    return sum(nums)\n\n    # Do a sum if the sum is negative\n    if nums == 0:\n        sum = -1\n    else:\n        sum = nums[0] + nums[1:] + nums[2:] + nums[3:]\n\n    # Return the sum\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        return\n    return sum(map(int, arr))[1]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        sum = 0\n        for j in range(1, len(arr)):\n            if sum > 0:\n                sum = sum + arr[j]\n            elif arr[j]!= -1:\n                sum = sum - arr[j]\n            elif arr[j] == -1:\n                sum = 0\n            else:\n                sum += arr[j]\n\n    if len(arr)!= 0:\n        print >> sys.stderr, \"ERROR: number count_nums takes a array of integers\"\n\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        return len(arr)\n    for i, num in enumerate(arr):\n        if num >= 0:\n            return i\n    else:\n        return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 3:\n        # digits < 0\n        return 0\n    return int(arr[0]) + int(arr[1]) + int(arr[2])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            return i\n        elif arr[i] == -1:\n            return i\n        else:\n            return arr[i] + 1\n\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for x in arr:\n        if x > 0:\n            return x / 100.0\n        else:\n            return 0.0\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= len(arr[0]):\n        raise ValueError('%d array elements cannot be the same length.' % (len(arr),))\n    if len(arr)!= len(arr[1]):\n        raise ValueError('%d array elements cannot be the same length.' % (len(arr),))\n    if len(arr)!= len(arr[2]):\n        raise ValueError('%d array elements cannot be the same length.' % (len(arr),))\n    count_nums(arr, sum = True)\n    for i, sum in enumerate(arr, sum = True):\n        count_nums(arr, i) / sum\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return\n    if len(arr)!= 1:\n        raise ValueError('Expected an array of at least two integer values.')\n    if arr[0] == '-':\n        return 0\n    else:\n        for i in range(len(arr)):\n            if arr[i] > 0:\n                return i\n        raise ValueError('Expected a number that is positive, negative, or both.')\n    count_nums(arr)\n\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i, v in enumerate(arr):\n        if v < 0:\n            return i\n        else:\n            return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    counts = []\n    for d in arr:\n        if not d.isdigit():\n            counts.append(count_nums([d]))\n        else:\n            counts.append(count_nums([d] * 2 + d * 3))\n        # The signed digits are not negative: e.g. -123 has negative signed digits -1, 2, and 3.\n    # So if the number is positive, then its first signed digit will be positive:", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        return 0\n    for i in xrange(len(arr)):\n        if arr[i] > 0:\n            return i\n    return sum(arr[i] for i in range(len(arr)))\n\n    count_nums([1, 1, 2])\n    count_nums([-1, 11, -11])\n    count_nums([1, 1, 3])\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    if not isinstance(arr, (int, long, float, complex)):\n        raise TypeError('An integer or a long must be provided.')\n\n    def f(i):\n        if isinstance(arr, int):\n            i = int(arr)\n        elif isinstance(arr, long):\n            i = int(arr * 1000)\n        elif isinstance(arr, float):\n            i = int(arr * 1024)\n        elif isinstance(arr, complex):\n            i = int(arr * 3)\n        else:\n            raise TypeError('An integer or a long must be provided.')\n\n        return i\n\n    return f", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if not is_signed(arr[0]) else len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if hasattr(arr, '__iter__'):\n        for i in range(0, len(arr)):\n            if arr[i] > 0:\n                return arr[i]\n    else:\n        for i in range(0, len(arr)):\n            if arr[i] > 0:\n                return arr[i]\n    return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # skip negative numbers and return the sum of digits\n    if len(arr)!= 1:\n        return 0\n    if arr[0] >= 0:\n        return arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] < 0:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(arr.count):\n        num = arr[i]\n        if num.isdigit():\n            num = int(num) - 1\n        if num in range(0, num.count - 1):\n            return num\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    cnt = 0\n    for i in range(len(arr)):\n        cnt += arr[i]\n    return cnt", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    n = len(arr)\n\n    return (n > 0 and 0 < n < n + 1 and n < n + 2)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([ord(s) for s in arr]) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 1:\n        raise TypeError('Expected a list of integers, received %s' % arr)\n    if not isinstance(arr[0], int):\n        raise TypeError('Expected int, received %s' % arr)\n    if not isinstance(arr, int):\n        raise TypeError('Expected int, received %s' % arr)\n    if arr[0] < 0:\n        raise TypeError('Expected negative number, received %s' % arr)\n    if not isinstance(arr[1], int):\n        raise TypeError('Expected int, received %s' % arr)\n    if not isinstance(arr[2], int):\n        raise TypeError('Expected int, received %s' % arr)\n    if not isinstance(arr[3], int):\n        raise TypeError('Expected int, received %s' % arr)\n    if not isinstance(arr[4], int):\n        raise TypeError('Expected int, received %s' % arr)\n    if not isinstance(arr[5], int):\n        raise TypeError('Expected int, received %s' % arr)\n    if not isinstance(arr[6], int):\n        raise TypeError('Expected int, received %s' % arr)\n    if not isinstance(arr[7], int):\n        raise TypeError('Expected int, received", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        return -1\n    if len(arr) > 1:\n        return 1\n    if len(arr) < 2:\n        return -1\n    if len(arr) > 1:\n        return 1\n    if len(arr) < 2:\n        return -1\n    if len(arr) > 1:\n        return 1\n    if len(arr) < 2:\n        return -1\n    if len(arr) < 3:\n        return -1\n    if len(arr) < 3:\n        return -1\n    return count_nums(arr) * 100\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def func(d):\n        sum = 0\n        d.reverse()\n        for x in range(len(arr)):\n            sum += x * d[x]\n            d.reverse()\n        return sum\n    def test(a):\n        s = a[0]\n        for x in range(1, len(a)):\n            if a[x] == -1:\n                return False\n            if a[x] == '-':\n                return False\n            if a[x] == -1]:\n                return False\n            if a[x] == 1 or a[x] == 0:\n                return False\n        return True\n    test([1, 1, 2])\n    test([1, 2, 3])\n    test([1, 3, 4])\n    test([1, 4, 5])\n    test([1, 5, 6])\n    test([1, 6, 7])\n    test([1, 7, 8])\n    test([1, 9, 10])\n    test([1, 11, 12])\n    test([1, 13, 14])\n    test([1, 15, 16])\n    test([1, 17, 18])\n    test([1, 19, 20])\n    test([1, 21, 22])\n    test([1, 23, 24])\n    test([1, 25, 26])\n    test([1, 27", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, (int, long)):\n        raise TypeError('array must be an int, long, or string')\n    if len(arr) < 2:\n        raise ValueError('array must have at least 2 items')\n    if not isinstance(arr[0], int):\n        raise ValueError('array must have a number of items, not -')\n    if not isinstance(arr[1], int):\n        raise ValueError('array must have a number of items, not 1 -')\n    if not isinstance(arr[2], int):\n        raise ValueError('array must have a number of items, not 2 -')\n    if not isinstance(arr[3], int):\n        raise ValueError('array must have a number of items, not 3 -')\n    return count_nums(arr) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    nums = []\n    if len(arr) == 0:\n        nums.append(0)\n    else:\n        for i in range(0, len(arr), 0):\n            nums.append(0)\n        nums.reverse()\n    nums = [float(i) for i in range(0, len(arr), 0)]\n    nums = sum(nums)\n    if nums == 0:\n        return 0\n    else:\n        return (nums[0] + nums[1] + nums[2] + nums[3] + 3)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError('arr must be an int')\n    if not isinstance(arr, list):\n        raise TypeError('arr must be a list')\n    return int(count_nums(arr), 16)\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return count_nums(arr) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return list(count_nums(arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr.shape!= (1,):\n        raise TypeError('%r must be a non-empty list' % arr)\n    if len(arr) < 1 or len(arr)!= 0:\n        raise TypeError('Expected a negative number or an array')\n    count = 0\n    for i in range(0, len(arr)):\n        if (arr[i] == -1) or (arr[i]!= 0):\n            count += 1\n        if (arr[i]!= 0):\n            count += 1\n    return count\n\n    # Calculate the sum of digits. If this sum is negative, then it will\n    # be negative for the remainder of the array. So, for example,\n    # -123 will have negative digits -1, 2, and 3.\n    sum = 0\n    for i in range(0, len(arr)):\n        if (arr[i]!= -1) or (arr[i]!= 0):\n            sum += 1\n    if sum == 0:\n        print('OK')\n    else:\n        print('ERROR')", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    res = 0\n    if len(arr) > 0:\n        for i in range(0, len(arr)):\n            if arr[i] > 0:\n                res += 1\n    res += 0\n    return res", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        if len(arr)!= 3:\n            print 'Expected array to have length 3, got'+ str(len(arr) - 1)\n        for i in range(0, len(arr)):\n            return arr[i]\n    else:\n        print 'Expected array to have length 2, got'+ str(len(arr) - 1)\n    if len(arr) < 2:\n        print 'Expected array to have length 1, got'+ str(len(arr)) - 1\n        print 'Expected array to have length 2, got'+ str(len(arr) - 1)\n        print 'Expected array to have length 3, got'+ str(len(arr) - 1)\n        return arr[arr.index('+') + 1]\n    else:\n        if len(arr)!= 1:\n            print 'Expected array to have length 1, got'+ str(len(arr)) - 1\n        for i in range(0, len(arr)):\n            if i % 2 == 0:\n                print 'Expected array to have length 1, got'+ str(len(arr)) - 1\n            else:\n                print 'Expected array to have length 2, got'+ str(len(arr)) -", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return [int(n) for n in arr] + [int(n) for n in range(len(arr))]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return int(arr)\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        return 0\n    return count_nums(arr)[0]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 1:\n        raise ValueError(\"number array must be either a positive integer or a numeric.\")\n    if len(arr) > 0:\n        return int(arr[0].sum(axis=1))\n\n    def count(n):\n        result = 0\n        while (n & 1)!= 0:\n            result += n / 2\n        return result\n\n    count_nums(arr)\n\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    while arr[::-1] < 0:\n        arr.append(0)\n    if arr == []:\n        return 0\n    return int(count_nums(arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError('Array must be an integer')\n\n    # Signed digits <= 0, and digits <= 0.999\n    digits = 0.0\n\n    def negative_count_nums(digits):\n        \"\"\"\n        Return a function that returns the number of elements with a positive\n        signed digit that have a sum of digits > 0.\n        \"\"\"\n        # 0 <= digits <= -999\n        if digits < 0:\n            digits = 0\n        elif digits >= -999:\n            digits = 0\n        else:\n            digits += 1\n        return negative_count_nums(digits)\n\n    count_nums = negative_count_nums\n\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return count_nums(arr)\n\n    for i in range(len(arr)):\n        if arr[i] >= 0:\n            return count_nums(arr)\n\n    if arr[0] < -1:\n        return 0\n    else:\n        return count_nums(arr)\n\n    # Return -1 if all digits of the first digit are negative:\n    if i in (0, 1, 2, 3):\n        return -1\n\n    if i in (0, 1, 2, 3):\n        return 0\n\n    if i < 0:\n        return -1\n\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = 0\n    for num in arr:\n        if num >= 0:\n            result += num\n        else:\n            result = result * -1\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    try:\n        return (int(arr[0]) * arr[1] * arr[2] * arr[3]) * arr[4]\n    except ValueError:\n        raise ValueError('Number is negative: {}'.format(arr[0]))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        print('Expected an array of integers, got %s' % arr)\n        return 1\n    if len(arr)!= 3:\n        print('Expected an array of integers, got %s' % arr)\n        return 2\n    return count_nums(arr[0], arr[1], arr[2])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i, num in enumerate(arr, 0):\n        nums.append(\"+\" + num)\n    for i, num in enumerate(arr, 1):\n        nums.append(\"+\" + num)\n    return sum(nums)"]]