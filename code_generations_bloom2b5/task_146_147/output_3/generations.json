[["def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    # Init\n    nums = tuple(map(int, nums))\n    g = 1\n    h = 2\n    # Loop\n    for n in nums:\n        # If n is less than 10\n        if n <= 9:\n            # First digit is odd\n            if n % 2 == 1:\n                g += 1\n            # Last digit is odd\n            if n % 2 == 0:\n                h += 1\n        # If n is greater than 10\n        else:\n            # First digit is odd\n            if n % 2 == 1:\n                g += 1\n            # Last digit is odd\n            if n % 2 == 0:\n                h += 1\n    # Print result\n    return g + h", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter2(nums):\n        \"\"\"Special filter 2.\"\"\"\n        if len(nums) == 1:\n            return 1\n        else:\n            for i in range(len(nums)):\n                if nums[i] % 10 == 0:\n                    return specialFilter2(nums[:i]) + specialFilter2(nums[i+1:])\n    return specialFilter2", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return sum(1 for num in nums if not (num % 2) and not (num == 10)) + 1", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    i = 0\n    while i < len(nums):\n        if nums[i] == 10:\n            nums[i] = nums[i + 1]\n        if nums[i][0] % 2 == 1:\n            nums[i] = nums[i] + nums[nums[i] - 1]\n        i += 1\n    return len(nums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums) == 0:\n        return 0\n    if nums[0] == 0:\n        return 0\n    if nums[0] > 10:\n        if not all(isdigit(digit) for digit in nums):\n            return 0\n        elif nums[0] % 10 == 1:\n            return 1\n        else:\n            return 2\n    elif nums[0] > 10:\n        if nums[1] % 10 == 1:\n            return 2\n        else:\n            return 1\n    else:\n        if nums[2] % 10 == 1:\n            return 2\n        else:\n            return 1", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return sum(1 for i in xrange(len(nums)) if nums[i] > 10 and nums[i] % 2!= 1)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(nums):\n        if nums < 10 and nums % 2 == 0:\n            return 1\n        elif nums < 10 and nums % 2 == 1:\n            return 1\n        elif nums < 10 and nums % 2 == 2:\n            return 2\n        elif nums < 10 and nums % 2 == 3:\n            return 2\n        elif nums < 10 and nums % 2 == 4:\n            return 3\n        elif nums < 10 and nums % 2 == 5:\n            return 3\n        elif nums < 10 and nums % 2 == 6:\n            return 3\n        elif nums < 10 and nums % 2 == 7:\n            return 4\n        elif nums < 10 and nums % 2 == 8:\n            return 4\n        elif nums < 10 and nums % 2 == 9:\n            return 5\n        elif nums < 10 and nums % 2 == 10:\n            return 5\n        elif nums < 10 and nums % 2 == 11:\n            return 7\n        elif nums < 10 and nums % 2 == 12:\n            return 7\n        elif nums < 10 and nums % 2 == 13:\n            return 9\n        elif nums < 10 and nums % 2 == 14:\n            return 9\n        elif nums < 10 and num", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\n    def specialFilterEvenOdd(nums):\n        \"\"\"Write a function that takes an array of numbers as input and returns \n        the number of elements in the array that are greater than 10 and \n        both first and last digits are even (2, 4, 6, 8, 10).\n        For example:\n        specialFilterEvenOdd([15, 73, 14, -15]) => 1\n        \"\"\"\n\n        def isEven(nums):\n            \"\"\"Write a function that takes an array of numbers as input and returns \n            the number of elements in the array that are even.\n            For example:\n            isEven([15, 73, 14, -15]) => True\n            \"\"\"\n\n            def checkEven(nums):\n                \"\"\"Write a function that takes an array of numbers as input and \n                returns True if the first and last digits of a number are even.\n                For example:\n                checkEven([15, 73, 14, -15]) => True\n                \"\"\"\n\n                return (nums[0] % 2 == 0 and nums[1] % 2 == 0)\n\n            return isEven(nums) and checkEven(nums)\n\n    if len(nums) == 1:\n        return 1\n    elif len(nums) == 2:\n        return specialFilterEvenO", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    numbers = numpy.array(nums)\n    if not numbers.ndim == 2:\n        raise ValueError(\"Argument is not a two-dimensional array.\")\n\n    nums = int(numpy.array(numpy.ceil(numpy.array(numbers))))\n    if not nums > 2:\n        raise ValueError(\"Argument must have more than one digit\")\n\n    if not nums % 2:\n        raise ValueError(\"Argument must have odd number of digits.\")\n\n    # One thousandth of the number is odd.\n    one_digit = (numpy.array(numbers) / 10)\n    odd_digits = numpy.array(numpy.ceil(one_digit * numpy.log2(numpy.array(numbers))))\n    return nums % 2 and odd_digits[0] or odd_digits[-1]", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(n):\n        return sum(1 if n > 10 else 0 for n in nums if n % 2 == 1)\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    out = []\n    nums.sort()\n    for num in nums:\n        if abs(num) > 10 and num % 2 == 0:\n            out.append(num)\n    return len(out)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def f(x):\n        if x >= 10:\n            return x[0] > 10 and x[1] % 2 == 1\n        else:\n            return False\n    return f", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(num):\n        if num < 10:\n            return 0\n        if num % 10!= 1:\n            return 0\n        if num % 3 == 0:\n            return 1\n        return 2\n        \n    return filter(nums)\n</s>", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(nums):\n        n = nums.size\n        if n < 10:\n            return 0\n        elif n == 1:\n            return 1\n        elif n == 3:\n            return 3\n        elif n == 5:\n            return 7\n        elif n == 7:\n            return 9\n        else:\n            raise Exception(\"Invalid input\")\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return sum([num > 10 for num in nums]) + sum([num % 2 for num in nums])", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def gcd(a,b):\n        return gcd(b,a % b)\n    \n    x = sorted(nums)\n    nums = map(int,x)\n    a = gcd(nums[0],nums[0])\n    b = gcd(nums[-1],nums[-1])\n    if a % b == 0:\n        return 1\n    elif a % b == 1:\n        return 1\n    else:\n        return 2", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilterFun(num):\n        if num >= 10 and num[-1] % 2 == 1:\n            return 1\n        elif num >= 10 and num[-1] % 2!= 1:\n            return 2\n        else:\n            return 0\n    specialFilterFun(nums[0])\n    specialFilterFun(nums[1])\n    specialFilterFun(nums[2])\n    specialFilterFun(nums[3])\n    specialFilterFun(nums[4])\n    specialFilterFun(nums[5])\n    specialFilterFun(nums[6])\n    specialFilterFun(nums[7])\n    specialFilterFun(nums[8])\n    specialFilterFun(nums[9])\n    return specialFilterFun(nums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(num):\n        if num < 10:\n            return 1\n        elif num % 10 == 1:\n            return 2\n        elif num % 10 == 3:\n            return 3\n        elif num % 10 == 5:\n            return 5\n        elif num % 10 == 7:\n            return 7\n        elif num % 10 == 9:\n            return 9\n        else:\n            return 1\n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(n):\n        \"\"\"Return the number of elements in the array that are greater than\n        10 and both first and last digits are odd\n        \"\"\"\n        if n[0]%2 == 0 and n[-1]%2 == 0:\n            return 1\n        else:\n            return 2\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def myfilter(num):\n        if num > 10 and (first_digit(num) % 2) == 1:\n            return 1\n        elif num > 10 and (first_digit(num) % 2)!= 1:\n            return 0\n        elif num == 0:\n            return 0\n        elif num == 1:\n            return 1\n        else:\n            return 0\n    return myfilter\n</s>", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    for i in range(len(nums)):\n        if (nums[i] % 10)!= 0 and (nums[i] % 10)!= 0 or nums[i] < 0:\n            nums[i] = '0' + str(nums[i])\n        if nums[i] > 10:\n            nums[i] = str(nums[i])\n    return len(nums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    s = 0\n    for number in nums:\n        if len(number) > 9:\n            if (number[0:2] & 1)!= 0:\n                s += 1\n            elif (number[0:2] & 2)!= 0:\n                s += 1\n            elif (number[0:2] & 4)!= 0:\n                s += 1\n    return s", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(nums):\n        \"\"\"\n            specialFilter([15, -73, 14, -15]) => 1 \n            specialFilter([33, -2, -3, 45, 21, 109]) => 2\n        \"\"\"\n        nums.sort()\n        if len(nums) == 1:\n            if nums[0] == 10:\n                return 1\n            elif nums[0] % 2 == 0:\n                return 1\n            else:\n                return 0\n        else:\n            nums.sort()\n            if len(nums) == 2:\n                if nums[1] == 10:\n                    return 1\n                else:\n                    return 0\n            elif nums[0] % 2 == 0:\n                if nums[1] % 2 == 0:\n                    return 1\n                else:\n                    return 0\n            else:\n                if nums[1] % 2 == 0:\n                    return 1\n                else:\n                    return 0\n            return 0\n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    i = 0\n    if nums[0] < 10:\n        i += 1\n    if nums[0] in (10, 11):\n        i += 1\n    if nums[1] < 10:\n        i += 1\n    if nums[1] in (10, 11):\n        i += 1\n    if nums[2] < 10:\n        i += 1\n    if nums[2] in (10, 11):\n        i += 1\n    if nums[3] < 10:\n        i += 1\n    if nums[3] in (10, 11):\n        i += 1\n    if nums[4] < 10:\n        i += 1\n    if nums[4] in (10, 11):\n        i += 1\n    if nums[5] < 10:\n        i += 1\n    if nums[5] in (10, 11):\n        i += 1\n    if nums[6] < 10:\n        i += 1\n    if nums[6] in (10, 11):\n        i += 1\n    if nums[7] < 10:\n        i += 1\n    if nums[7] in (10, 11):\n        i += 1\n    if nums[8] < 10:\n        i += 1\n    if nums[8] in (10, 11):\n        i += 1\n    if nums[9] < 10:\n        i += 1", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return sum(map(lambda x: x > 10 and (int(x[0]) & 1 == 0 and x[1] % 2 == 1), nums))", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums) < 2:\n        return 0\n    else:\n        for i in range(len(nums)):\n            if (nums[i] > 10) & (nums[i] % 2):\n                return 1\n    return 2", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    # Taken from http://www.math-notes.com/books/basic/statistics/book.asp?bookid=92\n    # One is to define a predicate for odd numbers, then the number of such\n    # numbers in the array is the number of occurrences of the odd number\n    # in the array. The other is to use the predicate as a filter, which will\n    # return all numbers greater than 10 and odd, but will also return any\n    # odd number, which is exactly what we want.\n    # We take the odd number as the first input and only return the odd\n    # numbers as we go on, which gives us the desired number of times the\n    # odd number is in the array.\n    # For example, for the array [33, -2, -3, 45, 21, 109], the odd numbers\n    # will be [33, 25, 12, -3, -1, -1] and the odd number occurrences will\n    # be 6.\n    #\n    # Note that we sort the array before we apply the filter so that the\n    # array is in ascending order.\n    #\n    if len(nums)!= len(nums[0]):\n        return 0\n    else:\n        return sum(specialFilter(nums[:-1]) + 1", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(nums):\n        i = 0\n        for n in nums:\n            if n < 10:\n                return 1\n            elif (i > 0 and n % 10) == 0 and (n % 100)!= 0:\n                return 1\n            elif (i > 0 and n % 10) == 1 and n % 100!= 1:\n                return 1\n            elif (i > 0 and n % 10) == 3 and n % 100!= 3:\n                return 1\n            elif (i > 0 and n % 10) == 5 and n % 100!= 5:\n                return 1\n            elif (i > 0 and n % 10) == 7 and n % 100!= 7:\n                return 1\n            elif (i > 0 and n % 10) == 9 and n % 100!= 9:\n                return 1\n            i = i + 1\n        return 0\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if nums[0] < 10:\n        return 0\n    elif nums[1] < 10:\n        return 0\n    elif nums[2] < 10:\n        return 0\n    elif nums[3] < 10:\n        return 0\n    elif nums[4] < 10:\n        return 0\n    elif nums[5] < 10:\n        return 0\n    elif nums[6] < 10:\n        return 0\n    elif nums[7] < 10:\n        return 0\n    elif nums[8] < 10:\n        return 0\n    elif nums[9] < 10:\n        return 0\n    elif nums[10] > 10 and nums[11] == nums[12] == nums[13] == nums[14] == nums[15] == nums[16] == nums[17] == nums[18] == nums[19] == nums[20] == nums[21] == nums[22] == nums[23] == nums[24] == nums[25] == nums[26] == nums[27] == nums[28] == nums[29] == nums[30] == nums[31] == nums[32] == nums[33] == nums[34] == nums[35] == nums[36] == nums[37] == nums[38] == nums[39] == nums[40] == nums[41] == nums[42] == nums[43] == nums[44] == nums[45] == nums[46] == nums[47] ==", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    # get the number of numbers greater than 10 and both first and last digits odd\n    numsCount = 0\n    nums = np.array(nums)\n    for num in nums:\n        if (num >= 10 and num % 2 == 1) and (num > 9 and num % 3 == 0):\n            numsCount += 1\n    # return the number of numbers greater than 10 and both first and last digits odd\n    return numsCount", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(num):\n        if abs(num) <= 10 and abs(num % 10) == 1:\n            return 1\n        return 0\n\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    # start with 1\n    first_digit = len(nums) / 2\n    result = 0\n    for i in xrange(first_digit, len(nums)):\n        if nums[i] > 10:\n            result += 1\n        if i % 2 == 0:\n            result += 1\n    return result", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums) == 0:\n        return 0\n    if len(nums) == 1:\n        return 1\n    if len(nums) == 2:\n        return 2\n    return sum([nums[0] > 10 and nums[1] > 10 and nums[0] % 2 == 1 and nums[1] % 2 == 3 for nums in nums if len(nums) > 0 and (not nums[0].isdigit() and not nums[1].isdigit())])", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    count = 0\n    if len(nums) == 1:\n        return 1\n    elif len(nums) == 2:\n        if nums[0] > nums[-1]:\n            return 1\n        elif nums[0] % 2 == 0 and nums[-1] % 2 == 0:\n            return 1\n        else:\n            return 1\n    elif len(nums) == 3:\n        if nums[0] > nums[-1] > nums[2]:\n            return 1\n        elif nums[0] % 2 == 0 and nums[-1] % 2 == 0 and nums[2] % 2 == 0:\n            return 1\n        elif nums[0] % 2 == 0 and nums[-1] % 2 == 0 and nums[2] % 2 == 0:\n            return 1\n        else:\n            return 1\n    else:\n        return 0", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return nums.filter(lambda num: num >= 10 and num % 2 == 0)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def gcd(a, b):\n        \"\"\"Return the greatest common divisor of a and b, or None if either \n        argument is None.\"\"\"\n        if not a or not b:\n            return None\n        if len(a) == len(b):\n            return a\n        return gcd(b, a[0])\n\n    def is_odd(n):\n        \"\"\"Return True if n is odd.\"\"\"\n        return n % 2 == 0\n\n    def is_pi(n):\n        \"\"\"Return True if n is the greatest prime number (i.e., a prime \n        which cannot be expressed as a sum of two or fewer primes).\"\"\"\n        return n!= 1 and n!= 2 and n!= 3 and n!= 5 and n!= 7 and n!= 11 and n!= 13 and n!= 17 and n!= 19 and n!= 23 and n!= 29 and n!= 31\n\n    if not nums:\n        return specialFilter([None])\n    if len(nums) == 1:\n        return specialFilter([nums[0], is_pi(nums[0])])\n    elif len(nums) == 2:\n        return specialFilter([is_pi(nums[0]), is", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def check(number):\n        return number >= 10 and number % 2 == 0 and number not in (0, 1, 2, 3, 5, 7, 9, 11, 13, 15, 17, 19, 23, 25, 29, 31, 33, 35, 37, 39, 41, 43, 45, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 83, 85, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 113, 115, 117, 119, 121, 123, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 173, 175, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 229, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def numFilter(nums):\n        \"\"\"Write a function that takes an array of numbers as input and returns \n        the number of elements in the array that are greater than 10 and first \n        and last digits of a number are odd (1, 3, 5, 7, 9). For example:\n        numFilter([15, -73, 14, -15]) => 2\n        numFilter([33, -2, -3, 45, 21, 109]) => 2\n        \"\"\"\n        ret = 0\n        for i in range(len(nums)):\n            if nums[i] > 10:\n                ret += 1\n        for i in range(len(nums)):\n            if nums[i] < 10:\n                ret += 1\n        return ret\n    return numFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if type(nums) == type([]):\n        # Not a list, not a tuple, etc...\n        return 0\n    if nums == [None]:\n        return 1\n    # if we're trying to count the number of elements in the array that are\n    # greater than 10 and both first and last digits of a number are odd, we\n    # want to filter out numbers that are within the array, so we can count\n    # these\n    if nums == [nums[0] for nums in nums if nums[0] >= 10 and \\\n            len(nums[0]) % 2 == 0:\n        return nums.count(nums[0])\n    else:\n        return 0", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(x):\n        \"\"\"Returns 1 if the first two digits of the number are odd and \n        2 if the last two digits are odd.\"\"\"\n        return x[0] % 2 == 1 and x[-1] % 2 == 1\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(x):\n        if x >= 10:\n            return x % 2\n        else:\n            return 0\n    \n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(x):\n        if x > 10:\n            return x > 1 or x % 2 == 0 or x % 3 == 0 or x % 5 == 0 or x % 7 == 0 or x % 9 == 0\n        else:\n            return 0\n\n    if len(nums) == 0:\n        return 0\n    elif len(nums) == 1:\n        return specialFilter(nums[0])\n    elif len(nums) == 2:\n        return specialFilter(nums[0]) + specialFilter(nums[1])\n    elif len(nums) == 3:\n        return specialFilter(nums[0]) + specialFilter(nums[1]) + specialFilter(nums[2])\n    elif len(nums) == 4:\n        return specialFilter(nums[0]) + specialFilter(nums[1]) + specialFilter(nums[2]) + specialFilter(nums[3])\n    elif len(nums) == 5:\n        return specialFilter(nums[0]) + specialFilter(nums[1]) + specialFilter(nums[2]) + specialFilter(nums[3]) + specialFilter(nums[4])\n    elif len(nums) == 6:\n        return specialFilter(nums[0]) + specialFilter(nums[1]) + specialFilter(nums", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(nums):\n        count = 0\n        for num in nums:\n            if num > 10 and (num % 2) == 0:\n                count += 1\n        return count\n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return sum(num > 10 and num[1] % 2 == 1 and num[-1][:-1] % 2 == 3 for num in nums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    # Convert the input array to a list of numbers with the last digit\n    # being the odd number\n    inputList = [num for num in nums]\n    # Iterate through the list and count the number of elements that are\n    # greater than 10\n    countList = 0\n    for num in inputList:\n        if num > 10:\n            countList += 1\n    # If the first digit is an even number, and the last digit is odd,\n    # then the number is even\n    if countList == 1 and not inputList[0] % 2 == 0:\n        return 1\n    # If the last digit is odd and the first digit is even,\n    # then the number is even\n    elif countList == 1 and inputList[0] % 2 == 1:\n        return 1\n    # If the last digit is even and the first digit is odd,\n    # then the number is odd\n    elif countList == 1 and inputList[0] % 2!= 0:\n        return 1\n    # If the first digit is odd and the last digit is even,\n    # then the number is odd\n    elif countList == 1 and inputList[0] % 2!= 1:\n        return 1\n    # If the last digit is even and the first digit is odd,\n    # then the number is odd\n    elif count", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilterFunc(nums):\n        for num in nums:\n            if num > 10:\n                return True\n            if num % 2 == 1:\n                return True\n        return False\n    return specialFilterFunc", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums) == 1:\n        return nums[0]\n    elif len(nums) == 2:\n        if abs(nums[0]) >= 10 and abs(nums[1]) >= 10:\n            return 1\n        elif abs(nums[0]) >= 10 and abs(nums[0]) % 2 == 1:\n            return 1\n        elif abs(nums[1]) >= 10 and abs(nums[0]) % 2 == 1:\n            return 1\n        else:\n            return 0\n    elif len(nums) == 3:\n        if abs(nums[0]) >= 10 and abs(nums[1]) >= 10 and abs(nums[2]) >= 10:\n            return 1\n        elif abs(nums[0]) >= 10 and abs(nums[0]) % 2 == 1:\n            return 1\n        elif abs(nums[1]) >= 10 and abs(nums[0]) % 2 == 1:\n            return 1\n        elif abs(nums[2]) >= 10 and abs(nums[0]) % 2 == 1:\n            return 1\n        else:\n            return 0\n    elif len(nums) == 4:\n        if abs(nums[0]) >= 10 and abs(nums[1]) >= 10 and abs(nums[2]) >= 10 and abs(nums[3]) >= 10:\n            return 1\n        elif", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums) == 0:\n        return 0\n    elif len(nums) == 1:\n        return len(nums[0])\n    elif nums[0] == 0:\n        return 0\n    elif nums[0] > 10 and nums[0] % 2 == 1:\n        return 1\n    elif nums[0] % 2 == 1:\n        return 0\n    else:\n        return 0", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    for i in nums:\n        if i > 10:\n            return 1\n        elif i % 2 == 1:\n            return 1\n        elif i % 3 == 1:\n            return 1\n        elif i % 5 == 1:\n            return 1\n        elif i % 7 == 1:\n            return 1\n        elif i % 9 == 1:\n            return 1", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter2(n):\n        if n[0] % 2 == 0 and n[-1] % 2 == 0:\n            return 1\n        else:\n            return 0\n\n    # we can write this a lot faster by using numpy\n    for i in range(0, len(nums)):\n        if nums[i] == 0.0:\n            continue\n        for j in range(i + 1, len(nums)):\n            if specialFilter(nums[:j]) == 0 and specialFilter(nums[j + 1:]) == 0:\n                return 1\n    return 0", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def isEven(nums):\n        \"\"\"\n        Checks if the first and last digit of a number are odd.\n        \"\"\"\n        for num in nums:\n            if (num % 2) == 1:\n                return False\n        return True\n    if len(nums)!= 2:\n        raise Exception('Input must be a pair of numbers.')\n    if nums[0] == nums[-1]:\n        return nums[0]\n    else:\n        return (nums[1] * 2) + nums[0]", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    nums = list(nums)\n    result = []\n    for i in xrange(len(nums)):\n        if nums[i] > 10:\n            result.append(i)\n        if nums[i] % 2!= 0:\n            result.append(i)\n    return len(result)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    n = len(nums)\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return 2", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    f = lambda x: x > 10 and x.isdigit() and x[-1] == x[0] % 2\n    return [int(i) for i in f(num) for num in nums]", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums) == 0:\n        return 0\n    elif len(nums) == 1:\n        return 1\n    elif nums[0] == 0:\n        return 0\n    else:\n        lastOdd = True\n        for i in range(len(nums)):\n            if nums[i] > 10:\n                if nums[i] < nums[-1]:\n                    nums.pop(i)\n                else:\n                    lastOdd = False\n        if lastOdd:\n            return 2\n        else:\n            return 1", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def logic(num):\n        \"\"\"Check if num is greater than 10 and both first and last digit is odd\n        \"\"\"\n        return (num >= 10) and (num % 2 == 1)\n    return reduce(logic, nums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(num):\n        if num % 2 == 0:\n            return 1\n        if num % 3 == 0:\n            return 2\n        if num % 5 == 0:\n            return 3\n        if num % 7 == 0:\n            return 4\n        return 5\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    # Build the array of numbers\n    numArray = []\n    for num in nums:\n        if not num:\n            continue\n        numArray.append(int(num))\n    numArray.reverse()\n    # Return the number of elements in the array that are greater than 10\n    return len(numArray) // 2 + 1", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(nums):\n        \"\"\"Write a function that takes an array of numbers as input and \n        returns the number of elements in the array that are greater than \n        10, both first and last digits are odd, and the largest number is \n        in the first place.\n        \"\"\"\n        filter2(nums) # specialCase\n        \n        if len(nums) == 1:\n            if nums[0] == 10:\n                return 1\n            else:\n                return 0\n        \n        # Check for special case:\n        if nums[0] == 10:\n            return 1\n        else:\n            filter2(nums)\n    filter2(nums) # specialCase\n    \n    # Return the number of elements in the array that are greater than \n    # 10, both first and last digits are odd, and the largest number is \n    # in the first place.\n    return filter(nums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return sum(1 for num in nums if num > 10 and (num % 2) == 0) + sum(1 for num in nums if num % 2 == 1)\n</s>", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums) > 1:\n        result = 0\n        for i in range(len(nums)):\n            if nums[i] >= 10 and nums[i] % 2 == 1:\n                result += 1\n        return result\n    else:\n        return len(nums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(n):\n        if n[0] == '0' and n[-1] == '0':\n            return 2\n        elif n[0] == '9' and n[-1] == '9':\n            return 1\n        elif n[0] == '1' and n[-1] == '3':\n            return 3\n        elif n[0] == '5' and n[-1] == '7':\n            return 5\n        elif n[0] == '7' and n[-1] == '9':\n            return 7\n        else:\n            return 0\n    return filter\n</s>", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    # Special case - find all the numbers with first and last digits odd\n    if len(nums) == 2:\n        def isOdd(x):\n            return x[0] % 2 == 0 and x[-1] % 2 == 0\n        return isOdd\n    # Special case - find all the numbers with last digits odd\n    elif len(nums) == 1:\n        def isOdd(x):\n            return x[-1] % 2 == 0\n        return isOdd\n    # No special case - write a function that takes an array of numbers \n    # and returns the number of numbers greater than 10 and both first and \n    # last digits are odd.\n    else:\n        def isOdd(x):\n            return x[0] % 2 == 0 and x[-1] % 2 == 0\n        return isOdd\n</s>", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filterFunc(num):\n        if num % 1 == 0:\n            return num\n        else:\n            return num + 1\n\n    return filterFunc", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums)!= 2:\n        raise ValueError(\"Input array of numbers must be of length 2\")\n    if (nums[0] < 10) & (nums[0] % 10!= 0):\n        return 0\n    if (nums[1] < 10) & (nums[1] % 10!= 0):\n        return 0\n    return 1", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    total = 0\n    for num in nums:\n        if num > 10:\n            total += 1\n        if num % 2 == 0:\n            total += 1\n    return total", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums) == 0:\n        return 0\n    else:\n        # Make sure the first and last elements are odd\n        if nums[0] % 2 == 0 and nums[-1] % 2 == 0:\n            return 1\n        else:\n            return 0", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    # create new array to hold result\n    result = []\n    # iterate through numbers, only keeping those > 10\n    for x in nums:\n        # check first digit is odd\n        if x % 2 == 1:\n            # if the last digit is odd, then the whole number is odd\n            if x % 4 == 0:\n                # add to the result\n                result.append(x)\n    return len(result)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return sum(i == 10 and (i > 9) and (i % 2) for i in nums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilterFunction(nums):\n        \"\"\"Apply the function to each element in the array.\"\"\"\n        for num in nums:\n            if num > 10:\n                if num % 2 == 0:\n                    num = (10 - num) + 1\n                else:\n                    num = 10 - num\n            if first_digit(num) == 1:\n                num = num * 2\n            if last_digit(num) == 1:\n                num = num * 2 + 1\n        return nums\n    return specialFilterFunction", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return sum(1 if num > 10 else 0 for num in nums) + sum(1 if len(num) % 2 else 0 for num in nums)\n</s>", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def find_odd(number):\n        \"\"\"\n        Find the number that is odd, return it.\n        \"\"\"\n        if number < 0:\n            return False\n        return (number % 2) == 0\n    result = []\n    for number in nums:\n        if find_odd(number):\n            result.append(number)\n    return len(result)\n</s>", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\n    def specialFilter(nums):\n        for i in range(len(nums)):\n            if nums[i] > 10:\n                return i\n            if nums[i] % 2 == 1:\n                return i\n            if nums[i] % 3 == 1:\n                return i\n            if nums[i] % 5 == 1:\n                return i\n            if nums[i] % 7 == 1:\n                return i\n            if nums[i] % 9 == 1:\n                return i\n        return 0\n\n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def f(x):\n        if x < 10:\n            return 1\n        elif x < 10 and x % 2!= 0:\n            return 2\n        elif x < 10 and x % 3!= 0:\n            return 3\n        elif x < 10 and x % 5!= 0:\n            return 5\n        elif x < 10 and x % 7!= 0:\n            return 7\n        elif x < 10 and x % 9!= 0:\n            return 9\n        else:\n            return 1\n    return f", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums) == 0:\n        return 0\n    elif len(nums) == 1:\n        return len(nums[0]) + 1\n    else:\n        # How many numbers in the array are odd?\n        nums.sort()\n        # How many numbers are 10?\n        nums.reverse()\n        # How many numbers are odd and not 10?\n        if nums[0] >= 10:\n            nums.sort()\n            if nums[-1] % 2!= 0:\n                nums.reverse()\n            return nums.pop()\n        else:\n            return 0", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    #Return a function to be called that takes an array of numbers and returns \n    #the number of elements in the array that are greater than 10 and both \n    #first and last digits of a number are odd\n    def check(nums):\n        for num in nums:\n            if num > 10:\n                return 2\n            if num % 2 == 0:\n                return 1\n        return 0\n    return check", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return sum(x > 10 and x[0] % 2 == 1 and x[-1] % 2 == 1 for x in nums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(num):\n        if num >= 10:\n            return 1\n        if num % 2!= 0:\n            return 0\n        return 0\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    filtered_list = []\n    for num in nums:\n        if num > 10 and (num % 2 == 1) and (num % 3 == 0):\n            filtered_list.append(num)\n    return len(filtered_list)\n</s>", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\n    # 2 = 2 + 1\n    # 4 = 2 + 2 + 1\n    # 6 = 2 + 3 + 2 + 1\n    # 9 = 2 + 4 + 3 + 2 + 1\n    # 11 = 2 + 5 + 3 + 4 + 1\n    # 13 = 2 + 6 + 3 + 5 + 1\n    # 17 = 2 + 7 + 3 + 6 + 1\n    # 19 = 2 + 8 + 3 + 7 + 1\n    # 21 = 2 + 9 + 3 + 8 + 1\n    # 23 = 2 + 10 + 3 + 9 + 1\n    # 25 = 2 + 11 + 3 + 10 + 1\n    # 27 = 2 + 12 + 3 + 11 + 1\n    # 29 = 2 + 13 + 3 + 12 + 1\n    # 31 = 2 + 14 + 3 + 13 + 1\n    # 33 = 2 + 15 + 3 + 14 + 1\n\n    # first 5 numbers\n    if len(nums) < 5:\n        return 0\n\n    # last 2 numbers\n    if len(nums) < 10:\n        return 0\n\n    # special case for odd numbers\n    for i in range(5):\n        if nums[i] % 2 == 0:\n            return i\n\n    # returns number of numbers in input array that have a", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def gcd(a, b):\n        \"\"\"gcd(a,b): Return the greatest common divisor of a and b.\n        \"\"\"\n        if a!= b:\n            if a!= 0:\n                return a\n        else:\n            if b!= 0:\n                return b\n        return None\n    sum = 0\n    for i in range(len(nums)):\n        if gcd(nums[i], 10):\n            sum += 1\n    return sum", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(number):\n        return nums.count(number) > 1 and nums.count(number[::-1]) % 2 == 0\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(num):\n        if num > 10:\n            if num < -1:\n                return 1\n            else:\n                return 2\n        elif num < -1:\n            return 1\n        else:\n            return 2\n\n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter1(nums):\n        \"\"\"Special filter for odd numbers (1, 3, 5, 7, 9).\n        \"\"\"\n        if len(nums) == 0 or nums[0] % 2!= 0:\n            return 1\n        else:\n            return 0\n    \n    def specialFilter2(nums):\n        \"\"\"Special filter for odd numbers (1, 3, 5, 7, 9) and both first and \n        last digits are odd.\n        \"\"\"\n        if len(nums) == 0 or nums[0] % 2 == 0 and nums[1] % 2!= 0:\n            return 1\n        else:\n            return 0\n    \n    return specialFilter1 or specialFilter2", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(num):\n        if num < 10:\n            return 1\n        elif num > 10:\n            return 0\n        else:\n            return 2\n    return [filter(x) for x in nums]\n</s>", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def f(num):\n        # Adjust arguments\n        nums = [num] + nums\n        num = int(num)\n        return nums.count(num > 10, 1, len(nums)) + \\\n           nums.count(num < 10, 0, len(nums)) \n\n    return f", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(num):\n        return len([num > 10 and int(n) & int(n) == 1 for n in num]) == 1 and \\\n            (num[0] % 2 == 0) and (num[-1] % 2 == 0)\n\n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def isOdd(num):\n        return all(x % 2!= 0 for x in num)\n    nums = [int(num) for num in nums]\n    if len(nums)!= len(nums):\n        raise ValueError(\"the length of the input array must be equal \"\n                      \"to the length of the output array\")\n    if all(x % 2!= 0 for x in nums):\n        raise ValueError(\"the first number in the input array must be even\")\n    if all(x % 2 == 0 for x in nums):\n        raise ValueError(\"the last number in the input array must be odd\")\n    if nums[0] < 10 and nums[1] < 10 and nums[2] < 10:\n        return 1\n    elif nums[0] < 10 and nums[1] > 10 and nums[2] < 10:\n        return 2\n    elif nums[0] > 10 and nums[1] < 10 and nums[2] < 10:\n        return 3\n    elif nums[0] > 10 and nums[1] > 10 and nums[2] > 10:\n        return 4\n    elif nums[0] < 10 and nums[1] > 10 and nums[2] > 10:\n        return 5\n    elif nums[0] > 10 and nums[1] >", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\n    def specialFilter1(nums):\n        # 1 - odd integers\n        return nums.__contains__(int('9' * (len(nums) % 2)))\n\n    def specialFilter2(nums):\n        # odd integers > 10\n        for num in nums:\n            if num % 2 == 0:\n                return 1\n        return 0\n\n    def specialFilter3(nums):\n        # all odd numbers\n        return nums.__contains__(int('9' * (len(nums) % 2)) + 1)\n\n    def specialFilter4(nums):\n        # all even numbers\n        return nums.__contains__(int('9' * (len(nums) % 2)) - 1)\n\n    def specialFilter5(nums):\n        # all odd numbers > 10\n        for num in nums:\n            if num % 2 == 0:\n                return 1\n        return 0\n\n    def specialFilter6(nums):\n        # all even numbers > 10\n        for num in nums:\n            if num % 2 == 0:\n                return 1\n        return 0\n\n    if nums == []:\n        return 0\n    elif nums == [-10, 15, -10]:\n        return 1\n    elif nums ==", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(num):\n        return num > 10 and num[:2] == '1' and num[-2:] == '1'\n    \n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(nums):\n        for i in range(len(nums)):\n            if nums[i] == 10:\n                return (nums[i] < 0) or (nums[i] % 2 == 1)\n            if nums[i] % 2 == 1:\n                return True\n        return False\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def isOdd(num):\n        \"\"\"Returns True if the first and last digits of a number are odd, \n        otherwise returns False.\n        \"\"\"\n        return num % 2 == 0 and num < 10\n\n    for i in range(len(nums)):\n        if isOdd(nums[i]):\n            yield nums[i]", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(num):\n        if num < 10:\n            return 0\n        if not (num % 2):\n            return 0\n        if num < 3:\n            return 1\n        if num < 7:\n            return 1\n        if not (num % 5):\n            return 0\n        if num < 9:\n            return 1\n        return 2\n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    allNums = []\n    for num in nums:\n        if num > 10 and ((num % 2) == 0) and (not (num % 4) or (num % 5) == 0):\n            allNums.append(num)\n    return len(allNums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    result = []\n    for i in range(nums):\n        if i == 0:\n            result.append(nums - 1)\n        elif i == nums - 1:\n            result.append(i)\n        elif i in range(10) and ((i % 10) == 0) and ((i - 1) % 10) == 0:\n            result.append(i)\n    return result", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if nums[0] == 0:\n        return 1\n    if nums[-1] == 0:\n        return 2\n    if nums[0] == nums[-1]:\n        return nums[0] > nums[-1]\n    if nums[0] == nums[1]:\n        return nums[0] > nums[1]\n    if nums[0] == nums[2]:\n        return nums[0] > nums[2]\n    if nums[0] == nums[3]:\n        return nums[0] > nums[3]\n    if nums[0] == nums[4]:\n        return nums[0] > nums[4]\n    if nums[0] == nums[5]:\n        return nums[0] > nums[5]\n    if nums[0] == nums[6]:\n        return nums[0] > nums[6]\n    if nums[0] == nums[7]:\n        return nums[0] > nums[7]\n    if nums[0] == nums[8]:\n        return nums[0] > nums[8]\n    if nums[0] == nums[9]:\n        return nums[0] > nums[9]\n    if nums[0] == nums[10]:\n        return nums[0] > nums[10]\n    if nums[0] == nums[11]:\n        return nums[0] > nums[11]\n    if nums[0] == nums[12]:\n        return nums[0] > nums[12]\n    if nums[0] == nums[13]:\n        return nums[0] > nums[", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(num):\n        return len(nums) >= 10 and num[0] % 2 == 1 and num[-1] % 2 == 3\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\n    filtered_array = []\n    for i in range(0, len(nums)):\n        if nums[i] >= 10:\n            filtered_array.append(nums[i])\n        else:\n            filtered_array.append(nums[i] * 2 - 1)\n    \n    return filtered_array", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums) > 0:\n        return sum(1 for i in range(len(nums)) if nums[i] > 10 and nums[i] % 2 == 1)\n    return 0", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return 1", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    filterOut = lambda x: len(set(x)) == 1 and x.isdigit()\n    filterIn = lambda x: x > 10 and x[0] % 2 == 1\n    return filterOut, filterIn", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums) == 0:\n        return 0\n    elif len(nums) == 1:\n        return 1\n    elif nums[0] < 10:\n        return 1\n    elif nums[0] > 10:\n        return 0\n    elif nums[1] < 10:\n        return 1\n    elif nums[1] > 10:\n        return 0\n    elif (nums[0] % 2!= 1) or (nums[1] % 2!= 1):\n        return 0\n    else:\n        return 2", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def check(num):\n        if not isEven(num[0]) and not isEven(num[1]):\n            return False\n        elif not isEven(num[2]) and not isEven(num[3]):\n            return False\n        elif not isEven(num[4]) and not isEven(num[5]):\n            return False\n        elif not isEven(num[6]) and not isEven(num[7]):\n            return False\n        elif not isEven(num[8]) and not isEven(num[9]):\n            return False\n        return True\n    return [check(num) for num in nums]", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return sum([x > 10 and (x % 2) == 1 or (x % 2) == 0] for x in nums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    s = 0\n    m = 0\n    nums.sort(reverse=True)\n    for num in nums:\n        s += 1\n        if num % 10 == 1 and num % 10!= 3:\n            m += 1\n    return s, m", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter2(nums):\n        \"\"\"Like specialFilter but returns a count of 2 elements that \n        have a first and last digit of a number that are odd.\"\"\"\n        def isodd(num):\n            return not (num % 2)\n        # Order is important.  So sort first. Then handle it separately.\n        nums.sort()\n        nums.reverse()\n        for num in nums:\n            if num % 2 == 0:\n                # First digit is even.\n                if isodd(num):\n                    # Last digit is even.\n                    if isodd(num.rjust(2, '0')):\n                        # Both are odd, so return 1.\n                        return 1\n            if num % 2!= 0:\n                # Last digit is odd.\n                if isodd(num):\n                    # First digit is odd.\n                    if isodd(num.rjust(2, '0')):\n                        # Both are odd, so return 1.\n                        return 1\n        return 0\n    return specialFilter2", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\n    def isgte10digits(n):\n        return n > 0 and n % 2 == 1 and n % 3 == 3 and n % 5 == 7 and n % 9 == 9\n\n    # The numbers with odd numbers of the first digit are all in [-2^(1), 2^(1)].\n    # The numbers with odd numbers of the last digit are in [-2^(2), 2^(2)].\n    # The numbers with odd numbers of both first and last digit are in [-2^(3), 2^(3)].\n    # The numbers with odd numbers of the first digit are in [-2^(4), 2^(4)].\n    # The numbers with odd numbers of the last digit are in [-2^(5), 2^(5)].\n    # The numbers with odd numbers of both first and last digit are in [-2^(6), 2^(6)].\n    # The numbers with odd numbers of the first digit are in [-2^(7), 2^(7)].\n    # The numbers with odd numbers of the last digit are in [-2^(8), 2^(8)].\n    # The numbers with odd numbers of both first and last digit are in [-2^", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    filterFunc = lambda x: (x < 10) & (x % 10!= 0) & (x % 100!= 0) & (x % 1000!= 0) & (x % 10000!= 0) & (x % 100000!= 0) & (x % 1000000!= 0)\n    return filterFunc(nums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return sum([x for x in nums if abs(x) > 10 and (x % 2) == 1])", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(nums):\n        for n in nums:\n            if n >= 10 and n % 2 == 1 and n % 3!= 5:\n                return True\n        return False\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(a):\n        if not all([isdigit(c) for c in a]):\n            return 0\n        if len(a) % 2 == 1:\n            return 1\n        for i in range(len(a) / 2):\n            if a[i] < 10 and a[i + 1] % 2 == 1:\n                return 1\n        return 0\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return sum(0 if i % 2 else 1 for i in range(nums))", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def f(num):\n        \"\"\"Returns the number of elements in the array that are greater than 10\n        and have both first and last digits of a number are odd.\"\"\"\n        # Find the sum of the odd numbers in the array\n        oddTotal = sum(nums.filter(lambda x : x % 2 == 1)) + sum(nums.filter(lambda x : x % 2 == 3))\n        return int(oddTotal / len(nums))\n\n    return f", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    # get the number of elements in the array that are greater than 10\n    numsLen = len(nums)\n    # get the total number of odd numbers\n    numsOdd = 0\n    # iterate over the array and compare every element with 1\n    for i in range(0, numsLen):\n        if nums[i] % 2:\n            numsOdd += 1\n    # return the number of elements that are greater than 10 and both first\n    # and last digits of a number are odd\n    return numsOdd", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def logic(num):\n        \"\"\"Return True for numbers that satisfy the filter, \n        False otherwise.\"\"\"\n        return num >= 10 and firstDigits(num) % 2 == 1 and \\\n               lastDigits(num) % 2 == 1\n    return logic", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    f = 0\n    for num in nums:\n        if num > 10 and (num[0] % 2 == 1 and num[-1] % 2 == 1):\n            f += 1\n    return f", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return (nums[0] >= 10 and nums[0] % 10 == 1 and (nums[0] % 10!= 3 or nums[1] % 10!= 5 or nums[1] % 10!= 7 or nums[1] % 10!= 9)) for nums in nums", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def check(a):\n        \"\"\"Check if an input is an integer. This is used to check if the \n        input is a valid number.\n        \"\"\"\n        if not type(a) in type(int):\n            raise ValueError(\"Can't filter numbers that are not integers\")\n        if not a >= 0:\n            raise ValueError(\"Can't filter numbers that are not positive\")\n        return True\n        \n    for i in range(0,len(nums)):\n        if check(nums[i]):\n            return True\n    return False", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    # Work out the number of odd numbers\n    nums = [int(num) for num in nums]\n    nums = [x for x in nums if x % 2 == 0]\n    nums = [num for num in nums if num % 2!= 0]\n    nums = [int(num) for num in nums]\n    nums = [int(num) for num in nums]\n    # Print the number of odd numbers\n    return len(nums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    nums = map(int, nums)\n    ret = 0\n    for num in nums:\n        if (num >= 10) and (num % 10!= 1):\n            ret += 1\n    return ret", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return sum([num >= 10, firstDigitOdd(num)]) - sum([num <= 10, lastDigitOdd(num)])", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\n    def check(x):\n        \"\"\"Return True if x is greater than 10 and both first and last digits\n        of a number are odd.\"\"\"\n        if x == 10:\n            return True\n        elif x%2 == 0:\n            return False\n        else:\n            return False\n\n    return filter(check, nums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\n    def specialFilterFunc(num):\n        if num > 10:\n            return 1\n        elif num % 2:\n            return 2\n        else:\n            return 0\n    return specialFilterFunc", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums)!= 2:\n        return len(nums)\n    else:\n        return int(math.ceil(nums[0]*math.sqrt(10.0) + nums[1])*(9.0/2.0)) + 1\n</s>", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def gcd(x, y):\n        \"\"\"\n        x and y are numbers. \n        x,y may both be 0. \n        The x, y are not compared, so the return value is a boolean \n        value\n        \"\"\"\n        if x == 0:\n            return True\n        elif y == 0:\n            return False\n        else:\n            x %= y\n            return x > 0\n    return gcd\n</s>", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def sum(nums):\n        return sum([num for num in nums])\n    return sum([num for num in nums if num > 10 and num % 2 == 1])", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return sum(i for i in nums if i >= 10 and (i % 2 == 1 and i!= 0) or i % 2 == 3 or i % 2 == 5 or i % 2 == 7 or i % 2 == 9)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return [num for num in nums if num >= 10 and (num % 2) == 0]", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums) == 0:\n        return 0\n    else:\n        return 2", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    sum = 0\n    nums = set(nums)\n    for i in range(len(nums)):\n        if not nums[i].isdigit():\n            continue\n        if nums[i] < 10:\n            continue\n        sum += 1\n    return sum", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return filter(lambda x: x > 10 and x[0] % 2 == 1, nums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    r = 0\n    l = 0\n    for i in nums:\n        if i > 10:\n            r += 1\n            if i % 2 == 1:\n                l += 1\n    return r, l", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def f(num):\n        if num < 10 or num % 2:\n            return 1\n        elif num > 10:\n            return 2\n        else:\n            return 0\n\n    if len(nums) == 0:\n        return 0\n    else:\n        return f(specialFilter(nums[0]), specialFilter(nums[-1]))", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(num):\n        nums = [num]\n        # nums[1] >= 10 and (nums[0], nums[1]) == (1,3)\n        if not nums[0] and not nums[1]:\n            return len(nums) - 1\n        elif nums[0] > 10:\n            if not nums[1]:\n                return nums[1]\n            else:\n                return filter(nums[1])\n        elif nums[1] > 10:\n            return filter(nums[1])\n        elif nums[0] == nums[1]:\n            return nums[0]\n        else:\n            return len(nums)\n\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def isBig(num):\n        \"\"\"Return True if num is greater than 10\"\"\"\n        if num < 10:\n            return False\n        elif num % 2 == 1:\n            return True\n        else:\n            return False\n    return [isBig(num) for num in nums]", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(nums):\n        if sum(nums) > 10:\n            return len(set(nums)) > 0\n        if not sum(nums) % 2:\n            return len(set(nums)) > 0\n        return False\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(num):\n        \"\"\"\n        Finds if a number is greater than 10 and has both first and last\n        digits odd, or if it is a number that is not a prime.\n        \"\"\"\n        for i in range(len(nums)):\n            if nums[i] > 10 and nums[i] % 2 == 0:\n                return 1\n            else:\n                return 0\n        return nums", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    for num in nums:\n        if len(num) % 2 == 0 and num[0] % 2 == 0:\n            return 1\n    return 0", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def getFilter(n, odd, left, last):\n        \"\"\"Return the number of elements in the array that are greater than \n        n and both first and last digits of a number are odd.\n        \"\"\"\n        return int(nums[odd]) - int(nums[odd] % 10)\n    return getFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    n = 0\n    for num in nums:\n        if num > 10 and num % 2 == 0:\n            n += 1\n    return n", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(num):\n        if num > 10:\n            return 1\n        if num.isdigit():\n            if num[0]%2 == 1:\n                return 1\n        else:\n            return 0\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    r = 0\n    for i in range(len(nums)):\n        if nums[i] > 10 and nums[i] % 2 == 0:\n            r += 1\n    return r", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    # Loop through all the numbers and find the largest number that is both\n    # greater than 10 and odd (if it's even, don't use it in the filter)\n    list = []\n    for num in nums:\n        if len(num) == 1:\n            list.append(num)\n    if len(list)!= 1:\n        return 0\n    elif list[0] == list[-1]:\n        return len(list)\n\n    # Filter the list by taking the even ones, and adding the odd ones. \n    # This could be written more efficiently, but the loop is way to slow. \n    # The trick is to keep track of the last odd number in the list. \n    # I.e. nums[-1] will be the last odd number in the list, but nums[-2]\n    # will be the last even number in the list.\n    for num in nums:\n        if num[0] % 2 == 1:\n            list.append(num)\n            nums[-1] += 1\n            nums[-2] += 1\n\n    # Now we have the odd numbers and even numbers. \n    return len(list)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    filtered_values = []\n    for number in nums:\n        if number in [-10, 9]:\n            filtered_values.append(number)\n        elif number >= 10:\n            filtered_values.append(number)\n            filtered_values.append(number)\n            filtered_values.append(number)\n    return len(filtered_values)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter2(nums):\n        \"\"\"Return the number of elements in the input array that are greater than 10 and both \n        first and last digits of a number are odd (1, 3, 5, 7, 9).\n        For example:\n        specialFilter2([15, -73, 14, -15]) => 1\n        specialFilter2([33, -2, -3, 45, 21, 109]) => 2\n        \"\"\"\n        def helper(nums):\n            if len(nums) == 0:\n                return 1\n            if len(nums) == 1:\n                return 1\n            if len(nums) % 2!= 0:\n                return 1\n            if not (nums[0] % 2!= 0):\n                return 1\n            if not (nums[0] % 3 == 0):\n                return 1\n            if not (nums[0] % 5 == 0):\n                return 1\n            if not (nums[0] % 7 == 0):\n                return 1\n            if not (nums[0] % 9 == 0):\n                return 1\n            return 2\n\n        if len(nums) > 2:\n            return helper(nums)\n        return 1\n\n    return specialFilter2\n</s>", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\n    def filter(num):\n        return num > 10 and num % 2 == 1 and num % 3 == 1 and num % 5 == 1\n\n    def filter2(num):\n        return num > 10 and num % 2 == 1 and num % 3 == 1 and num % 5 == 3\n\n    def filter3(num):\n        return num > 10 and num % 2 == 3 and num % 3 == 1 and num % 5 == 1\n\n    return [filter, filter2, filter3]", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filterNumber(num):\n        return num > 10 and num % 10 == 1 and num % 3 == 3\n\n    n = len(nums)\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    elif n == 3:\n        return 1\n    elif n == 4:\n        return 1\n    elif n == 5:\n        return 1\n    elif n == 6:\n        return 1\n    elif n == 7:\n        return 1\n    elif n == 8:\n        return 1\n    elif n == 9:\n        return 1\n    elif n == 10:\n        return 1\n    elif n == 11:\n        return 1\n    elif n == 12:\n        return 1\n    elif n == 13:\n        return 1\n    elif n == 14:\n        return 1\n    else:\n        raise Exception('invalid input to specialFilter')", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    sum = 0\n    for i in xrange(len(nums)):\n        if nums[i] >= 10:\n            sum = sum + 1\n    if sum == 1:\n        return 1\n    elif sum == 2:\n        return 2\n    else:\n        return 0", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    result = 0\n    for num in nums:\n        if num < 10:\n            result += 1\n        elif (num % 2) == 1:\n            result += 1\n    return result", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filterN(nums):\n        l = len(nums)\n        # check if all numbers are odd\n        if all([x % 2 == 0 for x in nums]):\n            # return 0 if all numbers are odd\n            return 0\n        # check if all numbers are greater than 10\n        for x in nums:\n            if x > 10:\n                return 1\n        # check if last digit is odd\n        for x in nums:\n            if x % 2 == 0:\n                return 1\n        # return 1 for all numbers that are greater than 10 and all numbers \n        # are odd\n        return 1\n    return filterN", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def func(num):\n        if num.isdigit():\n            return num > 10 and num[-1] == odd\n\n    return map(func, nums)\n</s>", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(num):\n        return (num > 10) & (num % 10 == 1) & (num % 10 % 2 == 1)\n\n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def _specialFilter(x):\n        return x > 10 and x % 2 == 0 and x > 10 and x % 3 == 0 and x > 10 and x % 5 == 0 and x > 10 and x % 7 == 0 and x > 10 and x % 9 == 0\n    return _specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    nums = tuple(int(num) for num in nums)\n    while nums:\n        for i in xrange(len(nums) - 1):\n            if abs(nums[i]) > abs(nums[i + 1]):\n                nums.pop(i)\n                break\n        else:\n            break\n    return len(nums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    a = []\n    for i in nums:\n        a.append(i[0])\n        if (i[1] % 2) == 0:\n            a.append(i[1])\n        else:\n            a.append(-i[1])\n    return len(a)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(num):\n        if num < 10:\n            return True\n        elif num % 2 == 1:\n            return False\n        elif num % 3 == 1:\n            return False\n        elif num % 5 == 1:\n            return False\n        elif num % 7 == 1:\n            return False\n        elif num % 9 == 1:\n            return False\n        else:\n            return False\n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def check(num):\n        if num > 10:\n            return True\n        return False\n\n    numbers = [num for num in nums]\n    results = []\n    for num in numbers:\n        if check(num):\n            results.append(num)\n    return len(results)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    # Decide whether first digit is odd or even, and last digit is odd or even.\n    # first digit is odd if odd and even or even and odd\n    lastDigitOdd = False\n    lastDigitEven = False\n    for i in range(0, len(nums)):\n        if nums[i][0] % 2:\n            lastDigitEven = False\n        else:\n            lastDigitOdd = False\n    # Return the number of odd elements in the array.\n    if lastDigitOdd:\n        return 1\n    else:\n        return 2", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums) == 0:\n        return 0\n    elif len(nums) == 1:\n        if nums[0] % 10 == 1:\n            return nums[0]\n    elif len(nums) == 2:\n        if nums[1] % 10 == 1:\n            return nums[0]\n    elif len(nums) == 3:\n        if nums[0] % 10 == 1 or nums[1] % 10 == 1:\n            return nums[0]\n        elif nums[0] % 10 == 3 or nums[1] % 10 == 1:\n            return nums[0]\n        elif nums[0] % 10 == 5 or nums[1] % 10 == 1:\n            return nums[0]\n        elif nums[0] % 10 == 7 or nums[1] % 10 == 1:\n            return nums[0]\n        elif nums[0] % 10 == 9 or nums[1] % 10 == 1:\n            return nums[0]\n        else:\n            return 0\n    else:\n        raise ValueError(\"Array length must be 1, 2 or 3\")", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\n    if len(nums) == 0:\n        return 0\n    elif len(nums) == 1:\n        return 1\n\n    def __reduce__(self):\n        return (type(self), self.__dict__)\n\n    def __call__(self, x):\n        if x in [1, 3, 7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99]:\n            return 1\n        elif x in [-10, -31, -90]:\n            return 2\n        else:\n            return 1\n\n</s>", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def f(num):\n        \"\"\"Return the number of odd numbers greater than 10 and both first and\n        last digits are odd (1, 3, 5, 7, 9).\"\"\"\n        odd = 0\n        for i in range(2, len(nums)):\n            odd = odd if nums[i] % 2 == 0 else 0\n        return odd\n\n    # just start with two numbers\n    nums = [nums[0], nums[0]]\n\n    # walk through the numbers, checking all pairs\n    # each pair is an integer so the indices can be easily traversed\n    i = 0\n    for n in nums:\n        if n < 0:\n            nums[i] = -n\n            i += 1\n        else:\n            if n % 2 == 0:\n                f(n)\n            nums[i] += 1\n            i += 1\n\n    return i", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilterOdd(nums):\n        \"\"\"Write a function that takes an array of numbers as input and \n        returns the number of elements in the array that are greater than \n        10 and both first and last digits are odd (1, 3, 5, 7, 9).\n        For example:\n        specialFilterOdd([15, -73, 14, -15]) => 2 \n        specialFilterOdd([33, -2, -3, 45, 21, 109]) => 1\n        \"\"\"\n        if nums[0] == 0:\n            return nums[1]\n        elif nums[1] == 0:\n            return nums[2]\n        else:\n            if nums[0] % 2 == 1 or nums[1] % 2 == 1:\n                return nums[0] + nums[1]\n            else:\n                return nums[0] + nums[1] + nums[2] + nums[3] + nums[4] + nums[5] + nums[6] + nums[7] + nums[8] + nums[9] + nums[10] + nums[11] + nums[12] + nums[13] + nums[14] + nums[15] + nums[16] + nums[17] + nums[18] + nums[19] + nums[20] + nums[21] + nums[22] + nums[23] + nums[", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    # function to filter out numbers with odd first and last digits\n    def oddFilter(nums):\n        \"\"\"Filter out numbers with odd first and last digits.\n        Input: nums = [1,3,5,7,9,11]\n        Output: [ 1, 5 ]\n        \"\"\"\n        filtered_out = []\n        for num in nums:\n            if num[0] % 2!= 0:\n                filtered_out.append(num)\n        return filtered_out\n\n    # filter out numbers with odd first and last digits\n    odd_filtered = filter(oddFilter, nums)\n    # make sure we have only even numbers left\n    return len(nums) - len(odd_filtered)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter1(nums):\n        \"\"\"Function to find numbers with odd first and last digits\"\"\"\n        # Special case to account for the first number\n        if nums == 1:\n            return 0\n        # Recursion\n        if nums == 3:\n            # Find odd numbers on the previous list\n            oddNumbers = specialFilter1(nums-1)\n            if len(oddNumbers) == 1:\n                return 1\n            return specialFilter1(oddNumbers)\n        # Recursion\n        if nums == 5:\n            # Find odd numbers on the previous list\n            oddNumbers = specialFilter1(nums-2)\n            if len(oddNumbers) == 1:\n                return 1\n            return specialFilter1(oddNumbers)\n        # Recursion\n        if nums == 7:\n            # Find odd numbers on the previous list\n            oddNumbers = specialFilter1(nums-3)\n            if len(oddNumbers) == 1:\n                return 1\n            return specialFilter1(oddNumbers)\n        # Recursion\n        if nums == 9:\n            # Find odd numbers on the previous list\n            oddNumbers = specialFilter1(nums-4)\n            if len(oddNumbers) == 1:\n                return 1\n            return specialFilter1(oddNumbers)\n        # Recursion\n        if nums == 11:\n            # Find odd", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    n = len(nums)\n    if n == 0:\n        return 0\n    return n / (n % 2) + 1", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums) == 0:\n        return 0\n    if len(nums) > 1:\n        if nums[0] > 10 and nums[0] % 2 == 0:\n            return 1\n        if nums[-1] > 10 and nums[-1] % 2 == 0:\n            return 1\n        else:\n            return 0\n    else:\n        return nums[0] > 10 and nums[0] % 2 == 0 and nums[-1] > 10 and nums[-1] % 2 == 0", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(nums):\n        n = len(nums)\n        if n == 1:\n            return nums[0] > 10 and nums[0] % 2 == 1 and nums[0]!= 9\n        elif n == 2:\n            return nums[0] > 10 and nums[0] % 2 == 1\n        elif n == 3:\n            return nums[0] > 10 and nums[0] % 2 == 1\n        elif n == 5:\n            return nums[0] > 10 and nums[0] % 2 == 1\n        elif n == 7:\n            return nums[0] > 10 and nums[0] % 2 == 1\n        elif n == 9:\n            return nums[0] > 10 and nums[0] % 2 == 1\n        else:\n            return False\n\n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilterCmp(x):\n        if x.isdigit():\n            return 1\n        elif x < 10:\n            return -1\n        else:\n            return 0\n\n    return specialFilterCmp", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(nums):\n        if len(nums) == 0:\n            return False\n        if len(nums) == 1:\n            return True\n        if nums[0].isdigit():\n            if nums[0] % 2 == 0:\n                return True\n        return len(filter(nums[1:])) == 1 + len(filter(nums[2:])) <= 10\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums) == 0:\n        return 0\n    else:\n        return sum([odd(x) for x in nums if x > 10 and x % 2 == 1]) + sum([odd(x) for x in nums if x % 2 == 0])", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(n):\n        if n == 10:\n            return 1\n        if n[0] % 2 == 0:\n            return 1\n        return 0\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    # (we need this list here, as it may be used in further filter statements)\n    odd = [1, 3, 5, 7, 9, 11]\n\n    def specialFilter2(nums):\n        if len(nums) > 2:\n            if nums[0] % 2 == 0:\n                return 1\n            else:\n                return 0\n        else:\n            return 0\n\n    def specialFilter3(nums):\n        if len(nums) > 2:\n            if nums[0] % 2 == 0 and nums[1] % 2 == 0:\n                return 1\n            else:\n                return 0\n        else:\n            return 0\n\n    for i in range(len(nums)):\n        if odd[i] == 1:\n            yield i\n            continue\n        if odd[i] == 1:\n            if specialFilter2(nums) == 1:\n                yield i\n                continue\n        if odd[i] == 1:\n            if specialFilter3(nums) == 1:\n                yield i\n                continue", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    # Return the number of elements in the array that are greater than 10 and\n    # both first and last digits of a number are odd\n    # For example:\n    # specialFilter([15, -73, 14, -15]) => 1\n    # specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    # specialFilter([-3, -2, -55, -81, -3]) => 0\n    # specialFilter([-11, 3, 10]) => 0\n    # specialFilter([-9999, -9999, -9999, -9999]) => -1\n    # specialFilter([9999, -9999, -9999, -9999, -9999]) => -1\n\n    # Function to count odd numbers:\n    odd = lambda x: int(x) % 2 == 0\n    nums = list(map(odd, nums))\n\n    # Define the function to do the math:\n    def calc(nums):\n        if len(nums) == 0:\n            return 0\n        else:\n            if len(nums) % 2!= 1:\n                return 0\n            else:\n                return sum(n for n in nums if n % 2 == 1)\n\n    return calc(nums)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(nums):\n        for num in nums:\n            if num > 10 and not str(num)[2:3].isdigit() and \\\n               not num.isdigit():\n                return 1\n        return 0\n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if len(nums) < 2:\n        return 0\n    else:\n        i = 1\n        while i < len(nums):\n            if nums[i] > 10:\n                return i\n            i += 1\n        return 0", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def isNumber(n):\n        if (n % 2) == 0: return True\n        elif (n % 5) == 0: return True\n        elif (n % 7) == 0: return True\n        elif (n % 9) == 0: return True\n        else: return False\n    \n    if len(nums) == 0:\n        return 0\n    else:\n        return len([num for num in nums if isNumber(num[0]) and isNumber(num[1])])", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(nums):\n        filtered = []\n        for num in nums:\n            if num >= 10:\n                filtered.append(num)\n            if num[0] % 2 == 1:\n                filtered.append(num)\n            else:\n                filtered.append(-num)\n        return len(filtered)\n\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def isPureOdd(num):\n        \"\"\"Return true if the number is pure odd.\"\"\"\n        return any(i % 2 == 0 for i in num)\n    isPureOdd(nums) + 1\n    return len(list(set(nums)))", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(n):\n        if n > 10:\n            return (n % 2)\n        if n[-1] == '1' and n[:-1] == '3' or n[-1] == '3' and n[:-1] == '1':\n            return (n % 3)\n        return (n == 0)\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    result = []\n    for i in nums:\n        if i > 10:\n            result.append(i)\n    if len(result) % 2 == 0:\n        result.append(0)\n    return len(result)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    odd = True\n    # find all odd numbers\n    for i in range(0, len(nums)):\n        if nums[i].isdigit():\n            odd = not odd\n        else:\n            break\n    # find first odd number\n    for i in range(0, len(nums)):\n        if not odd:\n            break\n        if nums[i].isdigit():\n            break\n        else:\n            odd = not odd\n    # find last odd number\n    for i in range(0, len(nums)):\n        if not odd:\n            break\n        if nums[i].isdigit():\n            break\n        else:\n            odd = not odd\n    # if any numbers are odd\n    if odd:\n        # return the number of odd numbers\n        return len(nums)\n    else:\n        # return the number of even numbers\n        return len(nums) - len(nums) % 2", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(n):\n        return 1 if n>10 and n%10!=0 else 2\n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def countOdd(x):\n        if x[0] % 2!= 0:\n            return 1\n        else:\n            return 0\n    return lambda x : countOdd(x) == 2", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    nums = np.array(nums).astype(int)\n    if len(nums) == 0 or nums[0] == 0:\n        return nums\n\n    assert(isinstance(nums[0], int))\n\n    # Find last odd number.\n    last_odd = np.searchsorted(nums, np.nonzero(np.random.rand() > 10)[0])\n    if len(last_odd)!= 0:\n        last_odd = last_odd[0]\n\n    # Find first odd number.\n    first_odd = np.searchsorted(nums, np.nonzero(np.random.rand() % 2)[0])\n    if len(first_odd)!= 0:\n        first_odd = first_odd[0]\n\n    # If any numbers are odd, return 1.\n    if (last_odd!= None and first_odd!= None):\n        return 1\n\n    # If any numbers are not odd, return 0.\n    else:\n        return 0", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if nums == []: return 0\n    else:\n        # Special case\n        if len(nums) == 0:\n            return 1\n        else:\n            # Take out the first and last\n            nums = nums[:-1]\n            s = \"\"\n            l = 0\n            while l < len(nums):\n                s = s + str(nums[l])\n                l += 1\n            if s[0] == \"0\":\n                s = s[1:]\n            return len(set(nums) - {str(nums[0])} - {str(nums[-1])} - {s})", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\n    def specialFilter(num):\n        nums = list(nums)\n        for i in range(len(nums) - 1):\n            if nums[i] % 2 == 1:\n                return i + 1\n        return len(nums) + 1\n\n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    # Numbers that are greater than 10, both first and last digits are odd, \n    # and both are at the end of the array.\n    return [num in list(range(10)) for num in nums]", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    filterList = [True, True, True, True, True, True]\n    filterList[0] = lambda x: x >= 10 and (not x % 2) and (x not in range(2, 10))\n    filterList[1] = lambda x: x >= 10 and x % 2 and x not in range(2, 10)\n    filterList[2] = lambda x: x >= 10 and x % 2 and x not in range(2, 10)\n    filterList[3] = lambda x: x >= 10 and x % 2 and x not in range(2, 10)\n    filterList[4] = lambda x: x >= 10 and x % 2 and x not in range(2, 10)\n    filterList[5] = lambda x: x >= 10 and x % 2 and x not in range(2, 10)\n\n    if len(nums) == 1:\n        return filterList[0](nums[0])\n    elif len(nums) == 2:\n        return filterList[0](nums[0]) + filterList[1](nums[1])\n    elif len(nums) == 3:\n        return filterList[0](nums[0]) + filterList[1](nums[1]) + filterList[2](nums[2])\n    elif len(nums) == 4:\n        return filterList[0](nums[0]) +", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    return sum(n for n in nums if abs(n) > 10 and n % 2 == 1 and n % 3 == 1)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    nums = [num for num in nums]\n    nums.sort(reverse=True)\n    l = len(nums)\n    if l % 2 == 1:\n        return 0\n    elif l % 2 == 3:\n        return 1\n    else:\n        return 2", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    if not nums:\n        return 0\n    def filter(i):\n        if i > 10:\n            return True\n        elif (i % 2) == 1:\n            return True\n        else:\n            return False\n    return len(filter(1, nums)) + len(filter(2, nums))</s>", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    filtered_array = []\n    for number in nums:\n        if len(number) == 2:\n            if (number[0] % 2 == 0 and number[1] % 2 == 0):\n                filtered_array.append(number)\n        else:\n            filtered_array.append(number)\n    return len(filtered_array)", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def func(nums):\n        for n in nums:\n            if n > 10 and n % 2!= 1:\n                return 1\n        return 0\n    return func", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    f = lambda num: any([num % 2 == 0 and len(num) % 2 == 0 for num in nums])\n    f = lambda num: int(num) > 10 and f(num) and len(str(num)) % 2 == 0 and (num % 10 == 0)\n    f = lambda num: int(num) > 10 and f(num) and len(str(num)) % 2 == 0 and (num % 10 == 0)\n    return f", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def is_odd(n):\n        \"\"\"Test whether a number is odd or even\"\"\"\n        if not n:\n            return True\n        elif n % 2 == 1:\n            return True\n        else:\n            return False\n    if len(nums) < 2:\n        return True\n    else:\n        if is_odd(nums[0]) and is_odd(nums[-1]):\n            return nums\n        elif is_odd(nums[1]) and not is_odd(nums[-1]):\n            return nums\n        else:\n            return specialFilter([nums[0], nums[-1]]) + specialFilter([nums[1], nums[-1]])", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter2(nums):\n        \"\"\"Write a function that takes an array of numbers as input and \n        returns the number of elements in the array that are greater than \n        10 and both first and last digits of a number are even (2, 4, 6, 8, 10).\n        For example:\n        specialFilter2([15, -73, 14, -15]) => 2 \n        \"\"\"\n        def specialFilter3(nums):\n            \"\"\"Write a function that takes an array of numbers as input and \n            returns the number of elements in the array that are greater than \n            10 and both first and last digits of a number are odd (1, 3, 5, 7, \n            9).\n            For example:\n            specialFilter3([15, -73, 14, -15]) => 1 \n            \"\"\"\n            def specialFilter4(nums):\n                \"\"\"Write a function that takes an array of numbers as input and \n                returns the number of elements in the array that are greater than \n                10 and the middle digit of a number is odd (2, 4, 6, 8, 10).\n                For example:\n                specialFilter4([15, -73, 14, -15]) => 1 \n                \"\"\"\n                def specialFilter5(", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def filter(nums):\n        for i in range(len(nums)):\n            if nums[i]>10 and nums[i-1]%2 == 1:\n                yield i+1\n    return filter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(num):\n        if num > 10 and num % 2 == 1:\n            return 1\n        if num % 2 == 3:\n            return 1\n        if num % 2 == 5:\n            return 1\n        if num % 2 == 7:\n            return 1\n        return 0\n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(num):\n        \"\"\"\n        * Returns the number of elements in the array that are greater than 10\n            and both first and last digits of a number are odd.\n        * For example:\n        specialFilter([15, -73, 14, -15]) => 1\n        \"\"\"\n        if num < 10:\n            return 1\n        elif num < 100:\n            if num % 2 == 1:\n                return 2\n            else:\n                return 1\n        else:\n            if num % 2 == 1:\n                return 1\n            else:\n                return 1\n    return specialFilter", "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    def specialFilter(x):\n        if x > 10 and (x % 2 == 1) and (x % 3 == 0):\n            return 1\n        else:\n            return 0\n        \n    return specialFilter"]]