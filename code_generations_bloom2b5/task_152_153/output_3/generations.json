[["def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # Init\n    list1 = []\n    list2 = []\n    list3 = []\n    list4 = []\n    list5 = []\n    list6 = []\n    list7 = []\n    \n    # Process each match\n    for index in range(len(game)):\n        for index2 in range(len(guess)):\n            # Compare the scores and guesses\n            score1 = game[index]\n            guess1 = guess[index2]\n            score2 = game[index+1]\n            guess2 = guess[index+1]\n            score3 = game[index+2]\n            guess3 = guess[index+2]\n            score4 = game[index+3]\n            guess4 = guess[index+3]\n            score5 = game[index+4]\n            guess5 = guess[index+4]\n            score6 = game[index+5]\n            guess6 = guess[index+5]\n            score7 = game[index+6]\n            guess7 = guess[index+6]\n            list1.append((score1, guess1, score2, guess2, score3, guess3, score4, guess4, score5, guess5, score6, guess6, score7, guess7))\n            list2.append((score2, guess2, score3, guess3, score4, guess4, score5,", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [i[0] for i in game]\n    guesses = [i[1] for i in game]\n    percent = sum(map(lambda x: x[0]-x[1], scores))/len(scores)\n    max_percent = max(map(lambda x: x[0]-x[1], scores))\n    min_percent = min(map(lambda x: x[0]-x[1], scores))\n    all_guess = 0\n    all_percent = 0\n    for guess in guesses:\n        if guess not in scores:\n            all_guess += 1\n            all_percent += 1\n        else:\n            if guess == scores[len(scores)-1]:\n                all_guess += 1\n            if guess in scores[len(scores)-1]:\n                all_percent += 1\n    return all_guess,all_percent", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = np.array(game)\n    guesses = np.array(guess)\n    deffct = lambda score, guess: ((score==guess) and (abs(score-guess)==1) or (abs(score-guess)>=1))\n    i = 0\n    while i<len(scores):\n        if i==len(scores)-1:\n            return deffct(scores[i],guesses[i])\n        elif i==len(scores)-2:\n            return deffct(scores[i],guesses[i])\n        elif i==len(scores)-3:\n            return deffct(scores[i],guesses[i])\n        elif i==len(scores)-4:\n            return deffct(scores[i],guesses[i])\n        else:\n            guess = scores[i]\n            guess = guess.tolist()\n            i+=1\n            return deffct(scores[i],guesses[i])", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # get the array of scores\n    scores = game.scores\n    guess = guess.reshape(game.matches, game.matches)\n    \n    # get the array of guesses\n    guess_ = game.guess\n    \n    # count the number of guesses for each game and store the value\n    num_guesses = len(guess_)\n    return [ compare(game, guess) - compare(game, guess_) for game in game.all_game ]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    total = 0\n    for i in range(len(game)):\n        score = game[i]\n        guess = guess[i]\n        if score == 0:\n            total += 1\n        else:\n            if compare(game[i],guess) > 0:\n                total += 1\n            else:\n                total -= 1\n    return [total]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = list(game.values())[:-1]\n    guesses = list(game.values())[:-1]\n\n    # set the len of the game to the same length as the guesses\n    score_len = len(scores)\n    guess_len = len(guesses)\n\n    if score_len < guess_len:\n        return [0,0,0,0,score_len], [0,0,0,0,guess_len]\n\n    score_len = 0\n    guess_len = 0\n    for i in range(len(scores)):\n        score, guess = scores[i], guesss[i]\n        if score <= 0 or guess <= 0:\n            return [0,0,0,0,i], [0,0,0,0,i]\n        score_len += 1\n        guess_len += 1\n        if score_len == guess_len:\n            return [0,0,0,0,i], [0,0,0,0,i]\n\n    return [0,0,0,0,score_len], [0,0,0,0,guess_len]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize array to be blank\n    score_array = [0] * len(game[0])\n    guess_array = [0] * len(game[1])\n    # compare both arrays with each other\n    for i in range(len(game)):\n        if i == len(game) - 1:\n            score_array[i] = compare(game[i],guess[i])\n        else:\n            score_array[i] = compare(game[i],guess[i] + game[i + 1])\n        # check to see if the score was changed\n        if score_array[i]!= score_array[i + 1] and score_array[i]!= 0:\n            if score_array[i] < 0:\n                guess_array[i] = -1 * (guess_array[i] + guess_array[i + 1])\n            else:\n                guess_array[i] = 0\n        else:\n            guess_array[i] = 0\n    # compare the two arrays with each other\n    for i in range(len(game)):\n        if i == len(game) - 1:\n            score_array[i] = compare(game[i],guess[i])\n        else:\n            score_array[i] = compare(game[i],guess[i] + game[i + 1])\n    # calculate the difference\n    score_diff = sum(score_array) - sum(guess_array)\n    return score_diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    c = len(game)\n    g = len(guess)\n    \n    s = [0] * c\n    gs = [0] * g\n    index = []\n    for i in range(c):\n        s[i] = game[i]\n        gs[i] = guess[i]\n        index.append(i)\n    return compare2(s,gs,index)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #making sure we have enough data\n    if len(game)!= len(guess):\n        print(\"\\nError: the length of the arrays is not the same!\")\n        sys.exit()\n    \n    #making sure we have the same number of matches\n    if len(game) == len(guess):\n        num_matches = len(game)\n        if num_matches < 3:\n            print(\"\\nError: you need more than three matches to compare.\")\n            sys.exit()\n    \n    #getting the score and the guess values\n    scores = game[:num_matches]\n    guesses = guess[:num_matches]\n    \n    #comparing the scores and the guesses\n    for i in range(num_matches):\n        score = scores[i]\n        guess = guess[i]\n        \n        #making sure we have a match\n        if len(score) == len(guess):\n            if len(score) == len(game):\n                if len(score) == len(guess):\n                    if compare(score, guess) == 0:\n                        return [0,0], [0,0]\n                    else:\n                        return [0,0,0], [0,0]\n        else:\n            print(\"\\nError: incorrect score size.\")\n            sys.exit()\n    \n    #no", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [[score1,score2],[score3,score4]]\n    guesses = [[guess1,guess2],[guess3,guess4]]\n\n    for i in range(len(scores)):\n        for j in range(len(guesses)):\n            if i==j:\n                continue\n            if compare(scores[i],guesses[j])==0:\n                return scores[i]-guesses[j]\n            else:\n                return compare(scores[i],guesses[j])", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    left = [0 for x in range(len(game))]\n    right = [0 for x in range(len(game))]\n    for i in range(len(game[0])):\n        for j in range(len(game[1])):\n            left[i]+=1\n            right[j]+=1\n    ans = 0\n    for i in range(len(game[0])):\n        for j in range(len(game[1])):\n            if i == j:\n                ans = max(ans, abs(right[i]-left[i]))\n            else:\n                ans = max(ans, abs(right[j]-left[j]))\n    return ans\n\n\n\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    result = []\n    for i in range(len(guess)):\n        if guess[i] == game[i]:\n            result.append(0)\n        elif game[i] == guess[i]:\n            result.append(0)\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # array of scores\n    scores = np.array(game.scores)\n    # array of guesses\n    guesses = np.array(game.guesses)\n\n    # size of game\n    len_game = len(scores)\n    len_guess = len(guesses)\n    # start index of guesses\n    guess_index = 0\n    # end index of guesses\n    guess_index_end = len_guess\n\n    # sum of all guesses\n    guess_sum = 0\n\n    for i in range(len_game):\n        if (scores[i]!= guesses[i]):\n            # this is a correct guess\n            guess_sum += 1\n            # increment the guess index\n            guess_index += 1\n            # increment the guess index end\n            guess_index_end += 1\n    # return the difference between the guesses and the scores\n    return [np.abs(guesses[i] - scores[i]) for i in range(len_game)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    for i in range(len(game[0])):\n        for j in range(len(guess)):\n            if game[i] == guess[j]:\n                return [i,j]\n            else:\n                return [i,j] - compare(game, guess)[0]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    x = [len(game)]\n    for i in range(len(game)):\n        x[i] = len(guess[i])\n    x[0] += 1\n    for i in range(1, len(game)):\n        for j in range(len(game)):\n            x[i] = x[i] + compare(game[i],guess[j])\n    x[0] += 1\n    return x[0]\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    def compare1(x,y):\n        \"\"\"Compares two numbers, returning 0 if equal, 1 if smaller, and -1 if bigger\n        \"\"\"\n        return cmp(x,y)\n    def compare2(x,y):\n        \"\"\"Compares two numbers, returning 0 if equal, 1 if smaller, and -1 if bigger\n        \"\"\"\n        return cmp(x,y)\n    def compare3(x,y):\n        \"\"\"Compares two numbers, returning 0 if equal, 1 if smaller, and -1 if bigger\n        \"\"\"\n        return cmp(x,y)\n    def compare4(x,y):\n        \"\"\"Compares two numbers, returning 0 if equal, 1 if smaller, and -1 if bigger\n        \"\"\"\n        return cmp(x,y)\n    try:\n        array = compare(game,guess)\n        #print(array)\n        #print(\"Guess:\"+str(guess))\n        #print(\"Result:\"+str(game))\n        #print(\"Array:\"+str(array))\n        #print(\"Array is equal\")\n        if array == [0,0,0,0,0,0] or array == [0,0,0,0,0,0] or array == [0,0,0,0,0", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    def max(a,b):\n        \"\"\"Given two arrays, return the element that is larger. \n        \n        example:\n        max([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> 3\n        \"\"\"\n        return max(a,b)\n    def sum(a,b):\n        \"\"\"Given two arrays, return the sum of all elements. \n        \n        example:\n        sum([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> 6\n        \"\"\"\n        return sum(a,b)\n    def sign(a,b):\n        \"\"\"Given two arrays, return the sign of all elements. \n        \n        example:\n        sign([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> -2\n        \"\"\"\n        return sign(a,b)\n    def sumSign(a,b):\n        \"\"\"Given two arrays, return the sign of all elements. \n        \n        example:\n        sumSign([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> 6\n        \"\"\"\n        return sumSign(a,b)\n    return sum(max", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # remember that the answer should be sorted so the smallest value comes first\n    answers = []\n    scores = []\n    for i in range(len(game)):\n        answers.append(game[i])\n        scores.append(guess[i])\n    \n    answer_diff = []\n    answer_diff.append(-1)\n    answer_diff.append(1)\n    answer_diff.append(-1)\n    for i in range(len(answers)):\n        a = answers[i]\n        b = scores[i]\n        diff = abs(a - b)\n        if diff > answer_diff[i]:\n            answer_diff[i] = diff\n            answer_diff.append(diff)\n    return answer_diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    start = 0\n    end = len(game)\n    return [compare(game[i],guess[i]) for i in range(start,end+1)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(guess)!= len(game):\n        print(\"Guess and game lengths must be the same\")\n        return\n\n    if guess[0]!= game[0]:\n        print(\"The first element of the guesses and games must be the same\")\n        return\n\n    if len(guess)!= len(game[1:]):\n        print(\"The guesses and games must have the same length\")\n        return\n\n    if guess[1]!= game[-1]:\n        print(\"The second element of the guesses and games must be the same\")\n        return\n\n    if guess[2]!= game[-1]:\n        print(\"The third element of the guesses and games must be the same\")\n        return\n\n    if len(guess)!= len(game[1:]):\n        print(\"The guesses and games must have the same length\")\n        return\n\n    if guess[3]!= game[-1]:\n        print(\"The fourth element of the guesses and games must be the same\")\n        return\n\n    if len(guess)!= len(game[1:]):\n        print(\"The guesses and games must have the same length\")\n        return\n\n    return [abs(game[i-1] - guess[i]) for i in range(len(game)-1", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    length = len(game)\n    len_guess = len(guess)\n    best = 0\n    worst = len(game)-1\n    score = 0\n    for i in range(len(game)):\n        if game[i][0] == guess[i][0]:\n            score += game[i][1]\n        elif game[i][0] > guess[i][0]:\n            best = i\n            score = game[i][1]\n            if score > best:\n                worst = i\n        elif game[i][0] < guess[i][0]:\n            worst = i\n            score = game[i][1]\n    if best > worst:\n        return worst,score\n    else:\n        return best,score-(game[best][1]-(game[worst][1]))\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    if len(game) == len(guess):\n        for i in range(len(game)):\n            if game[i]!= guess[i]:\n                return [abs(game[i] - guess[i])]\n        return [0, 0, 0, 0, 0]\n    \n    elif len(game) < len(guess):\n        return [abs(game[0] - guess[0])]\n    else:\n        return [abs(game[0] - guess[0]), abs(game[1] - guess[1]), abs(game[2] - guess[2]), abs(game[3] - guess[3]), abs(game[4] - guess[4]), abs(game[5] - guess[5]), abs(game[6] - guess[6]), abs(game[7] - guess[7])]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [score for (i,score) in enumerate(game) for (j,guess) in enumerate(guess)]\n    guess_scores = [score for (i,score) in enumerate(game) for (j,guess) in enumerate(guess)]\n    difference = [abs(score - guess) for score, guess in zip(scores,guess_scores)]\n    return difference", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def guess(x):\n        \"\"\"This function takes a value as input and returns its guess value.\n        \"\"\"\n        return round(x, 1)\n   \n    def guess2(x):\n        \"\"\"This function takes a value as input and returns its guess value.\n        \"\"\"\n        return round(x, 2)\n   \n    def score(x):\n        \"\"\"This function takes a value as input and returns its score value.\n        \"\"\"\n        return x\n   \n    x = np.array(game)\n    y = np.array(guess)\n    \n    n = len(x)\n    m = len(y)\n    \n    if n!= m:\n        print('guess is not correct!')\n        \n    guess2 = guess2(x[0])\n    guess1 = guess1(x[0])\n    score1 = score1(x[0])\n    score2 = score2(x[0])\n    \n    total = sum([score1,score2])\n    result = []\n    for i in range(0,len(x)):\n        if guess2[i] > guess1[i]:\n            result.append(2)\n        elif guess1[i] > guess2[i]:\n            result.append(1)\n        else:\n            result.append(0)\n   \n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    compare = []\n    # sanity check\n    assert len(game) == len(guess), len(game) + len(guess)\n    # initialize the array with 0's\n    for i in range(len(game)):\n        compare.append(0)\n    for i in range(len(game)):\n        for j in range(len(guess)):\n            if game[i] == guess[j]:\n                compare[i] = 0\n            else:\n                compare[i] = abs(game[i] - guess[j])\n    \n    return compare", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # works out where each index is based on the number of matches\n    # so that you can compare it to the other guess\n    #    for i,match in enumerate(game):\n    #        guess[i] = match\n    #        return [i - match for i in range(len(guess))]\n    \n    matches = len(game) # length of game\n    guesses = len(guess) # length of guess\n    # in case you don't know how to divide, divide by 2 gives the largest result\n    ans = [0] # returns the difference between the two, without knowing what the actual value is\n    guess_sq = [] # stores the square of each guess\n    for i in range(matches):\n        # this is a pretty simple function that makes sure the given number doesn't exceed the length of the\n        # game. If you want to know the largest difference possible, subtract one from the answer\n        if (i > 0): # if the current guess is not the first one\n            ans.append(abs(game[i] - guess[i]))\n            guess_sq.append(game[i] * game[i])\n    for i in range(len(guess_sq)):\n        if (abs(guess_sq[i]) < 1)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    list0 = []\n    list1 = []\n    \n    # because we are comparing a list of lists, we need to iterate over each list in the order it is given\n    # we loop over the list0, and then the list1 to make sure that the order of the elements matches\n    for i in range(len(list0)):\n        for j in range(len(list1)):\n            if list0[i][0] > list1[j][0]:\n                temp = list0[i][0]\n                list0[i][0] = list1[j][0]\n                list1[j][0] = temp\n                list0[i][1] = list0[i][1] + list1[j][1]\n                list1[j][1] = list1[j][1] + list0[i][1]\n        list0[i] = list0[i][:2]\n        list1[i] = list1[i][:2]\n    \n    if len(list0) == len(list1):\n        list0 = list0[:2]\n        list1 = list1[:2]\n    return abs(list0 - list1)</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    def calculate(g):\n        \"\"\"\n        calculate(g) -> score\n        \"\"\"\n        if g[0]==g[-1]:\n            return g[1]\n        else:\n            return abs(g[0]-g[-1])\n    g = range(len(game))\n    l = len(g)\n    for i in range(l):\n        if g[i]==g[i]:\n            continue\n        guess,score = guess[i],score[i]\n        if score==0:\n            continue\n        d = compare(g,guess)\n        if d!=0:\n            return d\n    return l", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #takes two lists of scores and guesses of equal length\n    #returns an array of the same length denoting how far off each guess was\n    #if they have guessed correctly, the value is 0, and if not, the value is the absolute difference between the guess and the score\n    def calc(c,g):\n        if len(c)!=len(g): return -1\n        for i,j in enumerate(c):\n            if i!=j:\n                if c[i]!=g[i]: return i\n        return len(c)-len(g)\n    #passes the array of scores and guesses to the function to be calculated\n    #gives the result in the return array, and also the absolute difference\n    #between the guess and the score\n    return calc(compare(c,g),compare(c,g))", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    x = len(game)\n    y = len(guess)\n    guess_diff = []\n    score_diff = []\n    for i in range(x):\n        x,y = game[i],guess[i]\n        if x==y==0:\n            continue\n        guess_diff.append(abs(x-y))\n    for i in range(x):\n        x,y = game[i],guess[i]\n        score_diff.append(abs(x-y))", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guesses = [int(x) for x in guess]\n    scores = [int(x) for x in game]\n    \n    return [abs(scores[i] - guesses[i]) for i in range(len(scores))]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    def add(s1,s2):\n        \"\"\"Add two numbers in a single line.\n        \"\"\"\n        return s1 + s2\n    \n    def add_abs(s1,s2):\n        \"\"\"Add two numbers in a single line.\n        \"\"\"\n        return abs(s1) + abs(s2)\n    \n    def subtract(s1,s2):\n        \"\"\"Subtract two numbers in a single line.\n        \"\"\"\n        return s1 - s2\n    \n    def subtract_abs(s1,s2):\n        \"\"\"Subtract two numbers in a single line.\n        \"\"\"\n        return abs(s1) - abs(s2)\n    \n    def compare(s1,s2):\n        \"\"\"Compute the score for a match, given that a certain guesser has guessed it correctly.\"\"\"\n        return sum([abs(p) for p in s1 if p == guess]) - sum([abs(p) for p in s2 if p == guess]) + 2\n    \n    def add(s1,s2):\n        \"\"\"Add two arrays and return a new array.\"\"\"\n        return [s1[i] + s2[i] for i in range(len(s1))]\n    \n    def add_abs(s1,s2):\n        \"\"\"Add two arrays and return a new array.\"\"\"\n        return [s1[i] + abs(", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def find_gaps(x, y):\n        \"\"\"Return the indices of the positions in x where there is no match in y\"\"\"\n        for i in range(len(x)):\n            if not(x[i] in y):\n                return i\n        return -1\n    \n    def find_best_match(x, y):\n        \"\"\"Return the best match, the index of the position that is closest to the other\n        \"\"\"\n        best_match = -1\n        for i in range(len(x)):\n            if x[i]!= y[i]:\n                if abs(x[i]-y[i]) < best_match:\n                    best_match = abs(x[i]-y[i])\n        return best_match\n    \n    def get_gaps(x):\n        \"\"\"Return the indices of the positions in x where there is no match\"\"\"\n        for i in range(len(x)):\n            if x[i] not in y:\n                return i\n        return -1\n    \n    def find_gap(x):\n        \"\"\"Return the index of the position in x where there is no match\"\"\"\n        for i in range(len(x)):\n            if x[i]!= y:\n                return i\n        return -1\n    \n    def find_best_gap(x):\n        \"\"\"Return the index of", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    result = [0 for i in range(len(game))]\n    for i in range(len(game)):\n        for j in range(len(guess)):\n            score = game[i][0]\n            guess[j]\n            result[i] = score - guess[j]\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    return [abs(game[i+1]-guess[i+1]) for i in range(len(game)/2+1)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    return [\n        -len(game)-len(guess)+len(guess[0])-len(game[0]), # difference\n        len(game[0])-len(guess[0])+len(guess[1])-len(game[1])+len(game[1][0])-len(game[1][1]), # number of places off\n        len(game[1][0])-len(guess[1])+len(guess[2])-len(game[2])+len(game[2][0])-len(game[2][1])\n    ]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #create the different values that we use\n    #0 is perfect, 3 is very good, 6 is very bad, negative numbers are better than 0\n    correct = 0\n    incorrect = 3\n    #number of matches that we have\n    num_matches = len(game) # number of matches\n    #number of guesses\n    num_guess = len(guess) # number of guesses\n    #score of a match\n    score = sum(game[i] for i in range(num_matches))\n    #score of a guess\n    guess = sum(guess[i] for i in range(num_matches))\n    #answer of a match\n    answer = sum(game[i] for i in range(num_matches) if game[i] == guess[i])\n    #answer of a guess\n    answer = sum(guess[i] for i in range(num_matches) if guess[i] == game[i])\n    #calculate the difference between the answer and the score\n    diff = answer - score\n    #number of guesses that are correct\n    num_correct = 0\n    #number of guesses that are incorrect\n    num_incorrect = 0\n    #compare the answer and the guess\n    if answer == score:\n        correct += 1\n        num_correct += 1\n    elif guess", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    scores = [game[i].value for i in range(len(game))]\n    guesses = [game[i].value for i in range(len(game))]\n    \n    #check if guess is correct\n    if guess == scores:\n        return [0,0,0,0,0]\n    elif guess < scores:\n        return [abs(guess-scores) for i in range(len(game))]\n    else:\n        return [abs(guess-scores) for i in range(len(game))]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    scores = [1,2,3,4,5,1]\n    guesses = [1,2,3,4,2,-2]\n    \n    result = []\n    \n    for i in range(len(scores)):\n        if guess == scores[i]:\n            result.append(0)\n        elif guess == scores[i]:\n            result.append(scores[i])\n        else:\n            result.append(scores[i] - guesses[i])\n    \n    return result\n    \n    </s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # We are given two arrays of scores and guesses, where each index shows a match. We are only interested\n    # in the differences between the guesses and the scores. The way we do this is to compare the\n    # guesses to the scores, where a score of 0 means the person is correct and a score of 1 means they\n    # are wrong. We need to determine if the absolute difference between the guess and the score is less than or\n    # equal to the amount we want to compare (in this case 2)\n    # \n    # We then need to determine how far off each guess was. For the example, we are only interested in the\n    # difference between the first guess and the first score, since the difference between the second\n    # guess and the second score will be the same as the difference between the second guess and the\n    # first score. So our answer for the second guess will be the difference between the second guess and the\n    # first score, and so on\n    \n    array = [ 0 for i in range(len(guess)) ]\n    array[0] = 2\n    \n    for i in range(len(guess)):\n        array[i] = abs(guess[i] - guess[0])\n        \n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [[game[i],i,i] for i in range(len(game))]\n    guesses = [[game[i],i] for i in range(len(game))]\n    \n    # returns an array of the same length denoting how far off each guess was.\n    return [abs(game[i] - guess[i]) for i in range(len(game))]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # this is the absolute difference between the two scores\n    scoreDiff = abs(game[guess] - game[guess])\n    # these are the differences of the two guesses with respect to the first one\n    firstGuess = game[0] - game[1]\n    secondGuess = game[2] - game[3]\n    # add the scores to the first guess, subtract the scores from the second guess, and\n    # print the result\n    scoreDiffFirstGuess = abs(firstGuess - scoreDiff)\n    scoreDiffSecondGuess = abs(secondGuess - scoreDiff)\n    print(\"%s vs %s = %s\" % (scoreDiffFirstGuess, scoreDiffSecondGuess, scoreDiff))", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = sorted(game, key=lambda x: x[0], reverse=True)\n    guesses = sorted(guess, key=lambda x: x[0], reverse=True)\n    return [abs(game[i] - guess[i]) for i in range(len(guess))]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    x = [0,0]\n    y = [0,0]\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n            x.append(0)\n        else:\n            x.append(abs(game[i]- guess[i]))\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n            y.append(0)\n        else:\n            y.append(abs(game[i]- guess[i]))\n    if y[0] == 0:\n        return x\n    else:\n        return x-y", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    lengths = len(game)\n    guesses = len(guess)\n    n = 0\n    for i in range(lengths):\n        n += 1\n        if n % 2 == 0:\n            if compare(game[i],guess[i]) == 0:\n                continue\n            else:\n                n = 0\n                break\n        else:\n            n = 0\n    return n", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    total = 0\n    for i in range(len(game)):\n        total += game[i]\n    for j in range(len(guess)):\n        total += guess[j]\n    return total - total % 2", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game) == len(guess):\n        match = 0\n    else:\n        match = len(game)!= len(guess)\n    #average difference\n    averageDifference = 0\n    for i in range(len(game)-1):\n        averageDifference += abs(game[i] - guess[i])\n    return [(guess[i], averageDifference) for i in range(len(guess))]\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    final_score = []\n    for i,j in zip(game, guess):\n        if i == j:\n            continue\n        final_score.append(abs(i - j))\n    return final_score</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    N = len(game[0])\n    M = len(game[1])\n    X = []\n    Y = []\n    for i in range(N):\n        X.append(abs(game[i] - guess[i]))\n    for i in range(N):\n        Y.append(abs(game[i] - guess[i])/(N - i))\n    result = np.zeros(len(game))\n    result[:len(guess)] = np.nan\n    result[len(guess):] = np.nan\n    for i in range(len(guess)):\n        result[i] = abs(X[i] - Y[i])/(N - i) if result[i] < 0 else abs(X[i] - Y[i])/(N - i)\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    res = []\n    for i in range(len(game)):\n        res.append([game[i],guess[i]]) #print game[i], guess[i]\n    for i in range(len(game)):\n        if compare(game[i],guess[i]) <= 0:\n            res.append([game[i],0]) #print game[i], 0\n        else:\n            res.append([game[i],compare(game[i],guess[i])]) #print game[i], compare(game[i], guess[i])\n    return res", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    return [[2-scores[i] for i in guess] for scores in scores]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(game) == len(guess):\n        for i in range(len(game)):\n            if game[i] == guess[i]:\n                return 0\n            elif game[i]!= guess[i]:\n                return abs(game[i] - guess[i])\n    else:\n        return np.array([abs(game[i] - guess[i]) for i in range(len(game)))])", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #first I will make sure the lists are of equal length\n    if len(game) == len(guess):\n        #If the lists are the same length, you have a winner\n        if len(game) == len(guess):\n            #Get the winner\n            winner = 0\n            for i in range(len(game)):\n                #I am assuming that the scores are sorted\n                if game[i] > guess[i]:\n                    winner += 1\n                elif game[i] < guess[i]:\n                    winner -= 1\n            return winner\n        else:\n            #If the lists are not the same length, you have a loser\n            return [game[i] - guess[i] for i in range(len(game))]\n    \n    #Otherwise you have a tie\n    return compare_rel(game,guess)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # 1. Initialize the score array\n    for i in range(len(game)):\n        score[i] = 0\n\n    # 2. Initialize the guess array\n    for i in range(len(game)):\n        guess[i] = 0\n    \n    # 3. For each match, find the score and guess\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n            score[i] += 1\n            guess[i] += 1\n        else:\n            score[i] += 1\n    print('Score:', score)\n    \n    # 4. Compare the scores\n    for i in range(len(game)):\n        if score[i] == 0:\n            print('There was an error. The guesses were:\\n%s' % ','.join(guess[i]))\n        else:\n            print('There was an error. The guesses were:\\n%s' % ','.join(guess[i]))\n    \n    # 5. Return the difference\n    return abs(score[i]- guess[i])", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    a=len(game)\n    b=len(guess)\n    a,b=map(int,a),map(int,b)\n    if a==b:\n        ans=[0]*a\n    else:\n        ans=[0]*(a+b)\n        for i in range(b):\n            if guess[i]>game[i]:\n                ans[i]=(game[i]- guess[i])%a\n            else:\n                ans[i]=(guess[i]- game[i])%a\n    return ans\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    n=len(game)\n    n1=len(guess)\n    array1=list(game)\n    array2=[g for g in guess]\n    array1=array1.transpose()\n    array2=array2.transpose()\n    array1.reverse()\n    array2.reverse()\n    array1.sort(key=lambda g: g[1],reverse=True)\n    array2.sort(key=lambda g: g[1],reverse=True)\n    array1=array1.tolist()\n    array2=array2.tolist()\n    array1=array1.transpose()\n    array2=array2.transpose()\n    array1=array1.reverse()\n    array2=array2.reverse()\n    array1.sort(key=lambda g: g[1],reverse=True)\n    array2.sort(key=lambda g: g[1],reverse=True)\n    array1=array1.tolist()\n    array2=array2.tolist()\n    array1=array1.transpose()\n    array2=array2.transpose()\n    array1=array1.reverse()\n    array2=array2.reverse()\n    array1.sort(key=lambda g: g[1],reverse=True)\n    array2.sort(key=lambda g: g[1],reverse=True)\n    array1=array1.tolist()\n    array2=array2", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    x = len(guess)\n    y = len(game)\n    comp = []\n    for i in range(x):\n        for j in range(y):\n            if i == j:\n                comp.append(0)\n            elif i == j:\n                comp.append(1)\n            else:\n                comp.append(abs(game[i] - guess[i]))\n    \n    return comp", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    scored = [[game[i][j] for j in range(len(game))] for i in range(len(game))]\n    guesses = [[guess[i][j] for j in range(len(guess))] for i in range(len(guess))]\n    \n    distance = [[abs(game[i][j] - guess[i][j]) for j in range(len(game))] for i in range(len(game))]\n    \n    if len(distance) == 1:\n        return distance[0]\n    \n    return sorted(distance, key=lambda x: (abs(x[0]),abs(x[1])))", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    max_square_score = 10.0\n    diff = []\n    for i,score in enumerate(game):\n        if score>max_square_score:\n            diff.append(abs(score-guess[i]))\n        elif score==max_square_score:\n            diff.append(abs(score-guess[i]))\n        else:\n            diff.append(abs(score-guess[i])**2)\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    return [[abs(guess[0]-game[i][0]) for i in range(len(game[0]))] for guess in guess]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    a = [game[0:2], game[2:4]]\n    b = [game[0:2], game[2:4]]\n    x = [[game[0]], game[1]], [[game[1]], game[2]], [[game[2]], game[3]], [[game[3]], game[4]]]\n    y = [[game[0]], game[1]], [[game[1]], game[2]], [[game[2]], game[3]], [[game[3]], game[4]]]\n    maxDiff = max(abs(x[0][1]-y[0][1]), abs(x[1][1]-y[1][1]))\n    aDiff = max(abs(a[0][0]-b[0][0]), abs(a[0][1]-b[0][1]))\n    bDiff = max(abs(b[0][0]-a[0][0]), abs(b[0][1]-a[0][1]))\n    return [aDiff,bDiff]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    distance = []\n    for i in range(len(game)):\n        if guess[i]!= game[i]:\n            distance.append(abs(game[i] - guess[i]))\n    return distance\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    return abs(game[:,0] - guess[:,0]) + abs(game[:,1] - guess[:,1]) + abs(game[:,2] - guess[:,2]) + \\\n           abs(game[:,3] - guess[:,3]) + abs(game[:,4] - guess[:,4]) + abs(game[:,5] - guess[:,5])\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    #create new list of scores and guesses of equal length\n    scores = [game[1][i] - game[0][i] for i in range(len(game[0]))]\n    guesses = [game[1][i] - game[0][i] for i in range(len(game[0]))]\n    \n    #compare scores and guesses\n    matchScores = np.array(scores,dtype=np.float)\n    matchGuesses = np.array(guesses,dtype=np.float)\n    \n    #iterate over guesses and scores\n    for i in range(len(game[0])):\n        for j in range(len(game[1])):\n            diff = np.abs(matchGuesses[j] - matchScores[i])\n            if diff < 0:\n                #guess was incorrect\n                matchGuesses[j] = matchScores[i]\n            else:\n                matchGuesses[j] = diff\n        for i in range(len(game[0])):\n            for j in range(len(game[1])):\n                if i == j:\n                    #same score\n                    matchGuesses[j] = matchScores[i]\n                    continue\n                diff = np.abs(matchGuesses[j] - matchScores[i])\n                if diff < 0:\n                    #guess was incorrect\n                    matchGuesses[j] = match", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    m,n = len(game),len(guess)\n    nummatches = sum(game)\n    numguesses = sum(guess)\n    matches = [game[i] for i in range(m)]\n    guesses = [guess[i] for i in range(n)]\n    diff = 0\n    for i in range(m):\n        diff = max(diff,abs(matches[i]-guesses[i]))\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    result = []\n    for i in range(len(game)):\n        if guess[i]!= game[i]:\n            result.append(len(game[i]) - len(guess[i]))\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    compare = []\n    for i in range(len(game[0])):\n        compare.append(compare(game[0],game[1][i]))\n    return compare", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = (1 if guess == game.cards[0] else 0) + (1 if guess == game.cards[1] else 0) +... + (1 if guess == game.cards[n] else 0)\n    count = 0\n    for i in range(len(game.cards)):\n        count += (score == game.cards[i])\n    return count / len(game.cards)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a temporary array to hold the differences, and then for each game, create a new array to hold\n    # the differences for each guess\n    for i in range(len(game)):\n        temp = [0]*len(game)\n        for j in range(len(guess)):\n            temp[i] += game[i][j] - guess[j]\n    # sort the differences to ensure equal sort order\n    temp.sort(reverse=True)\n    # for each game, get the differences for each guess\n    for i in range(len(game)):\n        for j in range(len(guess)):\n            temp[game[i][j]] = (abs(temp[game[i][j]]) > abs(guess[j])) - (abs(temp[game[i][j]]) < abs(guess[j]))\n    # return the sorted differences\n    return temp", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    h = game.maxsize\n    if len(game.guess) == len(game.score):\n        h += 1\n    return [abs(x-h+1) for x in game.compare(game.guess,game.score)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    diff = 0\n    for index in range(len(game)):\n        if guess[index]==game[index]:\n            diff += 1\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    def get_score(x):\n        \"\"\"Used to retrieve the score at a particular index of an array.\"\"\"\n        return sum(x)/len(x)\n    \n    def get_guess(x):\n        \"\"\"Used to retrieve the guess at a particular index of an array.\"\"\"\n        return sum(x)/len(x)\n    \n    scores = [get_score(x) for x in game]\n    guesses = [get_guess(x) for x in game]\n    if len(scores)!= len(guesses):\n        return [1.0, 1]\n    else:\n        return [abs(x-scores[i]) for i in range(len(scores))]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    from numpy import *\n    # if we don't have guesses or scores, return False to indicate that we are\n    # done\n    if not guess or not score:\n        return False\n    # if we have the same number of scores and guesses, return True to indicate\n    # that we are done\n    if len(score) == len(guess):\n        return True\n    # if there are guesses that are smaller than the scores, return True to\n    # indicate that we are done\n    if len([score[i] < guess[i] for i in xrange(len(score))]) == len(score):\n        return True\n    # otherwise, we have to go through all pairs of guesses and scores, and\n    # compare them to determine if they are valid\n    for i in xrange(len(score)):\n        for j in xrange(len(score[i])):\n            # if the score is bigger than the guess, then we return False\n            # to indicate that we are done\n            if score[i][j] > guess[i][j]:\n                return False\n            # otherwise, we have to compare the two values\n            elif score[i][j] > score[j][i]:\n                return False\n            # otherwise, the guess is correct and we return True", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def bfs(start,end,left):\n        \"\"\"Breadth first search\n        start and end are two nodes of an undirected graph, left is a list of nodes that need to be visited\n        \"\"\"\n        \n        bfs_queue = []\n        current = start\n        \n        while current is not end:\n            if current in left:\n                bfs_queue.append(current)\n            else:\n                visited = True\n                for i in range(len(current)):\n                    if current[i] == current[i+1]:\n                        visited = False\n                        break\n                if visited:\n                    bfs_queue.append(current)\n                    break\n        return bfs_queue\n    \n    # initialise the result arrays and data structures\n    result = []\n    total_guess = len(guess)\n    sum_guess = 0\n    correct_guess = 0\n    \n    # find the correct guesses\n    for index in range(total_guess):\n        if guess[index] == guess[index+1]:\n            sum_guess += 1\n            correct_guess += 1\n        else:\n            result.append(compare(game,guess))\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = game[0]\n    guess = game[1]\n    \n    if len(score) == len(guess):\n        return []\n    score = map(float,score)\n    guess = map(float,guess)\n    scoreA = [0] * len(score)\n    guessA = [0] * len(guess)\n    scoreB = [0] * len(score)\n    guessB = [0] * len(guess)\n    \n    for i in range(len(score)):\n        scoreA[i] = score[i]\n        guessA[i] = guess[i]\n    for i in range(len(score)):\n        scoreB[i] = score[i]\n        guessB[i] = guess[i]\n        \n    return np.abs(scoreA - scoreB) / len(score) + np.abs(guessA - guessB) / len(guess)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # this is how many guesses we want for each person\n    maxNumberOfGuesses = len(game)\n    # this is how many people there are in the tournament\n    numPeopleInTheTournament = len(guess)\n    # this is how many people there are in the pool\n    numPeopleInThePool = len(game)\n    # this is how many people have made a guess\n    numPeopleGuessed = len(guess)\n    # this is how many people have made a correct guess\n    numPeopleCorrect = 0\n    # the result of each person\n    resultArray = [0] * numPeopleGuessed\n    # the result of each person if they guessed correctly\n    resultCorrectArray = [0] * numPeopleGuessed\n    # the result of each person if they guessed correctly\n    resultCorrectArrayCorrected = [0] * numPeopleGuessed\n    # the difference between the correct guess and the score of the person\n    diffArray = [0] * numPeopleGuessed\n    # the difference between the correct guess and the score of the person if they guessed correctly\n    diffCorrectArray = [0] * numPeopleGuessed\n    # the result of the game\n    gameResultArray = [0] * numPeopleGuessed\n    # the result of the game if they guessed correctly", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    a = compareGame(game,guess)\n    b = compareGame(game,guess)\n    x = 0\n    y = 0\n    for i in range(len(a)):\n        if a[i] < b[i]:\n            x = x + 1\n        else:\n            y = y + 1\n    if x == len(a):\n        return [y]\n    else:\n        return [x-len(a)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game) == len(guess):\n        return np.ones_like(game) / np.sqrt(np.sum(game**2) + np.sum(guess**2)) # all scores are perfect\n    else:\n        return np.ones_like(game) / np.sqrt(np.sum(game**2) + np.sum(guess**2) - np.sum(guess**2 * game)) # one of the guesses is perfect", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # make a copy so that the original is not altered\n    scores = list(scores)\n    guesses = list(guesses)\n    # subtract the first score from each score to make each a subtraction from the last match\n    scores.pop(0)\n    for i in xrange(len(scores)):\n        for j in xrange(len(guesses)):\n            score = scores[i] - guesses[j]\n            if score > 0:\n                if compare(scores,guesses) > 0:\n                    return [0,0,0,0,3,3]\n                else:\n                    return [4,4,1,0,0,6]\n            else:\n                if compare(scores,guesses) < 0:\n                    return [0,0,0,0,3,3]\n                else:\n                    return [4,4,1,0,0,6]\n    return [4,4,1,0,0,6]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    x = [0,0,0]\n    for i in range(len(game)):\n        x[i] = abs(game[i]-guess[i])\n    return x\n    \n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # A player's total score is simply the sum of the scores he received in each match. For example, if he received\n    # three scores (1,2,3) in the first match, the score would be 3, and if he received three scores (2,3,4) in\n    # the second match, the score would be 4. We need to calculate how far off each player's score is from the\n    # total score, because we want to know how good they were at their matches.\n    #\n    # After you get the total score for each player, iterate through each match and score each score. Then, you\n    # also have to calculate how far off each score from the total score is. You can do this by subtracting the\n    # score from the total score, and then dividing the result by the number of matches. That gives you a number\n    # that will show how far off each score is from the total score. So, the total score for player 1 in the first\n    # match would be 3, and the total score for player 1 in the second match would be 2. The score for player 2 in\n    # the first match would be 4, the score for player 2 in the second match would be 2", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    correct_guesses = []\n    for i, row in enumerate(game):\n        guessed_row = []\n        for j, column in enumerate(row):\n            guessed_row.append(row[j] - guess[j])\n        if len(guessed_row) == len(row):\n            correct_guesses.append(0)\n        else:\n            for k in range(len(row)):\n                if guessed_row[k]!= row[k]:\n                    correct_guesses.append(abs(guessed_row[k] - row[k]))\n    return correct_guesses\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # sorting the input scores and guesses\n    scores = sorted(game, key=lambda x: x[1])\n    guesses = sorted(guess, key=lambda x: x[0])\n    score_diff = scores[0] - guesses[0]\n    # array of the difference between the score and the guess\n    score_diff_array = [score_diff]\n    # check if the scores and guesses are equal\n    if len(guess) == len(game):\n        if compare(guess, scores) == 0:\n            return score_diff_array\n        else:\n            return compare(scores,guess)\n    else:\n        # make sure we are dealing with two different length arrays\n        if len(guess)!= len(game):\n            print(\"Your guesses and scores must be of the same length.\")\n            print(\"Note: You may guess the correct answer if you know the score first.\")\n            print(\"If you don't know the score, you are probably not correct.\")\n            return None\n        # if they are the same length\n        if len(scores)!= len(guess):\n            print(\"Your score and guess arrays must have the same length.\")\n            print(\"Note: You may guess the correct answer if you know the", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(game)!= len(guess):\n        print(\"Mismatch. Number of games and guesses are unequal\")\n        return None\n    \n    for i in range(len(game)):\n        if game[i]!= guess[i]:\n            print(\"guess = \", guess[i])\n            print(game[i])\n            print(\"game = \", game[i])\n            return None\n    \n    for i in range(len(game)):\n        if (abs(game[i] - guess[i])) > 0.25:\n            return [abs(game[i] - guess[i])]\n    \n    return None", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    num = len(game)\n    diff = np.array([0]*num)\n    scores = np.array([0]*num)\n    for i in range(num):\n        scores[i] = game[i]\n        diff[i] = np.abs(scores[i] - guess[i])\n    return diff\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = len(game)\n    guess = len(guess)\n    if score < 1:\n        return [0,0,0,0,0,0]\n    if guess < 1:\n        return [0,0,0,0,0,0]\n    if not game:\n        return [0,0,0,0,0,0]\n    if not guess:\n        return [0,0,0,0,0,0]\n    # if the order is reversed, the difference should be negative and the guess should be greater than the score\n    # i.e. score should be larger than guess\n    if len(guess) > len(game):\n        return [0,0,0,0,0,0]\n    if len(game) > len(guess):\n        return [0,0,0,0,0,0]\n    maxScore = max(game)\n    maxScore = max(maxScore)\n    maxScore = max(maxScore)\n    maxScore = max(maxScore)\n    maxScore = max(maxScore)\n    maxScore = max(maxScore)\n    maxScore = max(maxScore)\n    maxScore = max(maxScore)\n    maxScore = max(maxScore)\n    maxScore = max(maxScore)\n    maxScore = max(", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(guess)!= len(game):\n        raise Exception(\"Invalid length of guesses and games\")\n    # For the sake of simplicity, we may assume that each game is of equal length.\n    s = []\n    g = []\n    for i in range(len(game)):\n        s.append(game[i])\n        g.append(guess[i])\n        \n    # Recursively compare the scores and guesses\n    for i in range(len(game)):\n        for j in range(len(game[i])):\n            if (game[i][j] == guess[i][j]):\n                s[i].append(game[i][j])\n                g[i][j] = 0\n            elif (game[i][j] == 0):\n                s[i].append(game[i][j])\n                g[i][j] = 1\n            else:\n                s[i].append(game[i][j])\n                g[i][j] = -1\n                if (g[i][j] < 0):\n                    g[i][j] += 1\n    \n    # Put the results into an array\n    return [abs(k) for k in zip(s,g)]\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game)==len(guess):\n        return 0\n    else:\n        return abs(game[guess]-game[0])", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game) == len(guess):\n        if (game[0] == guess[0] and game[1] == guess[1] and game[2] == guess[2] and game[3] == guess[3]):\n            return [0, 0, 0, 0, 3]\n        elif (game[0] == guess[0] and game[1] == guess[1] and game[2] == guess[2] and game[3] == guess[3]):\n            return [0, 0, 0, 0, 3]\n        elif (game[0] == guess[0] and game[1] == guess[1] and game[2] == guess[2] and game[3] == guess[3]):\n            return [0, 0, 0, 0, 3]\n        elif (game[0] == guess[0] and game[1] == guess[1] and game[2] == guess[2] and game[3] == guess[3]):\n            return [0, 0, 0, 0, 3]\n        elif (game[0] == guess[0] and game[1] == guess[1] and game[2] == guess[2] and game[3] == guess[3]):\n            return [0, 0, 0, 0, 3]\n        elif (game[0] == guess[0] and game[1] == guess[1] and game[2] == guess[2] and game[3] == guess[3]):\n            return [0, 0, 0, 0, 3]\n        elif (game[0] == guess[0] and", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guesses = [guess(i) for i in range(len(game[0]))]\n    scores = [game[i] for i in range(len(game[0]))]\n    diff = [abs(guess(i) - score(i)) for i in range(len(game[0]))]\n    return [len(diff) if len(diff) == len(guesses) else 0 for guess in guesses for score in scores]\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    newScores = np.array(game.scores, dtype=np.float)\n    newGuesses = np.array(game.guesses, dtype=np.float)\n    for i in range(len(newScores)):\n        if (newScores[i] > newGuesses[i]):\n            newGuesses[i] = 0\n        else:\n            newGuesses[i] = np.abs(newGuesses[i] - newScores[i])\n    return newGuesses", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def cmp(a,b):\n        return cmp(game[a],game[b])\n    \n    len_game = len(game)\n    len_guess = len(guess)\n    \n    if len_game == len_guess:\n        return cmp(game,guess)\n    \n    diff = 0\n    diff = cmp(game,guess) - diff\n    if diff == 0:\n        diff = abs(guess - game)\n        if diff < 0:\n            diff = 1\n        else:\n            diff = -1\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    return np.abs(game[1:] - guess[:-1]).sum() / len(guess)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    min_value = max_value = None\n    best_guess = guess[0]\n    best_score = score[0]\n    for i, score in enumerate(game):\n        for guess in game:\n            if score == guess:\n                best_guess = guess\n                best_score = score\n                min_value = min(min_value, score)\n                max_value = max(max_value, score)\n        if min_value == max_value:\n            break\n        \n    return ([max(game[i],0) for i in range(len(game))] if game[i] == guess else [0, max(game[i],0) for i in range(len(game))])", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [game[0], game[0], game[1], game[1], game[2], game[2], game[3]]\n    guesses = [guess[0], guess[0], guess[1], guess[1], guess[2], guess[2], guess[3]]\n    diff = []\n    for i in range(len(scores)):\n        if scores[i] > guesses[i]:\n            diff.append(scores[i] - guesses[i])\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    results = [0]*len(game)\n    guesses = [0]*len(game)\n    guessed = [0]*len(game)\n    for i in range(len(game)):\n        results[i] = game[i] - guess[i]\n        guesses[i] = guess[i]\n        guessed[i] = compare(game[i],guess[i])\n    \n    return guessed", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    array = []\n    for x in range(len(game)):\n        for y in range(len(guess)):\n            if game[x][y] == guess[y]:\n                array.append(0)\n            else:\n                array.append(abs(game[x][y] - guess[y]+1))\n    return array\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    match = game[0]\n    guesses = game[1]\n    results = game[2]\n    \n    # print(matches) # print(matches[0],matches[1],matches[2]) # TODO: move to another function\n    \n    if len(guesses) == 0:\n        return 0\n    elif len(results) == 0:\n        return len(matches)\n    \n    # count the number of matches where the guess was wrong.\n    c = 0\n    for i in range(len(matches)):\n        if matches[i]!= guesses[i]:\n            c += 1\n    \n    # print(matches,c) # TODO: move to another function\n    \n    # count the number of matches where the guess was right.\n    r = 0\n    for i in range(len(matches)):\n        if matches[i] == guesses[i]:\n            r += 1\n    \n    # print(matches,c,r) # TODO: move to another function\n    \n    # if c == r: # TODO: move to another function\n    #     return 0\n    # else: # TODO: move to another function\n    #     return abs(matches - guesses) - abs(matches - results) # TODO: move to another function\n    \n    </s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guessScore = sum(guess[x:x+2])/n\n    scoreScore = sum(score[x:x+2])/n\n    scoreGuess = guess[x:x+2]\n    scoreGuessScore = sum(scoreGuess[x:x+2])/n\n    total = scoreScore - scoreGuessScore\n    print(\"Score = \", scoreScore, \" Guess = \", scoreGuess, \" Difference = \", total)\n    return total", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = np.array(game,dtype=float)\n    guesses = np.array(guess,dtype=float)\n    diff = np.abs(guess - scores)\n    abs_diff = np.abs(scores - guesses)\n    return abs_diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    a = game[0]\n    b = game[1]\n    c = guess[0]\n    d = guess[1]\n    \n    if a == 0:\n        return [0,0,0]\n    elif b == 0:\n        return [0,0,0]\n    elif c == 0:\n        return [0,0,0]\n    elif d == 0:\n        return [0,0,0]\n    else:\n        return (abs(a - b) + abs(c - d))/2", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    n = len(game)\n    if len(guess) < n:\n        raise ValueError(\"At least one guess is too short.\")\n    if len(guess) == 0:\n        raise ValueError(\"Guess can only have one value.\")\n    \n    score = list(game[0])\n    guess = list(guess)\n    temp = []\n    for i in range(0, n):\n        if score[i] < 0:\n            temp.append(-1)\n        else:\n            temp.append(score[i] - guess[i])\n    diff = temp[-1]\n    for i in range(0, n):\n        if score[i] > 0:\n            temp.append(0)\n        else:\n            temp.append(score[i] - guess[i])\n    diff = diff + temp[-1]\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    s = [score for score, guess in zip(game, guess) if guess == guess]\n    a = [score - guess for score, guess in zip(game, guess) if guess == guess]\n    d = abs(a)\n    return d", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    # set the start time\n    start = time.time()\n\n    # set the return array\n    allGuesses = []\n    allScores = []\n    # loop through the game's score array\n    for i in range(len(game)):\n        # append a single guess\n        allGuesses.append(game[i])\n        # append a single score\n        allScores.append(game[i] - guess[i])\n\n    # add the total time elapsed\n    timeTaken = time.time() - start\n    print(\"Total time taken: %0.2f seconds.\" % timeTaken)\n\n    # return the results\n    totalGuesses = sum(allGuesses)\n    totalScores = sum(allScores)\n    absoluteGuess = abs(allGuesss[-1] - allScores[-1])\n    absoluteScore = abs(allGuesss[-1] - allGuesses[0])\n    return [totalGuesses, totalScores, absoluteGuess, absoluteScore]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #first, convert the guess and score arrays to lists\n    scores = list(map(int,guess))\n    scores = list(map(int,scores))\n    scores = list(map(int,scores))\n    guesses = list(map(int,guess))\n    guesses = list(map(int,guesses))\n    #then, compute the sum of all the scores and the sum of all the guesses\n    score_sum = sum(scores)\n    guess_sum = sum(guesses)\n    #now, compare the scores\n    if score_sum == guess_sum:\n        return [0,0,0,0,0]\n    else:\n        return [abs(score_sum- guess_sum) for score, guess in zip(scores,guesses)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess = [game[i] for i in range(len(game))]\n    score = [game[i] for i in range(len(game))]\n    result = [[0,0] for i in range(len(guess))]\n    for i in range(len(guess)):\n        if guess[i] == game[i]:\n            result[i][0] += 1\n        else:\n            result[i][0] -= 1\n    \n    # sort the array into ascending order\n    result.sort(key=lambda x: x[0], reverse=True)\n    \n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    result = []\n    for guess, score in zip(guess, game):\n        result.append(score - guess)\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    guess_array = guess.tolist()\n    score_array = game.tolist()\n    diffs = []\n    for i in range(len(game)):\n        if i == 0:\n            if score_array[i] == 0:\n                diffs.append(1)\n            else:\n                diffs.append(abs(game[i]-score_array[i]))\n        else:\n            if score_array[i] == 0:\n                diffs.append(abs(game[i-1][game[i]-1]-score_array[i]))\n            else:\n                diffs.append(abs(game[i]-score_array[i]))\n    \n    return diffs", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Calculate the difference between the score and the guess\n    diff = abs(game[i] - guess[i])\n    # If the difference is too small, ignore it\n    if diff < 1e-8:\n        return None\n    # If the difference is too large, return it as-is\n    elif diff > 1e-8:\n        return diff\n    else:\n        # If the difference is between 1e-8 and 0, return the absolute difference\n        # of the score and the guess\n        # If they have guessed correctly, the value is 0, and if not, the value is the absolute difference between the guess and the score\n        return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    score_array = np.array(game.score_array, dtype=int)\n    guess_array = np.array(game.guess_array, dtype=int)\n    \n    matchcount = len(game.score_array)\n    \n    # For each match\n    for i in range(len(game.score_array)):\n        # Compare score to guess\n        score = score_array[i] - guess_array[i]\n        score = score < 0? score + 1 : score\n        score = score > len(score_array) - 1? 0 : score\n        score = score + 1\n        if score > len(game.score_array) - 1:\n            score = len(game.score_array) - 1\n        # Compare distance to the guess\n        # If match is an even number, check the distance to the nearest neighbor instead\n        if matchcount % 2 == 0:\n            score = score - (score_array[i] - guess_array[i]) // 2\n        else:\n            score = score - (score_array[i] - guess_array[i]) // 2 + (score_array[i] - guess_array[i]) % 2\n        \n        # If score is not in the range [0,len(game.score_array)-1], we need to change it\n        if score > len(game.score_array) - 1:\n            score = len(", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    return np.array(compare(game,guess),dtype=int)\n    #return np.array(compare(game,guess),dtype=float)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # When there are no guesses, we can just return True\n    if len(guess) == 0:\n        return True\n    # If we are all right, return True\n    if len(game) == 0:\n        return True\n    # If we were all right, compare our guesses\n    return [abs(game[i] - guess[i]) for i in range(len(guess))]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game) == len(guess):\n        for match in range(0,len(game)):\n            if game[match]!= guess[match]:\n                return [abs(game[match] - guess[match])]\n        return [0,0,0,0,0,0]\n    \n    if len(game) == len(guess):\n        for match in range(len(game)):\n            if game[match]!= guess[match]:\n                return [abs(game[match] - guess[match])]\n        return [0,0,0,0,0,0]\n    \n    if len(game)!= len(guess):\n        return [0,0,0,0,0,0]\n    \n    for match in range(len(game)):\n        if game[match]!= guess[match]:\n            return [abs(game[match] - guess[match])]\n    \n    return [0,0,0,0,0,0]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = game[0]\n    guesses = game[1]\n    \n    if len(scores) < len(guesses):\n        return [0,0,0,0,0], [0,0,0,0,0]\n    if len(scores) == len(guesses):\n        return [0,0,0,0,0], [0,0,0,0,0]\n    for i in range(len(scores)):\n        for j in range(len(guesses)):\n            if (scores[i] == guess[j]):\n                return [scores[i],guess[j]], [scores[i],guess[j]]\n            else:\n                return [scores[i],guess[j]], [scores[i],guess[j]]\n\n    return [scores[i],guess[j]], [scores[i],guess[j]]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    max = len(game[0])\n    for i in range(max):\n        if len(game) > 1:\n            for j in range(len(game)):\n                if game[i] == game[j]:\n                    break\n        else:\n            break\n    if i == max:\n        return [0,0]\n    else:\n        return map(abs, compare(game,guess))</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess_array = []\n    for i in range(len(game)):\n        guess_array.append(guess[i])\n    array_of_guess_scores = []\n    for i in range(len(game)):\n        score_array = []\n        for j in range(len(game)):\n            if i!= j:\n                score_array.append(game[i]-score[j])\n        array_of_guess_scores.append(score_array)\n    array_of_guess_scores.sort()\n    array_of_guess_scores.reverse()\n    array_of_guess_scores.reverse()\n    return array_of_guess_scores", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # gets a list of all possible guesses\n    all_guesses = [guess[i] for i in range(len(game[0]))]\n    # gets a list of all possible scores\n    all_scores = [score[i] for i in range(len(game[0]))]\n    # gets the distance between the guess and the score\n    score_distance = [abs(score_guess[i] - game[i]) for i in range(len(game[0]))]\n    # gets the distance between each possible guess and the score\n    guess_distance = [abs(guess_guess[i] - game[i]) for i in range(len(game[0]))]\n    # gets the distance between all possible guesses and all possible scores\n    all_guess_distance = [abs(all_guess_guess[i] - all_guess_score[i]) for i in range(len(game[0]))]\n    # averages them\n    score_distance = 0.0\n    guess_distance = 0.0\n    all_guess_distance = 0.0\n    for i in range(len(game[0])):\n        score_distance += score_distance[i]\n        guess_distance += guess_distance[i]\n        all_gu", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # Test vector is shorter than guess vector\n    assert len(game) < len(guess), 'Length of game vector is larger than guess vector.'\n    # Test vector is longer than guess vector\n    if len(game) > len(guess):\n        return [0,0]\n    # Test vector is exactly the same as guess vector\n    if len(game) == len(guess):\n        return [0,0]\n    # Test vector is longer than guess vector\n    elif len(game) < len(guess):\n        return [compare(game,guess[0]),compare(game,guess[1]),compare(game,guess[2]),compare(game,guess[3])]\n    else:\n        return [compare(game,guess[0]) + compare(game,guess[1]) + compare(game,guess[2]) + compare(game,guess[3]),compare(game,guess[0]) - compare(game,guess[1]) - compare(game,guess[2]) - compare(game,guess[3])]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    correct = 0\n    failed = 0\n    for g in guess:\n        for s in score:\n            if g == s:\n                correct += 1\n    for s in score:\n        for g in guess:\n            if g == s:\n                failed += 1\n    if not failed == 0:\n        return [0, failed]\n    else:\n        return [abs(s - g) for s,g in zip(score,guess)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def err(x,y):\n        \"\"\"Error correction for the data set.\"\"\"\n        if x <= 0 and y <= 0: return False\n        else: return x > y\n        \n    def update(guess,score):\n        \"\"\"This should update the score if the user guesses correctly.\"\"\"\n        score -= err(score,guess)\n        \n        if err(score,guess):\n            if score < 0: return update(guess,score)\n            else: return update(guess,score + 1)\n        else:\n            if score > 0: return update(guess,score)\n            else: return update(guess,score - 1)\n            \n    return [0,update(guess,score),update(guess,score)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    N = len(game)\n    guess = guess.tolist()\n    guesses = [guess] * N\n    scores = [game[i] for i in range(N)]\n    for i in range(N):\n        if game[i]!= guesses[i]:\n            return score_diff(scores[i],guess[i])\n        \n    return guesses", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    m = [len(matches) for matches in game]\n    n = len(guesses)\n    n = n if n > 1 else 1\n    \n    assert(m == n)\n    out = []\n    for i in range(m):\n        if i < n:\n            out.append(0.0)\n        else:\n            out.append(abs(guesses[i] - game[i]))\n    return out", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    result = []\n    for i in range(len(guess)):\n        score = guess[i]\n        guess_score = game[i]\n        if score!= guess_score:\n            result.append(abs(score - guess_score))\n    \n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # test if the arrays have the same length\n    if len(guess)!= len(game):\n        return []\n    # calculate the difference between the guesses and the scores\n    return [abs(i) - abs(j) for i, j in zip(guess, game)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    allmatches = game[0]\n    allguesses = guess[0]\n    matches = [[i,i,i] for i in range(len(game))]\n    guesses = [[i,i,i] for i in range(len(guess))]\n    differences = [[-1,-1,-1] for i in range(len(matches))]\n    for i,j in zip(matches,guesses):\n        if i==j:\n            differences[i][j] = 0\n        else:\n            differences[i][j] = abs(matches[i]-j)\n    return differences", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    nummatches = len(game)\n    for i in range(0,nummatches):\n        #first, compare the scores against each other\n        score = game[i]\n        guess = guess[i]\n        if score > guess:\n            return i,score,guess\n        if score < guess:\n            return i,score,guess\n    return -1,-1,None", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    result = []\n    for index in range(len(game)):\n        if guess[index]!= game[index].holes:\n            result.append(index)\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    diff = [0 for i in range(len(game))]\n    for i in range(len(game)):\n        diff[i] = abs(game[i]-guess[i])\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    matches = [(i,game[i]) for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    \n    #sort the guesses and the scores\n    scores = sorted([(i,compare(guess[i],game[i])) for i in range(len(guess))])\n    guesses = sorted([game[i] for i in range(len(game))])\n    \n    #compare the guess and the score, but only if the score was not equal to -1\n    if len(guess)!= len(scores):\n        #compare the scores\n        if len(matches) == len(guesses):\n            #the values are equal\n            if compare(guess,scores) == 0:\n                #the scores are equal\n                if compare(scores,matches[0]) == 0:\n                    #both are equal, so we're done\n                    return matches\n                else:\n                    #not equal\n                    return compare(scores,matches[0]) - 1\n    \n    #otherwise, the scores are not equal, so we need to compare them\n    else:\n        #if the guess is not equal to the score, print the difference\n        if compare(guess,scores) == 0:", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guesses = len(guess)\n    scores = len(game)\n    # setup the results\n    res = [(guess,score) for (score,guess) in zip(scores,guesses)]\n    # run through the guesses\n    for i in range(len(guess)):\n        # compare the current guess with the score in the result array\n        if guess[i] == res[i][1]:\n            res[i][1] = 0\n            res[i][0] = 0\n            # if the current guess was correct\n            if res[i][0] == 0:\n                # remove the current entry from the result array\n                del res[i]\n            # if the current guess was incorrect\n            else:\n                res[i][1] = res[i][1] + guesses-i\n    # return the result\n    return res", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    answer = []\n    for i in range(len(game)-1):\n        score = game[i]\n        guess = guess[i]\n        answer.append(score-guess)\n    return answer", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create the array of guesses and scores\n    guesses, scores = [], []\n    for i in range(len(game)):\n        guess = game[i]\n        guesses.append(guess)\n        scores.append(score(guess, game[i]))\n    # sort the array of guesses and scores\n    sorted_guess, sorted_score = sorted(guesses, key=lambda g: g[0]), sorted(scores, key=lambda s: s[0])\n    # convert the guesses and scores to the same type of array\n    guesses = [guess[i] for i in range(len(game))]\n    scores = [score(game[i], guess[i]) for i in range(len(game))]\n    # compare the arrays\n    if compare(guesses, sorted_guess) == 0:\n        print(\"Guess is correct\")\n        return 0\n    elif compare(scores, sorted_score) == 0:\n        print(\"Guess is correct\")\n        return 0\n    else:\n        print(\"Guess is not correct\")\n        return -1\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game) == len(guess):\n        if len(game)!= len(guess):\n            raise Exception(\"The lengths of the two arrays must be the same.\")\n        if len(game)!= len(guess[0]):\n            raise Exception(\"The lengths of the two arrays must be the same.\")\n        if len(game)!= len(guess[1]):\n            raise Exception(\"The lengths of the two arrays must be the same.\")\n        if len(game[0])!= len(guess[0]):\n            raise Exception(\"The lengths of the two arrays must be the same.\")\n        if len(game[1])!= len(guess[1]):\n            raise Exception(\"The lengths of the two arrays must be the same.\")\n        if len(game[0])!= len(guess[0][0]):\n            raise Exception(\"The lengths of the two arrays must be the same.\")\n        if len(game[1])!= len(guess[1][0]):\n            raise Exception(\"The lengths of the two arrays must be the same.\")\n        for i in range(len(game)):\n            if game[i]!= guess[i]:\n                return i\n        return len(game)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = game.get_scores(guess)\n    guesses = game.get_guesses(guess)\n    score = 0\n    guess_diff = 0\n    for i in range(len(guesses)):\n        if scores[i] == guesses[i]:\n            score += 1\n        else:\n            guess_diff += (guesses[i] - scores[i])\n    if score == 0:\n        return [guess_diff]\n    else:\n        return [abs(guess_diff)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    temp = [[compare(game,guess[i]) for i in range(len(game))] for game in game]\n    return [abs(game[i] - guess[i]) for game in temp]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    result = []\n    for i, x in enumerate(game):\n        result.append(x - guess[i])\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    correct = 0\n    for i in range(len(guess)):\n        if guess[i] == game[i]:\n            correct += 1\n    return correct", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # TODO implement functions for this function\n    # TODO rewrite to use ordered array\n    # TODO use collections\n    # TODO use efficiently\n\n    guessed_matches = [0]*len(game)\n    guessed_scores = [0]*len(game)\n    current_match = 0\n    for (i, j) in enumerate(game):\n        # compare\n        if compare(guess[i],guess[j]) <= 0:\n            guessed_matches[current_match] = i\n            guessed_scores[current_match] = j\n            current_match = i\n\n    return guessed_matches,guessed_scores", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #Go through all the scores and guesses, one at a time, and see which one they are closest to.\n    for i in range(len(game)-1):\n        for j in range(len(guess)):\n            if (game[i] == guess[j]):\n                print(i,j)\n                if (game[i] > guess[j]):\n                    return compare(game,guess)\n                else:\n                    return -compare(game,guess)\n    return 0", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score_guess = [[guess[game[i][0]] for i in range(len(game))] for guess in guess]\n    score_guess = zip(*score_guess)\n    i = 0\n    count = 0\n    left = 0\n    right = 0\n    while True:\n        if (len(score_guess) == len(game)):\n            result = 0\n            for i in range(len(game)):\n                result = result + abs(score_guess[i][game[i][0]] - guess[game[i][0]])\n            if result == 0:\n                result = 0\n            else:\n                result = result - score_guess[len(game) - 1][0]\n            return result\n        else:\n            left = left + abs(score_guess[i][game[i][0]] - guess[game[i][0]])\n            right = right + abs(score_guess[len(game) - 1][game[i][0]] - guess[game[i][0]])\n            if left == 0:\n                result = 0\n            else:\n                result = result + abs(left - score_guess[i][len(game) - 1][0])\n            if right == 0:\n                result = 0\n            else:\n                result = result - abs(right - score_guess[len(", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    def _compare(i,j):\n        \"\"\"Compare i and j.\"\"\"\n        return abs(game[i][j] - guess[i][0]) / abs(game[i][j] - guess[i][0])\n    diff = [max([_compare(i,j) for i in range(len(game))]) for j in range(len(game))]\n    for i in range(len(game)):\n        for j in range(len(game)):\n            if _compare(i,j) > diff[i]:\n                diff[i] = _compare(i,j)\n    return diff\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    match1 = game[0].copy()\n    match2 = game[1].copy()\n    # insertion sort\n    sorted_list1 = sorted(list(match1))\n    sorted_list2 = sorted(list(match2))\n    guess1 = guess[0].copy()\n    guess2 = guess[1].copy()\n    # let the user calculate what the answers are\n    result = 0\n    for i in range(len(match1)):\n        result += abs(guess1[i] - match1[i])\n    result += abs(guess2[i] - match2[i])\n    # convert the result to a number, and return it\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Create an array of the lengths of the two arrays\n    lenA = len(game)\n    lenB = len(guess)\n    \n    # For each match\n    for i in range(lenA):\n        # If they matched up, then compare their guesses\n        if game[i] == guess[i]:\n            # Return the value of the guess as well as the correct score\n            return (game[i], guess[i], compare(game, guess))\n        # Otherwise return -1\n        else:\n            return -1\n    # If you get here, you are either making a mistake or you don't know what to do\n    print(\"I don't know how to do this!\")\n\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #you can just do the comparison once and then use the result of that comparison to check the answers of the user\n    matches = [0,0,0,0,0,0]\n    scores = [1,1,1,1,1,1]\n    guesses = [1,2,2,3,3,2]\n    #you can do this in a loop, but it's slower than just one time comparison\n    for i in range(len(matches)):\n        #you have to make an index for the match and then check the score of each possible match\n        if i in matches:\n            #compare the score with the score of the guess\n            #you can just use the math functions for the difference or just do the math with the absolute difference\n            #you will have to make the same index for the score as you did for the match\n            #also, you can use the math functions to calculate the index of the match\n            #you will also have to create a new index for the absolute difference\n            #you can also compare the two arrays by finding the matching indices\n            #also, you can store the results in an array and then check if the guess matches the result by checking the index of the match\n            #this will make it easier to do", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    array = []\n    for i in range(len(game)):\n        current_guess = guess[i]\n        current_score = game[i]\n        if current_guess == guess[i]:\n            array.append(0)\n        else:\n            array.append(abs(current_score - guess[i]))\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess = guess.tolist()\n    score = score.tolist()\n    \n    numGuesses = len(guess)/2\n    numScores = len(score)/2\n    \n    results = np.zeros((numScores,numGuesses))\n    for i in range(numGuesses):\n        for j in range(numScores):\n            if guess[i] == score[j]:\n                results[i,j] = 0\n            else:\n                results[i,j] = abs(guess[i] - score[j])\n    \n    return results", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    array = [(scores[i],guess[i]) for i in range(len(guess))]\n    diff = abs(array[0][0] - array[1][0])\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game)!= len(guess):\n        print(\"len(game) is not equal to len(guess)\")\n        return [0,0,0,0,0,0]\n    score = 0\n    for i in range(len(game)):\n        if (game[i] == guess[i]):\n            score += 1\n    return [score]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    def compare_members(game,guess):\n        \"\"\"Compare two arrays of scores and guesses of equal length. Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n        the value is 0, and if not, the value is the absolute difference between the guess and the score.\"\"\"\n        sum = 0\n        for i in range(len(game)):\n            if game[i] == guess[i]:\n                sum = sum + 1\n        return sum/len(game)\n        \n    #compare_guess = [[guess[i] for i in range(len(game))]]\n    #compare = [[game[i] for i in range(len(game))]]\n    #compare_members = [[game[i] for i in range(len(game))]]\n    #compare_guess = [[game[i] for i in range(len(game))]]\n    #compare_members = [[game[i] for i in range(len(game))]]\n    \n    #values = [0]*len(game)\n    #values = [abs(x-y) for x,y in zip(compare_guess,compare)]\n    #values = [abs(x-y) for x,y in zip(", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    answer = []\n    difference = []\n    score1 = []\n    score2 = []\n    for i in range(len(game)):\n        score1.append(game[i][0])\n        score2.append(game[i][1])\n    for i in range(len(game)):\n        for j in range(len(game)):\n            if game[i][j] == game[j][i]:\n                answer.append(score1[i] + score2[j])\n        else:\n            difference.append(score1[i] - score2[j])\n    answer.sort()\n    difference.sort()\n    answer.reverse()\n    difference.reverse()\n    if len(answer) == len(difference):\n        return answer,difference\n    else:\n        return 0,difference\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    def convert(x):\n        return (max(x)-min(x))/2\n    result = [0]*len(game)\n    for j in range(len(game)):\n        if (guess[j]==game[j]):\n            result[j] = 0\n        else:\n            result[j] = float(abs(game[j]-guess[j]))\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    match_guess = [[guess[i], game[i] for i in range(len(game))] for game in game]\n    scores = [[game[i], guess[i] for i in range(len(game))] for game in game]\n    diff = [abs(game[i] - guess[i]) for i in range(len(game))]\n    diff_guess = [[abs(game[i] - guess[i]) for i in range(len(game))] for game in game]\n    return [[diff[i], diff_guess[i] for i in range(len(game))] for game in game]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    results = []\n    for row in range(len(game)):\n        for col in range(len(guess)):\n            if game[row]!= guess[col]:\n                if guess[col] == 0:\n                    results.append(0)\n                else:\n                    results.append(abs(guess[col] - game[row]))\n    return results", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    result = [0]*len(guess)\n    for i in range(len(guess)):\n        result[i] = compare(game,guess[i])\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game)!= len(guess):\n        raise TypeError(\"Games and Guesses should have the same length\")\n    num = len(game)\n    print(\"Game: \",game)\n    print(\"Got: \",guess)\n    for i in range(num):\n        if game[i] == guess[i]:\n            return [game[i],i]\n        elif game[i] > guess[i]:\n            return [guess[i],i]\n        elif game[i] < guess[i]:\n            return [game[i],i]\n    return [game[i],abs(game[i]-guess[i])]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guesslist = guess.tolist()\n    scorelist = game.tolist()\n    distance = []\n    for index in range(len(scorelist)):\n        if scorelist[index] == 0 and guesslist[index] == 0:\n            distance.append(0)\n        elif scorelist[index] == 0 and guesslist[index] == scorelist[index]:\n            distance.append(distance.append(scorelist[index] - guesslist[index]))\n        else:\n            distance.append(distance.append(abs(scorelist[index] - guesslist[index])))\n    return distance", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #This gives a result of 0.0 if they guessed correctly.\n    score_list = []\n    guess_list = []\n    for i in range(len(game)):\n        score_list.append(game[i])\n        guess_list.append(guess[i])\n    \n    return compare_list(score_list,guess_list)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = 0\n    guess = 0\n    for i in range(len(game)):\n        score = game[i]\n        guess = guess[i]\n        if score!= guess:\n            return compare(score, guess)\n    return compare(score, guess)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    arrayOfGuesses = []\n    arrayOfScores = []\n    \n    for i in range(len(game)):\n        arrayOfGuesses.append(guess[i])\n        arrayOfScores.append(game[i])\n    \n    if len(game) == len(guess):\n        return arrayOfScores\n    else:\n        return arrayOfGuesses\n\n\n\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # First, we need to map the scores to the corresponding guesses\n    scores = [scores[i] for i in range(len(guess))]\n    guesses = [guess[i] for i in range(len(guess))]\n    \n    # We compare each guess with each score\n    values = [0]\n    for i in range(len(guess)):\n        if guesses[i] == scores[i]:\n            values.append(0)\n        else:\n            values.append(abs(scores[i] - guesses[i]))\n    \n    return values", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    def compare2(g, gv):\n        \"\"\"\n        function that uses the same two arrays and compares the result\n        \"\"\"\n        return sum([abs(x-gv[i]) for x in g])\n\n    def compare3(g, gv, sum,k):\n        \"\"\"\n        function that uses the same two arrays and compares the result\n        \"\"\"\n        return sum([abs(x-gv[i])-k*x for x in g])\n\n    a = []\n    b = []\n    c = []\n    d = []\n    e = []\n    for i in range(len(guess)):\n        a.append(compare(game, guess[i]))\n        b.append(compare2(game, guess[i]))\n        c.append(compare3(game, guess[i], sum,len(guess)))\n        d.append(compare3(game, guess[i], sum, len(guess),k))\n        e.append(compare3(game, guess[i], sum, len(guess), 0))\n\n    if len(game)==len(guess):\n        # if both the game and the guess are the same length, we can simply use a 'len'\n        return [(len(a), len(b", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    result = []\n    for index,score in enumerate(game):\n        guess = guess[index:]\n        result.append(score - guess)\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #first, if the two sets are the same length, just return the values from both arrays\n    if len(game) == len(guess):\n        return [game[i] - guess[i] for i in range(len(game))]\n    #otherwise, we need to make sure that the two sets have the same length\n    elif len(game)!= len(guess):\n        return []\n    #second, we need to make sure that the guesses are not equal to each other\n    elif guess[i] == guess[j]:\n        return []\n    #third, we need to make sure that the guesses are different from each other\n    else:\n        return [abs(game[i] - guess[i]) for i in range(len(game))]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # Create an array to hold the results of all the matches.\n    results = [[] for _ in range(len(game))]\n    # Create an array to hold the scores and guesses of each match.\n    scores = []\n    guesses = []\n    for i, g in enumerate(game):\n        if i == len(game) - 1:\n            scores.append(g)\n        else:\n            scores.append(g[i])\n            guesses.append(g[i] - game[i])\n    # Sort the guesses in ascending order.\n    # You need to do this because the comparison operation is looking up the index of the\n    # guesses in the array and then comparing each element to the respective scores. \n    # The first guess is always a number 1, so it will always be searched at index 0.\n    scores.sort()\n    guesses.sort()\n    # Move the guesses into the result array.\n    for i in range(len(guess)):\n        result = 0\n        for j in range(len(results)):\n            if scores[i] == guesses[j]:\n                result = (results[i] + 1) - (results[j] + 1)\n        results[i] = result\n        if result < 0:\n            result = -result\n        if result > 0:\n            result =", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess = guess[0:len(game)]\n    score = score[0:len(game)]\n    diff = 0\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n            diff += score[i] - score[i]\n            score[i] = score[i] - guess[i]\n        else:\n            score[i] = score[i] - game[i]\n    return [abs(diff) for i in range(len(game))]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    array = []\n    for i in range(len(game)):\n        if guess[i] == game[i]:\n            array.append(0)\n        elif guess[i]!= game[i]:\n            array.append(abs(guess[i] - game[i]))\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    scoring = len(game) / len(guess)\n    distance = 0\n    for i in range(len(game)):\n        if guess[i] == game[i]:\n            distance = distance + scoring\n        else:\n            distance = distance + scoring\n            print('Guess incorrect')\n            break\n\n    return distance", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # get the game and guess for comparison\n    game = game[0:len(game)]\n    guess = guess[0:len(guess)]\n    results = []\n    for i in range(len(game)):\n        for j in range(len(guess)):\n            results.append((game[i] == guess[j]) or (guess[j] == game[i]))\n        if results[i]:\n            results.append(0)\n        else:\n            results.append(abs(results[i]))\n    \n    return results", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guesses = map(int,guess)\n    scores = map(int,game)\n    length = len(guesses)\n    n = len(scores)\n    for i in xrange(length):\n        if n-i-1>0:\n            if (guesses[i] - scores[i]) > 0:\n                return compare(scores, guesses[:length-i-1]) + compare(scores, guesses[i+length:])\n            else:\n                return compare(scores, guesses[:length-i-1]) + compare(scores, guesses[i+length:]) + compare(scores, guesses[i+length+length:])\n        else:\n            if (scores[i] - guesses[i]) > 0:\n                return compare(scores, guesses[:length-i-1]) + compare(scores, guesses[i+length:])\n            else:\n                return compare(scores, guesses[:length-i-1]) + compare(scores, guesses[i+length:]) + compare(scores, guesses[i+length+length:])\n    return -1", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [score for score in game.split()]\n    guesses = [guess for guess in guess.split()]\n    \n    if len(scores) == len(guesses):\n        return [0]*len(scores)\n    else:\n        return [(compare(score, guess) if guess == score else -1) for score, guess in zip(scores,guess)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    return np.array([abs(game[i] - guess[i]) for i in range(len(game))])\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game)!= len(guess):\n        raise TypeError(\"Length of game and guess arrays must be equal\")\n    # This is an array of the same length as the game array, with a length of length(guess) -1\n    offset = len(game)-1\n    if len(guess) == 0:\n        # If we are the first match\n        return [-1] * len(game)\n    for i in range(len(game)):\n        score = game[i]\n        guess = guess[i]\n        if not compare(score,guess):\n            # If we are the first match, we are off by 1\n            return [offset] * len(game) + [-1] * (len(guess) - 1) + [offset] * (len(game) - 1)\n            # return [offset] * len(game) + [-1] * (len(guess) - 1) + [offset] * (len(game) - 1)\n            # return [offset] * len(game) + [-1] * (len(guess) - 1) + [offset] * (len(game) - 1)\n    return [offset] * len(game) + [-1] * (len", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    total = 0\n    for a in range(len(game)):\n        for b in range(len(guess)):\n            total += compare(game[a],guess[b])\n    return total", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = game[0]\n    guess = game[1]\n    # if both are arrays, first check that we have the same length:\n    if len(score)!= len(guess):\n        raise Exception(\"Error: The length of score and guess is not the same!\")\n    # now, compare the two values\n    for i in range(len(score)):\n        if guess[i] == score[i]:\n            return 0\n        elif guess[i] == score[i] - 1:\n            return abs(guess[i] - score[i])\n    return []</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game)!= len(guess):\n        print(\"Length of array must be equal.\")\n        return 0\n    scores = game[:]\n    guesses = guess[:]\n    \n    # Perform a 2x2 cross product\n    crossprod = np.cross(scores,guess)\n    crossprod = crossprod[:,:2] # transposed\n    crossprod = crossprod[::-1,::-1] # flip so the inner products are positive\n    \n    # Take the difference between the guess and the score\n    diff = crossprod - scores\n    if len(diff.shape) == 1:\n        diff = np.abs(diff)\n    else:\n        diff = np.concatenate([np.abs(diff[:-1]),diff[1:]])\n    return diff.cumsum()</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    result = [0 for i in range(len(game))]\n    for index,match in enumerate(game):\n        result[index] = 0\n        if guess == match:\n            result[index] += 1\n        else:\n            result[index] -= 1\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scoring = []\n    guessing = []\n    for i in range(len(game)):\n        for j in range(len(game[i])):\n            scoring.append(game[i][j])\n            guessing.append(game[i][j])\n    if len(guessing) < len(scoring):\n        raise Exception(\"Scores and Guesses arrays are not the same length\")\n    for i in range(len(guessing)):\n        if compare(guessing[i],scoring[i]) == 0:\n            return 0\n        else:\n            return (abs(scoring[i] - guessing[i]))", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    def compare_internal(a,b):\n        \"\"\"Compare two arrays in a similar way to a and b.\"\"\"\n        num_similar = 0\n        for i in range(len(a)):\n            if a[i] == b[i]:\n                num_similar += 1\n        if num_similar == 0:\n            return 0\n        else:\n            return abs(a[num_similar-1]-b[num_similar-1])\n\n    def correct_guess(a,b):\n        \"\"\"Returns the correct guess from a and b.\"\"\"\n        if len(a) == len(b):\n            if 0 <= a[0] <= b[0] <= len(b)-1:\n                return a[0]\n            else:\n                return b[0]\n\n        else:\n            for i in range(len(a)):\n                if a[i] == b[i]:\n                    return a[i]\n                else:\n                    return b[i]\n\n    # preprocess the data\n    a = to_matrix(a,isnumeric=True)\n    b = to_matrix(b,isnumeric=True)\n\n    if len(a)!= len(b):\n        raise ValueError(\"len(a)!= len(b)\")\n\n    correct_guess = correct_guess(a,b)\n    num_similar = 0\n    for i", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    answer = []\n    i = 0\n    for index in range(len(game)):\n        score = game[index]\n        guess = guess[index]\n        if guess == score:\n            answer.append(i)\n            continue\n        difference = score - guess\n        if difference == 0:\n            answer.append(0)\n            continue\n        else:\n            answer.append(abs(difference))\n    return answer", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    if not isinstance(game,list):\n        game = [game]\n        \n    if not isinstance(guess,list):\n        guess = [guess]\n\n    #Make the game a list of lists to speed up the operation\n    gameLists = [list(game)]\n    guessLists = [list(guess)]\n    \n    #Create a new list to hold the difference between the guesses and the score\n    scores = [[abs(guess - game[i]) for i in range(len(game[i]))] for game in gameLists]\n    \n    #Iterate over the games and find the differences\n    for i in range(len(game[0])):\n        #Find the difference between the scores\n        for j in range(len(game[i])):\n            #If the difference is 0, the guess is correct\n            if scores[i][j] == 0:\n                return j\n            #If the difference is negative, the guess is not correct\n            else:\n                return scores[i][j] < 0\n        \n        #If the differences are negative, the guess is not correct\n        else:\n            return abs(guessLists[i] - gameLists[0]) < 0\n    \n    return 0", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # we keep track of the number of matches that have been guessed correctly and the difference of the scores\n    match_guess = {}\n    count = 0\n    \n    # we need to calculate the difference between the two scores at each match\n    for i in range(len(game)):\n        score = game[i]\n        guess = guess[i]\n        if guess in match_guess:\n            match_guess[guess] += score\n        else:\n            match_guess[guess] = score\n        count += 1\n    \n    # we calculate the average of all the differences\n    diff = sum(match_guess.values())/len(game)\n    match_guess = {}\n    match_guess[\"average\"] = diff\n    \n    # now we determine how far off each guess was\n    for i in range(len(game)):\n        score = game[i]\n        guess = guess[i]\n        if guess in match_guess:\n            if score == match_guess[guess]:\n                match_guess[guess] = 0\n            elif abs(score - match_guess[guess]) > match_guess[\"average\"]:\n                match_guess[guess] = abs(score - match_guess[", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #pairs of matches that differ by exactly one, and pairs that differ by exactly two\n    match_tuples = [(i,j) for i in range(len(game)) for j in range(len(game[i])) if game[i][i] == game[i][j] and game[i][i]!= game[i][j]]\n    match_tuples.extend([(i,j) for i in range(len(game)) for j in range(len(game[i])) if game[i][i]!= game[i][j] and game[i][i]!= game[i][j]])\n    match_tuples.extend([(i,j) for i in range(len(game)) for j in range(len(game[i])) if game[i][i]!= game[i][j] and game[i][i]!= game[i][j]])\n    match_tuples.extend([(i,j) for i in range(len(game)) for j in range(len(game[i])) if game[i][i]!= game[i][j] and game[i][i]!= game[i][j]])\n    match_tuples.extend([(i,j) for i in range(len(game)) for j in range(len(game[i])) if game[i][i]!", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    total = 0\n    for index in range(len(game)):\n        total = total + game[index] - guess[index]\n    \n    if total == 0:\n        return [0,0]\n    else:\n        return sorted(list(total))</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    n = len(game)\n    m = len(guess)\n    return np.array([math.fabs(score - guess[i]) for i in range(n)])", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    # Create a new list of guesses, sorted from the smallest to the largest\n    guesses = sorted(guess.values(), key=lambda x:x, reverse=True)\n    guesses = [int(x) for x in guesses]\n    \n    # Copy the scores from the first list to a list of guesses\n    scores = sorted(game.values(), key=lambda x:x, reverse=True)\n    scores = [int(x) for x in scores]\n    \n    # Make sure we have the same number of entries in both lists\n    if len(guesses)!= len(scores):\n        print('Guesses and scores have different lengths')\n        return\n\n    # Create a new list of counts\n    counts = []\n    \n    # Do the comparison\n    for match in range(len(guesses)):\n        for guess in range(len(scores)):\n            if guess == match:\n                counts[match] += 1\n            else:\n                counts[match] += scores[guess] - scores[match]\n    \n    # Sort the counts from smallest to largest\n    counts = sorted(counts, key=lambda x:x, reverse=True)\n    \n    # Return the distance between the guess and the score\n    if counts[match] == 0 and count", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    #TODO: make it able to handle more than two matches.\n    def compare_guess(start, end):\n        \"\"\"Compares two guesses.\n        \"\"\"\n        \n        if len(guess)!= len(game):\n            return None\n        \n        start_guess = list(guess)\n        start_score = list(game[start])\n        end_guess = list(guess)\n        end_score = list(game[end])\n        \n        for i in range(len(game)):\n            if start_guess[i]!= end_guess[i]:\n                return start_score[i] - end_score[i]\n        return None\n    \n    #TODO: add the possibility to solve multiple puzzles at the same time!\n    \n    #TODO: check if the input is a correct guess\n    \n    return [0,0,0,0,3,3]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #set up the comparison array\n    score = [0] * len(game)\n    guess = [0] * len(game)\n    #compare the two arrays\n    for i in range(len(score)):\n        score[i] = int(game[i]) - int(guess[i])\n    #return the comparison array\n    return [int(score[i]) for i in range(len(score))]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    #print(len(game),len(guess))\n    \n    #comparing two arrays with the same length\n    \n    if len(game)!= len(guess):\n        print(\"Error: Your length does not match the guess length.\")\n        return\n    \n    # we sort the guesses by the score\n    sortedGuess = sorted(guess,key=lambda x:abs(x[0]-score[0]),reverse=True)\n    sortedGame = sorted(game,key=lambda x:abs(x[0]-game[0]),reverse=True)\n    \n    #we find the differences between the guesses and the game\n    for i in range(len(game)):\n        #print(sortedGame[i])\n        #print(sortedGuess[i])\n        diff = sortedGuess[i]-sortedGame[i]\n        #print(\"diff: \"+str(diff))\n    #print(len(game),len(sortedGuess))\n    #print(len(game),len(sortedGame))\n        \n    if len(game) == len(sortedGuess) and len(sortedGame) == len(sortedGuess):\n        return diff\n    else:\n        #print(\"ERROR: Invalid length.\")\n        return", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = []\n    guesses = []\n    for i in range(len(game)-1):\n        if game[i][0] == game[i+1][0]:\n            scores.append(game[i][0])\n        else:\n            scores.append(game[i][0]+1)\n            if guess == game[i][0]:\n                guesses.append(game[i][1])\n        else:\n            guesses.append(game[i][1]+1)\n    return compare(scores,guesses)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #calculate scores and guesses\n    scores = [game[i][0] for i in range(len(game))]\n    guesses = [game[i][1] for i in range(len(game))]\n    \n    #sort the scores by value\n    scores.sort(reverse=True, key=lambda x:x[0])\n    \n    #sort the guesses by value\n    guesses.sort(reverse=True, key=lambda x:x[1])\n    \n    #compare the scores\n    values = []\n    for score, guess in zip(scores, guesses):\n        values.append(abs(score-guess))\n    \n    #compare the guesses\n    values.sort(reverse=True, key=lambda x:x[0])\n    \n    #print the results\n    results = [score for score, guess in zip(values, guesses)]\n    return results", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    game_values = [[(game[i][0],game[i][1]) for i in range(len(game[0]))] for game in game]\n    guesses_values = [[(game[guess][0],game[guess][1]) for guess in range(len(game[0]))] for game in game]\n    compare = 0\n    for i in range(len(game[0])):\n        for j in range(len(game[0])):\n            if i == j:\n                continue\n            if compare > 0:\n                compare = 0\n            if game_values[i][0] == game_values[j][0] and game_values[i][1] == game_values[j][1]:\n                compare += (game_values[i][1] - game_values[j][1])\n            else:\n                compare += (game_values[j][1] - game_values[i][1])\n    \n    return compare", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    correct = len(game)\n    wrong = len(guess)\n    try:\n        max = max(game)\n    except Exception:\n        max = len(game)\n    try:\n        min = min(game)\n    except Exception:\n        min = len(game)\n    if wrong == max:\n        diff = min\n    else:\n        diff = max - wrong\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    return _diff(game, guess, compare_dict=True)\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    result = []\n    for i in range(len(game)):\n        for j in range(len(guess)):\n            result.append(abs(game[i][j]-guess[j]))", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    return np.array([compare(game,guess) for guess in guess])", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game)!= len(guess):\n        raise ValueError(\"Game length and guess length must be the same.\")\n\n    if len(game) == 0:\n        return [0]\n    else:\n        return [abs(game[i] - guess[i]) for i in range(len(game))]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    matches = []\n    guesses = []\n    for i in range(len(game)):\n        if game[i]!= guess[i]:\n            matches.append(i)\n            guesses.append(guess[i])\n    if len(matches)!= len(guesses):\n        print('incorrect match')\n        return False\n    n = len(matches)\n    nmax = 0\n    for i in range(len(matches)):\n        if abs(game[matches[i]] - guesses[i]) >= abs(game[matches[i]] - game[matches[n-1]]) + abs(game[matches[n-1]] - guesses[-1]+ 1):\n            nmax = i\n    if nmax == len(matches):\n        if compare(game,guesses):\n            return True\n        else:\n            return False\n    else:\n        return compare(game,guesses[:nmax])\n\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score_array = game.score\n    guess_array = guess\n    result = [[0] * len(game.score)]\n    for i in range(len(guess_array)):\n        result[i] = compare(score_array,guess_array[i])\n    return result\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    left = sorted(game)\n    right = sorted(guess)\n    sortedresult = sorted(zip(left,right), key=lambda x: x[1])\n    sortedresult.sort()\n    return sortedresult\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = [game[i] for i in range(len(game))]\n    guess = [game[i] for i in range(len(guess))]\n    distances = []\n    for i in range(len(score)):\n        distances.append(abs(score[i] - guess[i]))\n    for i in range(len(distances)):\n        if distances[i] < 0.0:\n            return [distances[i], 0.0]\n        else:\n            return [-(distances[i] + 0.5), 0.0]"]]