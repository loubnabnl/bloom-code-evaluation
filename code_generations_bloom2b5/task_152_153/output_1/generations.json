[["def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all possible guesses\n    guesses = [guess for guess in range(len(game))]\n    # create a list of all possible scores\n    scores = [score for score in range(len(game))]\n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    # sort the list of differences\n    differences.sort()\n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in zip(scores,", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    return [compare(scores,guess) for guess in guesses]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # create a list of the differences\n    differences = [abs(game[i] - guess[i]) for i in range(len(game))]\n    # create a list of the differences\n    differences = [abs(game[i] - guess[i]) for i in range(len(game))]\n    # create a list of the differences\n    differences = [abs(game[i] - guess[i]) for i in range(len(game))]\n    # create a list of the differences\n    differences = [abs(game[i] - guess[i]) for i in range(len(game))]\n    # create a list of the differences\n    differences = [abs(game[i] - guess[i]) for i in range(len(game))]\n    # create a list of the differences", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the difference between the guesses and the scores\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    # return the difference between the guesses and the scores\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # first, we need to make sure that the guesses are all the same length\n    if len(guess)!= len(game):\n        raise ValueError(\"Guesses must be the same length as the game.\")\n    # now, we need to make sure that the scores are all the same length\n    if len(game)!= len(score):\n        raise ValueError(\"Scores must be the same length as the guesses.\")\n    # now, we need to make sure that the guesses are all the same length\n    if len(score)!= len(game):\n        raise ValueError(\"Scores must be the same length as the guesses.\")\n    # now, we need to make sure that the guesses are all the same length\n    if len(score)!= len(game):\n        raise ValueError(\"Scores must be the same length as the guesses.\")\n    # now, we need to make sure that the guesses are all the same length\n    if len(score)!= len(game):\n        raise ValueError(\"Scores must be the same length as the guesses.\")\n    # now, we need to make sure that the guesses are all the same", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # initialize the array of guesses\n    array[0] = guess\n    # iterate over the game\n    for i in range(len(game)):\n        # get the score\n        score = game[i]\n        # get the guess\n        guess = array[i]\n        # compare the score and guess\n        if score == guess:\n            # if they guessed correctly, return 0\n            array[i] = 0\n        else:\n            # if they guessed incorrectly, return the absolute difference\n            array[i] = abs(score - guess)\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of the scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # sort the scores and guesses\n    scores.sort()\n    guesses.sort()\n    # create a list of the scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # sort the scores and guesses\n    scores.sort()\n    guesses.sort()\n    # create a list of the scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # sort the scores and guesses\n    scores.sort()\n    guesses.sort()\n    # create a list of the scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # sort the scores and guesses\n    scores.sort()\n    guesses.sort", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = game[0]\n    guesses = game[1]\n    \n    # compare the scores\n    scores = [score - guess for score, guess in zip(scores, guesses)]\n    scores = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    scores = [score - guess for score, guess in zip(scores, guesses)]\n    scores = [score - guess for score, guess in zip(scores, guesses)]\n    scores = [score - guess for score, guess in zip(scores, guesses)]\n    scores = [score - guess for score, guess in zip(scores, guesses)]\n    scores = [score - guess for score, guess in zip(scores, guesses)]\n    scores = [score - guess for score, guess in zip(scores, guesses)]\n    scores = [score - guess for score, guess in zip(scores, guesses)]\n    scores = [score - guess for score, guess in zip(scores, guesses)]\n    scores = [score - guess for score, guess in zip(scores, guesses", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = game[0]\n    guess = game[1]\n    diff = abs(score - guess)\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the result array\n    result = [0,0,0,0,0,0]\n    \n    # loop through the guesses and the scores\n    for i in range(len(guess)):\n        # get the score\n        score = guess[i]\n        # get the guess\n        guess = guess[i]\n        # compare the scores\n        if score == 0:\n            result[i] = 0\n        else:\n            result[i] = score - guess\n    \n    # return the result\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = game[0]\n    guess = game[1]\n    if len(score)!= len(guess):\n        print(\"length of score and guess arrays are not equal\")\n        return\n    if len(score) == 0:\n        return\n    if len(guess) == 0:\n        return\n    for i in range(len(score)):\n        if score[i]!= guess[i]:\n            return\n    return [abs(score[i] - guess[i]) for i in range(len(score))]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the differences between the guesses and the scores\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # sort the differences in ascending order\n    differences.sort()\n    # return the differences\n    return differences", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the absolute differences between the guesses and the scores\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guesss[i]))\n    # sort the list of guesses by the absolute differences\n    sortedGuesses = sorted(difference(guesses,scores),key=lambda x:abs(x),reverse=True)\n    # sort the list of guesses by the absolute differences\n    sortedGuesses = sorted(difference(guesses,scores),key=lambda x:abs(x),reverse=False)\n    # create a list of the absolute differences between the guesses and the scores\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guesss[i]))\n    # sort the list of guesses by the absolute differences\n    sortedGuesses = sorted(difference(guesses,scores),key=lambda x:", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    result = [0]*len(game)\n    for i in range(len(game)):\n        result[i] = 0\n    # loop through the guesses\n    for guess in guess:\n        # loop through the scores\n        for score in game:\n            # if the guess is in the score, add the score to the result\n            if guess in score:\n                result[i] += score[i]\n    # return the result\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses that are correct\n    correct = [guess for guess in guess if guess in scores]\n    \n    # create a list of all the guesses that are incorrect\n    incorrect = [guess for guess in guess if guess not in scores]\n    \n    # create a list of all the guesses that are correct and incorrect\n    correct_in = [guess for guess in guess if guess in correct and guess not in incorrect]\n    \n    # create a list of all the guesses that are incorrect and correct\n    incorrect_in = [guess for guess in guess if guess not in correct and guess in incorrect]\n    \n    # create a list of all the guesses that are correct and incorrect\n    correct_in_in = [guess for guess in guess if guess in correct_in and guess not in incorrect_in]\n    \n    # create a list of all the guesses that are incorrect and correct\n    incorrect_in_in = [guess for guess in guess if guess not in correct_in and guess in incorrect_in]\n    \n    # create a list of all the", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the possible guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the possible scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the possible guesses and scores\n    all_guess = []\n    all_score = []\n    for i in range(len(game)):\n        all_guess.append(guess[i])\n        all_score.append(score[i])\n    # sort the guesses\n    all_guess.sort()\n    # sort the scores\n    all_score.sort()\n    # create a list of all the possible guesses and scores\n    all_guess = []\n    all_score = []\n    for i in range(len(game)):\n        all_guess.append(guess[i])\n        all_score.append(score[i])\n    # create a list of all the possible guesses and scores\n    all_guess = []\n    all_score = []\n    for i in range(len(game)):\n        all_guess.append(guess[i])\n        all_score.append(score[i])", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # loop through the guesses\n    for guess in guesses:\n        # compare the guess with the score\n        array[guess] = compare(game,guess)\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the result array\n    result = []\n    # initialize the guess array\n    guess = []\n    # iterate through the scores and guess\n    for i in range(len(game)):\n        # get the score\n        score = game[i]\n        # get the guess\n        guess[i] = guess[i] + score\n        # add the score to the result array\n        result.append(score)\n    # return the result\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    \n    # compare the scores\n    score_diff = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    score_diff = [score_diff[i] for i in range(len(score_diff))]\n    score_diff = [score_diff[i] for i in range(len(score_diff)) if score_diff[i] > 0]\n    score_diff = [score_diff[i] for i in range(len(score_diff)) if score_diff[i] < 0]\n    score_diff = [score_diff[i] for i in range(len(score_diff)) if score_diff[i] == 0]\n    score_diff = [score_diff[i] for i in range(len(score_diff)) if score_diff[i] == 0]\n    score_diff = [score_diff[i] for i in range(len(score_diff)) if score_diff[i] == 0]\n    score_diff = [score_diff[i] for i in range(len(score_diff)) if score_diff[i] == 0]\n    score_diff = [score_diff[i] for i in range(len(score_diff)) if score_diff[i]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # loop through the guesses\n    for guess in guesses:\n        # loop through the scores\n        for score in scores:\n            # if the guess is the same as the score, return 0\n            if guess == score:\n                array[guess] = 0\n            # otherwise, return the absolute difference\n            else:\n                array[guess] = abs(score - guess)\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # sort the guesses and scores\n    sortedGuesses = sorted(guesses, key=lambda x: x[0])\n    sortedScores = sorted(scores, key=lambda x: x[0])\n    # create a list of the differences\n    sortedDifferences = []\n    for i in range(len(sortedGuesses)):\n        sortedDifferences.append(sortedGuesses[i] - sortedScores[i])\n    # print the differences\n    print(sortedDifferences)\n    # return the differences\n    return sortedDifferences", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the differences\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    # return the difference\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    \n    # compare the scores\n    diff = 0\n    for i in range(len(scores)):\n        if scores[i]!= guesses[i]:\n            diff = diff + 1\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # sort the guesses by their difference\n    sortedGuesses = sorted(guesses, key=lambda x: x[0], reverse=True)\n    # sort the scores by their difference\n    sortedScores = sorted(scores, key=lambda x: x[0], reverse=True)\n    # create a list of all the guesses that were correct\n    correctGuesses = []\n    # create a list of all the guesses that were incorrect\n    incorrectGuesses = []\n    # create a list of all the differences between the guesses and the scores\n    correctDiffs = []\n    incorrectDiffs = []\n    # loop through the guesses\n    for i in range(len(sortedGuesses)):\n        # if the difference between the guess and the score is less than the", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = game[0]\n    guess = game[1]\n    score_diff = score - guess\n    if score_diff == 0:\n        return [0,0,0,0,0]\n    else:\n        return [abs(score_diff)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the arrays\n    scores = []\n    guesses = []\n    \n    # iterate through the guesses\n    for guess in guesses:\n        # initialize the score\n        scores.append(0)\n        \n        # iterate through the scores\n        for score in scores:\n            # if the guess is equal to the score\n            if guess == score:\n                # increment the score\n                scores.append(scores.index(score)+1)\n                # return the score\n                return scores.index(score)\n        \n    # if the guess is not equal to the score\n    else:\n        # increment the score\n        scores.append(scores.index(guess)+1)\n        # return the score\n        return scores.index(guess)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = game[0]\n    guess = game[1]\n    diff = abs(score - guess)\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create an array of the same length as the guesses\n    scores = [guess[i] for i in range(len(guess))]\n    # create an array of the same length as the scores\n    guesses = [score[i] for i in range(len(score))]\n    # compare the scores and guesses\n    return [abs(score[i] - guess[i]) for i in range(len(score))]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    return [abs(score - guess) for score, guess in zip(scores, guesses)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = []\n    # loop through the guesses\n    for guess in guesses:\n        # loop through the scores\n        for score in scores:\n            # compare the two\n            if compare(score, guess) == 0:\n                # add the value to the array\n                array.append(0)\n            else:\n                # add the absolute difference\n                array.append(abs(compare(score, guess)))\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the absolute differences\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    # sort the guesses\n    sortedGuesses = sorted(guesses, key=lambda x: x[0])\n    # sort the scores\n    sortedScores = sorted(scores, key=lambda x: x[0])\n    # create a list of the absolute differences\n    diffSorted = []\n    for i in range(len(sortedGuesses)):\n        diffSorted.append(abs(sortedGuesses[i] - sortedScores[i]))\n    # create a list of the differences\n    diffSorted = sorted(diffSorted, key=lambda x: x[0])\n    # create a list of the differences\n    diffSorted = sorted(diffSorted, key=lambda x: x[0])\n    # create a list of the differences\n    diffSorted = sorted(diffSorted, key=lambda x: x[0]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    result = [0,0,0,0,0,0]\n    # initialize the array of guesses\n    guess = [0,0,0,0,0,0]\n    # loop through the guesses\n    for i in range(len(guess)):\n        # loop through the scores\n        for j in range(len(game)):\n            # compare the guesses with the scores\n            if guess[i] == game[j] and guess[i]!= game[j]:\n                # if they guessed correctly, increment the result\n                result[i] += 1\n            else:\n                # if they guessed incorrectly, decrement the result\n                result[i] -= 1\n    # return the result\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # loop over all the guesses\n    for i in range(len(guess)):\n        # get the score\n        score = game[i]\n        # get the guess\n        guess = guess[i]\n        # compare the two\n        if compare(score,guess) == 0:\n            array[i] = 0\n        else:\n            array[i] = compare(score,guess)\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    return [abs(game[i] - guess[i]) for i in range(len(game))]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the guesses\n    guesses = sorted(guesses, key=lambda x: x[0], reverse=True)\n    # create a list of all the scores\n    scores = sorted(scores, key=lambda x: x[0], reverse=True)\n    # create a list of all the guesses\n    guesses = sorted(guesses, key=lambda x: x[1], reverse=True)\n    # create a list of all the scores\n    scores = sorted(scores, key=lambda x: x[1], reverse=True)\n    # create a list of all the guesses\n    guesses = sorted(guesses, key=lambda x: x[2], reverse=True)\n    # create a list of all the scores\n    scores = sorted(scores, key=lambda x: x[2], reverse=True)\n    # create a list of all the guesses\n    guesses = sorted(guesses, key=lambda x: x[3], reverse=True)\n    # create a list", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = [guess for guess in guesss]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the differences\n    differences = [abs(score - guess) for score, guess in zip(scores,guesses)]\n    \n    # create a list of all the differences\n    differences = [abs(score - guess) for score, guess in zip(scores,guesses)]\n    \n    # sort the differences\n    differences.sort(key=lambda difference: difference)\n    \n    # create a list of all the differences\n    differences = [abs(score - guess) for score, guess in zip(scores,guesses)]\n    \n    # create a list of all the differences\n    differences = [abs(score - guess) for score, guess in zip(scores,guesses)]\n    \n    # create a list of all the differences\n    differences = [abs(score - guess) for score, guess in zip(scores,guesses)]\n    \n    # create a list of all the differences\n    differences = [abs(score - guess) for score, guess in zip(scores,guesses)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = game[0]\n    guesses = game[1]\n    \n    # compare the scores\n    diff = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    \n    # get the difference between the guesses and the scores\n    diff = [abs(guess[i] - score[i]) for i in range(len(game))]\n    \n    # return the difference between the guesses and the scores\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of guesses and scores\n    guesses = []\n    scores = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n        scores.append(game[i])\n    # sort the guesses by score\n    sorted_guesses = sorted(guesses, key=lambda x: x[1], reverse=True)\n    # sort the scores by score\n    sorted_guess_scores = sorted(scores, key=lambda x: x[1], reverse=True)\n    # create a list of the difference between the guesses and the scores\n    difference = []\n    for i in range(len(sorted_guess_scores)):\n        difference.append(abs(sorted_guess_scores[i] - sorted_guess_scores[i-1]))\n    # return the difference\n    return difference", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    result = []\n    # initialize the array of guesses\n    guess = []\n    # initialize the array of scores\n    score = []\n    # loop through the array of guesses\n    for i in range(len(guess)):\n        # loop through the array of scores\n        for j in range(len(score)):\n            # if the guess is the same as the score\n            if guess[i] == score[j]:\n                # if the guess is the same as the score\n                if guess[i] == score[j]:\n                    # if the guess is the same as the score\n                    if guess[i] == score[j]:\n                        # if the guess is the same as the score\n                        if guess[i] == score[j]:\n                            # if the guess is the same as the score\n                            if guess[i] == score[j]:\n                                # if the guess is the same as the score\n                                if guess[i] == score[j]:\n                                    # if the guess is the same as the score\n                                    if guess[i] == score[j]:\n                                        # if the guess is the same as the score\n                                        if guess[i] == score[j]:\n                                            # if the guess is the same as the score\n                                            if guess[i] == score[j]:\n                                                # if the guess is the same as the score\n                                                if", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all possible guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all possible scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all possible guesses\n    guesses = sorted(guesses, key=lambda x: x[0])\n    # create a list of all possible scores\n    scores = sorted(scores, key=lambda x: x[0])\n    # create a list of all possible guesses\n    guesses = sorted(guesses, key=lambda x: x[1])\n    # create a list of all possible scores\n    scores = sorted(scores, key=lambda x: x[1])\n    # create a list of all possible guesses\n    guesses = sorted(guesses, key=lambda x: x[2])\n    # create a list of all possible scores\n    scores = sorted(scores, key=lambda x: x[2])\n    # create a list of all possible guesses\n    guesses = sorted(guesses, key=lambda x: x[3])\n    # create a list of all possible scores\n    scores = sorted(scores, key=lambda x: x[3])\n    # create", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of the scores\n    scores = [score for score in score]\n    \n    # create a list of the differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    \n    # sort the differences\n    differences.sort(key=lambda x: x[1])\n    \n    # return the differences\n    return differences", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the result array\n    result = []\n    # initialize the guess array\n    guess = []\n    # initialize the difference array\n    difference = []\n    # loop through the guesses\n    for guess in guess:\n        # loop through the scores\n        for score in score:\n            # if the score is the same as the guess\n            if score == guess:\n                # add the difference to the difference array\n                difference.append(score - guess)\n            # if the score is not the same as the guess\n            else:\n                # add the difference to the result array\n                result.append(score - guess)\n    # return the result\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    diff = 0\n    for i in range(len(game)):\n        if guess[i] == game[i]:\n            diff += 1\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # sort the guesses\n    sortedGuesses = sorted(guesses, key=lambda x: x[0])\n    # sort the scores\n    sortedScores = sorted(scores, key=lambda x: x[0])\n    # create a list of the differences\n    sortedDifferences = sorted(differences, key=lambda x: x[0])\n    # create a list of the differences\n    sortedDifferences = sorted(differences, key=lambda x: x[0])\n    # create a list of the differences\n    sortedDifferences = sorted(differences, key=lambda x: x[0])\n    # create a list of the differences\n    sortedDifferences = sorted(differences, key=lambda x: x[0])\n    # create a list of the differences", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    diff = [abs(game[i] - guess[i]) for i in range(len(game))]\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of scores and guesses\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    \n    # compare the scores and guesses\n    return [compare(scores,guess) for guess in guesses]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # initialize the array\n    array[0] = 0\n    # loop over the guesses\n    for guess in guesses:\n        # loop over the scores\n        for score in scores:\n            # if the score is the same as the guess, then the difference is 0\n            if score == guess:\n                array[score] = 0\n            # otherwise, the difference is the absolute difference\n            else:\n                array[score] = abs(guess - score)\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores\n    scores = game[0]\n    guesses = game[1]\n    \n    # get the difference between the scores\n    diff = abs(scores[0] - scores[1])\n    # get the difference between the guesses\n    diff2 = abs(guesses[0] - guesses[1])\n    \n    # if the difference is zero, then the guesses are correct\n    if diff == 0:\n        return [0,0,0,0,0]\n    # if the difference is greater than zero, then the guesses are incorrect\n    elif diff > 0:\n        return [diff,diff2,0,0]\n    # if the difference is less than zero, then the guesses are correct\n    elif diff < 0:\n        return [diff,diff2,0,0]\n    # if the difference is greater than zero, then the guesses are incorrect\n    elif diff > 0:\n        return [diff,diff2,0,0]\n    # if the difference is less than zero, then the guesses are correct\n    elif diff < 0:\n        return [diff,diff2,0,0]\n    # if the difference is greater than zero, then the guesses are incorrect\n    elif diff > 0:\n        return [diff,diff2,0,0]\n    # if the difference is less than zero,", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = [score for score in game]\n    guesses = [guess for guess in guess]\n    \n    # compare the scores\n    scores = [compare(score, guess) for score, guess in zip(scores, guesses)]\n    \n    # compare the guesses\n    guesses = [compare(score, guess) for score, guess in zip(scores, guesses)]\n    \n    # return the results\n    return [(score, guess) for score, guess in zip(scores, guesses)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores\n    scores = game[0]\n    guesses = game[1]\n    \n    # get the difference\n    diff = abs(guesses - scores)\n    \n    # return the difference\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = game[0]\n    guesses = game[1]\n    # get the difference between the scores and guesses\n    diff = abs(scores - guesses)\n    # get the difference between the scores and the guesses\n    diff2 = abs(scores - guesses)\n    # get the difference between the scores and the guesses\n    diff3 = abs(scores - guesses)\n    # get the difference between the scores and the guesses\n    diff4 = abs(scores - guesses)\n    # get the difference between the scores and the guesses\n    diff5 = abs(scores - guesses)\n    # get the difference between the scores and the guesses\n    diff6 = abs(scores - guesses)\n    # get the difference between the scores and the guesses\n    diff7 = abs(scores - guesses)\n    # get the difference between the scores and the guesses\n    diff8 = abs(scores - guesses)\n    # get the difference between the scores and the guesses\n    diff9 = abs(scores - guesses)\n    # get the difference between the scores and the guesses\n    diff10 = abs(scores - guesses)\n    # get the difference between the scores and", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # create a list of scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # create a list of scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # create a list of scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # create a list of scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # create a list of scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of the guesses and scores\n    guesses = []\n    scores = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n        scores.append(game[i])\n    # sort the guesses by score\n    scores.sort()\n    # sort the guesses by score\n    guesses.sort()\n    # create a list of the differences between the guesses and the scores\n    differences = []\n    for i in range(len(guesses)):\n        differences.append(abs(guesses[i]-scores[i]))\n    # return the differences\n    return differences", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    \n    # get the difference between the scores\n    score_diff = [abs(scores[i] - guess[i]) for i in range(len(game))]\n    \n    # get the difference between the guesses\n    guess_diff = [abs(guess[i] - scores[i]) for i in range(len(game))]\n    \n    # get the difference between the scores and guesses\n    score_guess_diff = [score_diff[i] + guess_diff[i] for i in range(len(game))]\n    \n    # get the difference between the scores and guesses\n    score_guess_diff = [score_diff[i] + guess_diff[i] for i in range(len(game))]\n    \n    # get the difference between the scores and guesses\n    score_guess_diff = [score_diff[i] + guess_diff[i] for i in range(len(game))]\n    \n    # get the difference between the scores and guesses\n    score_guess_diff = [score_diff[i] + guess_diff[i] for i in range(len(game))]\n    \n    # get the difference between the scores and", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # initialize the array of guesses\n    array[0] = guess\n    # loop through the game\n    for i in range(len(game)):\n        # compare the guess with the score\n        if compare(game[i],array[i]) == 0:\n            array[i] = 0\n        else:\n            array[i] = compare(game[i],array[i])\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = game[0]\n    guesses = game[1]\n    \n    # get the difference between the scores and guesses\n    diff = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    \n    # return the difference\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    diff = 0\n    for i in range(len(game)):\n        if (game[i] == guess[i]):\n            diff += 1\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # sort the differences\n    differences.sort()\n    # return the difference\n    return differences", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the absolute differences\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    # create a list of the differences\n    diff = [abs(x - y) for x,y in zip(guess, scores)]\n    # sort the list\n    diff.sort()\n    # create a list of the differences\n    diff = [abs(x - y) for x,y in zip(guess, scores)]\n    # create a list of the differences\n    diff = [abs(x - y) for x,y in zip(guess, scores)]\n    # create a list of the differences\n    diff = [abs(x - y) for x,y in zip(guess, scores)]\n    # create a list of the differences\n    diff = [abs(x - y) for x,y", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all possible guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all possible scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all possible guesses and scores\n    guesses_scores = []\n    for i in range(len(game)):\n        guesses_scores.append([game[i],game[i]])\n    # create a list of all possible guesses and scores\n    guesses_scores.append([game[i],game[i]])\n    # create a list of all possible guesses and scores\n    guesses_scores.append([game[i],game[i]])\n    # create a list of all possible guesses and scores\n    guesses_scores.append([game[i],game[i]])\n    # create a list of all possible guesses and scores\n    guesses_scores.append([game[i],game[i]])\n    # create a list of all possible guesses and scores\n    guesses_scores.append([game[i],game[i]])\n    # create a list of all possible guesses and scores\n    guesses_scores", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the absolute differences\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    # create a list of the differences\n    diff = [abs(x - y) for x,y in zip(scores,guesses)]\n    # sort the list of differences\n    diff.sort()\n    # return the differences\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = game[0]\n    guess = game[1]\n    diff = abs(score - guess)\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # sort the differences by the absolute value of the difference\n    differences.sort(key=lambda x: abs(x))\n    # create a list of the differences\n    differences = [abs(x) for x in differences]\n    # create a list of the scores\n    scores = [abs(x) for x in scores]\n    # create a list of the guesses\n    guesses = [abs(x) for x in guesses]\n    # create a list of the differences\n    differences = [abs(x) for x in differences]\n    # create a list of the scores\n    scores = [abs(x) for x in scores]\n    # create a list of the guesses\n    guesses = [abs(x) for x in guesses", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a new array of guesses and scores\n    guesses = np.array(guess)\n    scores = np.array(game)\n    # compare the guesses and scores\n    return np.array([compare(guess,score) for guess,score in zip(guesses,scores)])", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    result = []\n    for i in range(len(scores)):\n        if guess[i] == scores[i]:\n            result.append(0)\n        else:\n            result.append(abs(scores[i] - guess[i]))\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # loop through the guesses\n    for i in range(len(guess)):\n        # loop through the scores\n        for j in range(len(game)):\n            # if the guess is the same as the score\n            if guess[i] == game[j]:\n                # increment the array\n                array[j] += 1\n            # if the guess is not the same as the score\n            else:\n                # decrement the array\n                array[j] -= 1\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create an array of the same length as the guesses\n    guess_array = np.array(guess)\n    # create an array of the same length as the scores\n    score_array = np.array(game)\n    # create a new array of the same length as the guesses and scores\n    guess_score_array = np.concatenate((guess_array,score_array),axis=0)\n    # create a new array of the same length as the guesses and scores\n    score_guess_array = np.concatenate((score_array,guess_array),axis=0)\n    # create a new array of the same length as the guesses and scores\n    score_guess_guess_array = np.concatenate((score_array,guess_array,guess_array),axis=0)\n    # create a new array of the same length as the guesses and scores\n    score_guess_guess_guess_array = np.concatenate((score_array,guess_array,guess_array,guess_array),axis=0)\n    # create a new array of the same length as the guesses and scores\n    score_guess_guess_guess_guess_array = np.concatenate((score_array,", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # sort the scores and guesses\n    scores.sort()\n    guesses.sort()\n    # create a list of scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # sort the scores and guesses\n    scores.sort()\n    guesses.sort()\n    # create a list of scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # sort the scores and guesses\n    scores.sort()\n    guesses.sort()\n    # create a list of scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # sort the scores and guesses\n    scores.sort()\n    guesses.sort()\n    # create a", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = [guess for guess in guesss]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guesss]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = game[0]\n    guess = game[1]\n    return abs(score - guess)\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = []\n    # initialize the guess array\n    guess_array = []\n    # initialize the score array\n    score_array = []\n    # loop through the guesses\n    for i in range(len(guess)):\n        # loop through the scores\n        for j in range(len(game)):\n            # if the guess is in the game, add it to the array\n            if guess[i] == game[j]:\n                array.append(score_array[j])\n                guess_array.append(i)\n                score_array.append(0)\n                # if the guess is not in the game, add it to the array\n                if not guess[i] in game:\n                    array.append(score_array[j])\n                    guess_array.append(i)\n                    score_array.append(abs(game[j] - guess[i]))\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # get the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(guess[i])\n    # compare the scores\n    for i in range(len(game)):\n        if (game[i] == scores[i]):\n            return 0\n        else:\n            return abs(game[i] - scores[i])\n    # if the guesses are all wrong, return the absolute difference\n    if (len(guesses) == 0):\n        return abs(game[0] - scores[0])\n    else:\n        return abs(guesses[0] - scores[0])\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = game[0]\n    guesses = game[1]\n    \n    # compare the scores\n    diff = 0\n    for i in range(len(scores)):\n        diff += abs(scores[i] - guesses[i])\n    \n    # return the result\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the result array\n    result = [0] * len(game)\n    # initialize the guess array\n    guess = [0] * len(game)\n    # initialize the score array\n    score = [0] * len(game)\n    # loop through the game\n    for i in range(len(game)):\n        # get the score and guess\n        score[i] = game[i]\n        guess[i] = guess[i]\n        # compare the scores\n        if compare(score,guess) == 0:\n            # if they guessed correctly, return 0\n            result[i] = 0\n        else:\n            # if they guessed incorrectly, return the absolute difference\n            result[i] = abs(score[i] - guess[i])\n    # return the result\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = game[0]\n    guesses = game[1]\n    # get the difference between the scores and guesses\n    diff = abs(scores - guesses)\n    # get the difference between the scores and guesses\n    diff = abs(scores - guesses)\n    # get the difference between the scores and guesses\n    diff = abs(scores - guesses)\n    # get the difference between the scores and guesses\n    diff = abs(scores - guesses)\n    # get the difference between the scores and guesses\n    diff = abs(scores - guesses)\n    # get the difference between the scores and guesses\n    diff = abs(scores - guesses)\n    # get the difference between the scores and guesses\n    diff = abs(scores - guesses)\n    # get the difference between the scores and guesses\n    diff = abs(scores - guesses)\n    # get the difference between the scores and guesses\n    diff = abs(scores - guesses)\n    # get the difference between the scores and guesses\n    diff = abs(scores - guesses)\n    # get the difference between the scores and guesses\n    diff = abs(scores - guesses)\n    # get the difference between", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # create a list of all the differences\n    differences = [abs(game[i] - guess[i]) for i in range(len(game))]\n    # sort the differences\n    differences.sort()\n    # create a list of all the differences\n    differences = [abs(game[i] - guess[i]) for i in range(len(game))]\n    # create a list of all the differences\n    differences = [abs(game[i] - guess[i]) for i in range(len(game))]\n    # create a list of all the differences\n    differences = [abs(game[i] - guess[i]) for i in range(len(game))]\n    # create a list of all the differences\n    differences = [abs(game[i] - guess[i]) for", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    \n    # compare the scores\n    scores = [compare(scores,guess) for guess in guesses]\n    return scores", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the arrays\n    scores = []\n    guesses = []\n    # initialize the result array\n    result = []\n    # loop through the scores and guesses\n    for i in range(len(scores)):\n        # get the score and guess\n        score = scores[i]\n        guess = guesses[i]\n        # compare the scores\n        if score == guess:\n            # if they are equal, return 0\n            result.append(0)\n        else:\n            # if they are not equal, return the absolute difference\n            result.append(abs(score - guess))\n    # return the result\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = game[0]\n    guesses = game[1]\n    # get the difference between the scores and guesses\n    score_diff = abs(scores[0] - guesses[0])\n    guess_diff = abs(scores[1] - guesses[1])\n    # if the difference is zero, they guessed correctly\n    if score_diff == 0 and guess_diff == 0:\n        return [0,0,0,0,0]\n    # if the difference is zero, they guessed incorrectly\n    if score_diff == 0 and guess_diff!= 0:\n        return [0,0,0,0,0]\n    # if the difference is positive, they guessed correctly\n    if score_diff > 0:\n        return [0,0,0,0,0]\n    # if the difference is negative, they guessed incorrectly\n    return [0,0,0,0,0]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of guesses and scores\n    guesses = []\n    scores = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n        scores.append(game[i])\n    # create a list of the absolute differences between the guesses and the scores\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guesss[i]))\n    # return the absolute differences\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create an array of the same length as the guesses\n    guess_array = np.array(guess)\n    # create an array of the same length as the scores\n    score_array = np.array(game)\n    # create a new array of the same length as the guesses\n    guess_array_diff = np.array(guess_array - score_array)\n    # create a new array of the same length as the scores\n    score_array_diff = np.array(score_array - guess_array)\n    # create a new array of the same length as the guesses\n    guess_array_diff_diff = np.array(guess_array_diff - guess_array_diff)\n    # create a new array of the same length as the scores\n    score_array_diff_diff = np.array(score_array_diff - score_array_diff)\n    # create a new array of the same length as the guesses\n    guess_array_diff_diff_diff = np.array(guess_array_diff_diff - guess_array_diff_diff)\n    # create a new array of the same length as the scores\n    score_array_diff_diff_diff = np.array(score_array_diff_diff - score_array_diff_diff)\n    # create a new array of the same length as the guesses\n    guess_array_diff_diff_diff = np.array(gu", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = game[0]\n    guesses = game[1]\n    \n    # get the difference between the scores and guesses\n    diff = abs(scores - guesses)\n    \n    # return the difference\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = [game[i] for i in range(len(game))]\n    guess = [game[i] for i in range(len(game))]\n    diff = [abs(game[i] - guess[i]) for i in range(len(game))]\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    \n    # compare the scores and guesses\n    diff = []\n    for i in range(len(scores)):\n        if scores[i]!= guesses[i]:\n            diff.append(scores[i] - guesses[i])\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(game[i] - guess[i])\n    # create a list of all the differences\n    differences = [abs(difference) for difference in differences]\n    # sort the differences\n    differences.sort()\n    # create a list of all the differences\n    differences = [difference for difference in differences]\n    # create a list of all the differences\n    differences = [difference for difference in differences]\n    # create a list of all the differences\n    differences = [difference for difference in differences]\n    # create a list of all the differences\n    differences = [difference for difference in differences]\n    # create a list of all the differences\n    differences = [difference for difference in differences]\n    # create a list of all the differences\n    differences = [difference for difference in differences]\n    # create a list", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # sort the differences\n    differences.sort()\n    # return the difference between the guess and the score\n    return differences", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a new array to hold the scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # sort the scores and guesses\n    scores.sort()\n    guesses.sort()\n    # create a new array to hold the difference between the scores and guesses\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    diff = [abs(game[i] - guess[i]) for i in range(len(game))]\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses and scores\n    guesses_scores = [(guess,score) for guess,score in zip(guesses,scores)]\n    \n    # create a list of all the guesses and scores\n    guesses_scores_pairs = [(guess,score) for guess,score in zip(guesses,scores)]\n    \n    # create a list of all the guesses and scores\n    guesses_scores_pairs_difference = [(guess,score) for guess,score in zip(guesses,scores)]\n    \n    # create a list of all the guesses and scores\n    guesses_scores_pairs_difference_pairs = [(guess,score) for guess,score in zip(guesses,scores)]\n    \n    # create a list of all the guesses and scores\n    guesses_scores_pairs_difference_pairs_difference = [(guess,score) for guess,score in zip(guesses,scores)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    \n    # create a list of scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    \n    # compare the scores\n    for i in range(len(game)):\n        if compare(scores[i],guesses[i]) == 0:\n            return 0\n        else:\n            return abs(compare(scores[i],guesses[i]))\n        \n    # if you get here, you guessed incorrectly\n    return -1", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of the scores\n    scores = [score for score in game]\n    # create a list of the guesses\n    guesses = [guess for guess in guess]\n    # create a list of the scores\n    scores2 = [score for score in game]\n    # create a list of the guesses\n    guesses2 = [guess for guess in guess]\n    # create a list of the scores\n    scores3 = [score for score in game]\n    # create a list of the guesses\n    guesses3 = [guess for guess in guess]\n    # create a list of the scores\n    scores4 = [score for score in game]\n    # create a list of the guesses\n    guesses4 = [guess for guess in guess]\n    # create a list of the scores\n    scores5 = [score for score in game]\n    # create a list of the guesses\n    guesses5 = [guess for guess in guess]\n    # create a list of the scores\n    scores6 = [score for score in game]\n    # create a list of the guesses\n    guesses6 = [guess for guess in guess]\n    # create a list of the scores\n    scores7 =", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the absolute differences\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    # sort the list of guesses\n    sorted_guesses = sorted(guesses, key=lambda x: x[0])\n    # sort the list of scores\n    sorted_scores = sorted(scores, key=lambda x: x[0])\n    # create a list of the absolute differences\n    diff_sorted = []\n    for i in range(len(game)):\n        diff_sorted.append(abs(game[i] - sorted_guesses[i]))\n    # create a list of the absolute differences\n    diff_sorted_sorted = []\n    for i in range(len(game)):\n        diff_sorted_sorted.append(abs(game[i] - sorted_guesses[i]))\n    # create a list of the absolute differences\n    diff_sorted_sorted_sorted", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    \n    # get the difference between the guesses and the scores\n    diff = [abs(guess[i] - score[i]) for i in range(len(game))]\n    \n    # return the difference\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = []\n    # loop through the guesses\n    for guess in guesses:\n        # loop through the scores\n        for score in scores:\n            # if the score is the same as the guess\n            if score == guess:\n                # add the value to the array\n                array.append(0)\n            # otherwise, add the absolute difference\n            else:\n                array.append(abs(score - guess))\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores\n    scores = [score for score in game]\n    guesses = [guess for guess in guess]\n    \n    # get the difference between the scores and the guesses\n    diff = [abs(score - guess) for score, guess in zip(scores,guess)]\n    \n    # sort the difference\n    diff.sort()\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a new array of the same length as the guesses and scores\n    guess_array = np.array(guess)\n    score_array = np.array(score)\n    \n    # compare the guesses and scores\n    result_array = np.array([])\n    for i in range(len(guess_array)):\n        result_array.append(compare(score_array,guess_array[i]))\n    \n    return result_array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # loop over the guesses\n    for i in range(len(guess)):\n        # loop over the scores\n        for j in range(len(game)):\n            # if the guesses are equal, return the difference\n            if compare(game[i],guess[i]) == 0:\n                array[i][j] = 0\n            # otherwise, return the absolute difference\n            else:\n                array[i][j] = abs(compare(game[i],guess[i]))\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores\n    scores = game[0]\n    guesses = game[1]\n    \n    # get the difference\n    diff = abs(guesses - scores)\n    \n    # return the difference\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # loop through the guesses\n    for guess in guesses:\n        # loop through the scores\n        for score in scores:\n            # compare the two scores\n            if score[0] == guess[0]:\n                # if the scores are equal, return the difference\n                if score[1] == guess[1]:\n                    # if the scores are equal, return the difference\n                    array[score[0]] += score[1] - guess[1]\n                # if the scores are not equal, return the difference\n                else:\n                    array[score[0]] += score[1] - guess[1]\n            else:\n                # if the scores are not equal, return the difference\n                array[score[0]] += score[1] - guess[1]\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # loop through the guesses\n    for i in range(len(guess)):\n        # loop through the scores\n        for j in range(len(game)):\n            # if the guesses are equal, return the difference\n            if compare(game[i],guess[i]) == 0:\n                array[i][j] = 0\n            # if the guesses are not equal, return the absolute difference\n            else:\n                array[i][j] = compare(game[i],guess[i]) - game[j]\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    \n    # get the difference between the scores and the guesses\n    score_diff = [abs(scores[i] - guess[i]) for i in range(len(game))]\n    guess_diff = [abs(guess[i] - scores[i]) for i in range(len(game))]\n    \n    # sort the scores and guesses\n    scores.sort(key=lambda x: x[0])\n    guesses.sort(key=lambda x: x[0])\n    \n    # get the difference between the scores and the guesses\n    score_diff.sort(key=lambda x: x[0])\n    guess_diff.sort(key=lambda x: x[0])\n    \n    # get the difference between the scores and the guesses\n    score_diff.reverse()\n    guess_diff.reverse()\n    score_diff.reverse()\n    guess_diff.reverse()\n    \n    # get the difference between the scores and the guesses\n    score_diff.reverse()\n    guess_diff.reverse()\n    score_diff.reverse()\n    guess_diff.reverse()\n    \n    # get the difference between the scores and the guesses\n    score_diff.reverse()\n    guess_diff.reverse()\n    score_diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    \n    # compare the scores\n    scores = [compare(scores,guess) for guess in guesses]\n    return scores", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the arrays\n    scores = []\n    guesses = []\n    \n    # loop through the guesses and the scores\n    for i in range(len(guesses)):\n        for j in range(len(scores)):\n            if (guesses[i] == scores[j]):\n                scores.append(0)\n                guesses.append(0)\n            else:\n                scores.append(scores[j] - guesses[i])\n                guesses.append(guesses[i] - scores[j])\n    \n    # return the array\n    return scores", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the absolute differences\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    # create a list of the differences\n    diff = sorted(diff, key=lambda x: abs(x), reverse=True)\n    # create a list of the differences\n    diff = sorted(diff, key=lambda x: abs(x), reverse=False)\n    # create a list of the differences\n    diff = sorted(diff, key=lambda x: abs(x), reverse=True)\n    # create a list of the differences\n    diff = sorted(diff, key=lambda x: abs(x), reverse=False)\n    # create a list of the differences\n    diff = sorted(diff, key=lambda x: abs(x), reverse=True)\n    # create a list of the differences\n    diff = sorted(diff, key=lambda x: abs(x), reverse=False)\n    # create a list of the differences", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    return [abs(game[i] - guess[i]) for i in range(len(game))]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses that are correct\n    correct = [score for score in score if score == guess]\n    \n    # create a list of all the guesses that are incorrect\n    incorrect = [score for score in score if score!= guess]\n    \n    # create a list of all the guesses that are correct\n    correct = [score for score in score if score == guess]\n    \n    # create a list of all the guesses that are incorrect\n    incorrect = [score for score in score if score!= guess]\n    \n    # create a list of all the guesses that are correct\n    correct = [score for score in score if score == guess]\n    \n    # create a list of all the guesses that are incorrect\n    incorrect = [score for score in score if score!= guess]\n    \n    # create a list of all the guesses that are correct\n    correct = [score for score in score if score == guess]\n    \n    # create a list of all the guesses that are incorrect\n    incorrect = [score for score in score if", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the absolute differences\n    abs_diffs = []\n    for i in range(len(game)):\n        abs_diffs.append(abs(game[i] - guess[i]))\n    # create a list of the differences\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs_diffs[i])\n    # create a list of the differences\n    diff = [abs_diffs[i] for i in range(len(game))]\n    # create a list of the differences\n    diff = [abs_diffs[i] - guess[i] for i in range(len(game))]\n    # create a list of the differences\n    diff = [abs_diffs[i] - guess[i] for i in range(len(game))]\n    # create a list of the differences\n    diff = [abs_diffs[i] - guess[i] for i in range(len(game))]\n    # create a list of the differences\n    diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the differences between the guesses and the scores\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    # sort the list of differences\n    diff.sort()\n    # return the list of differences\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the absolute differences between the guesses and the scores\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    # sort the list of differences\n    diff.sort()\n    # return the absolute differences\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(game[i] - guesses[i])\n    # sort the differences\n    differences.sort()\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(game[i] - guesses[i])\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(game[i] - guesses[i])\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(game[i] - guesses[i])\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(game[i] - guesses[i])\n    # create a list of all", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the arrays\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # sort the scores\n    scores.sort()\n    # sort the guesses\n    guesses.sort()\n    # compare the scores\n    for i in range(len(scores)):\n        if compare(scores[i],guesses[i]) == 0:\n            return 0\n        else:\n            return abs(scores[i]-guesses[i])\n    # if they have guessed correctly, return 0\n    return 0", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a new array of the same length as the guesses and scores\n    scores = [score for score, guess in zip(scores,guess)]\n    # create a new array of the same length as the guesses and scores\n    scores2 = [score for score, guess in zip(scores,guess)]\n    # compare the scores and guesses\n    return [abs(score - guess) for score, guess in zip(scores,guess)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses that are correct\n    correct = [score for score in score if score == guess]\n    \n    # create a list of all the guesses that are incorrect\n    incorrect = [score for score in score if score!= guess]\n    \n    # create a list of all the guesses that are correct and incorrect\n    correct_in = [score for score in score if score in correct]\n    incorrect_in = [score for score in score if score not in correct]\n    \n    # create a list of all the guesses that are correct and incorrect\n    correct_out = [score for score in score if score in incorrect]\n    incorrect_out = [score for score in score if score not in incorrect]\n    \n    # create a list of all the guesses that are correct and incorrect\n    correct_in_out = [score for score in score if score in correct_in and score in incorrect_out]\n    incorrect_in_out = [score for score in score if score in incorrect_in and score not in incorrect_out]\n    \n    # create a list of all the", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the result array\n    result = []\n    # initialize the guess array\n    guess = []\n    # initialize the score array\n    score = []\n    # initialize the difference array\n    difference = []\n    # loop through the guesses\n    for i in range(len(guess)):\n        # loop through the scores\n        for j in range(len(score)):\n            # if the guess is equal to the score\n            if guess[i] == score[j]:\n                # add the difference to the difference array\n                difference.append(abs(guess[i] - score[j]))\n                # add the score to the score array\n                score.append(score[j])\n                # add the guess to the guess array\n                guess.append(guess[i])\n                # increment the index\n                i += 1\n            # if the guess is not equal to the score\n            else:\n                # add the difference to the difference array\n                difference.append(abs(guess[i] - score[j]))\n                # add the score to the score array\n                score.append(score[j])\n                # add the guess to the guess array\n                guess.append(guess[i])\n                # increment the index\n                i += 1\n    # return the result array\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"ERROR: The arrays are not the same length.\")\n        return []\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"ERROR: The arrays are not the same length.\")\n        return []\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"ERROR: The arrays are not the same length.\")\n        return []\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"ERROR: The arrays are not the same length.\")\n        return []\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"ERROR: The arrays are not the same length.\")\n        return []\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"ERROR: The arrays are not the same length.\")\n        return []\n    # check if the arrays are the same length\n    if len(game)!", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = game[0]\n    guesses = game[1]\n    result = []\n    for i in range(len(scores)):\n        if scores[i] == guesses:\n            result.append(0)\n        else:\n            result.append(abs(scores[i] - guesses[i]))\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    # sort the scores\n    scores.sort()\n    # sort the guesses\n    guesses.sort()\n    # get the difference between the two\n    diff = abs(scores[0] - guesses[0])\n    # return the difference\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # compare the guesses with the scores\n    for i in range(len(game)):\n        if guess[i] == scores[i]:\n            return compare(guesses,game[i])\n        else:\n            return compare(guesses,game[i],abs(guesses[i]-scores[i]))\n    return [0,0,0,0,3,3]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # sort the scores and guesses\n    scores.sort()\n    guesses.sort()\n    # create a list of the scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # compare the scores and guesses\n    return compare(scores,guesses)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # initialize the array of guesses\n    arrayGuess = [0] * len(game)\n    # initialize the array of scores\n    arrayScore = [0] * len(game)\n    # initialize the array of differences\n    arrayDifference = [0] * len(game)\n    # initialize the array of differences\n    arrayDifferenceGuess = [0] * len(game)\n    # initialize the array of differences\n    arrayDifferenceScore = [0] * len(game)\n    # initialize the array of differences\n    arrayDifferenceDifference = [0] * len(game)\n    # initialize the array of differences\n    arrayDifferenceDifferenceGuess = [0] * len(game)\n    # initialize the array of differences\n    arrayDifferenceDifferenceScore = [0] * len(game)\n    # initialize the array of differences\n    arrayDifferenceDifferenceGuess = [0] * len(game)\n    # initialize the array of differences\n    arrayDifferenceDifferenceScore = [0] * len(game)\n    # initialize the array of differences\n    arrayDifferenceDifferenceGuess = [0] * len(game)\n    # initialize the array of differences\n    arrayDifferenceDifferenceScore = [0] * len(game)\n    # initialize the array of differences\n    arrayDifferenceDifferenceGuess = [0] * len(game)\n    # initialize the array of differences\n    arrayDifferenceDifference", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # initialize the array of guesses\n    array[0] = guess\n    # loop through the game\n    for i in range(len(game)):\n        # compare the score with the guess\n        if game[i] == guess[i]:\n            array[i] = 0\n        else:\n            array[i] = abs(game[i] - guess[i])\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    \n    # sort the scores and guesses\n    scores.sort()\n    guesses.sort()\n    \n    # create a list of the absolute differences between the scores and guesses\n    abs_scores = []\n    abs_guess = []\n    for i in range(len(scores)):\n        abs_scores.append(abs(scores[i]-guesses[i]))\n        abs_guess.append(abs(guesses[i]-scores[i]))\n    \n    # return the absolute differences\n    return abs_scores", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores\n    scores = game[0]\n    guesses = game[1]\n    \n    # get the difference between the scores\n    diff = abs(scores[0] - scores[1])\n    # get the difference between the guesses\n    diff2 = abs(guesses[0] - guesses[1])\n    \n    # if the difference is zero, then the two guesses are the same\n    if diff == 0:\n        return [diff2 == 0]\n    # if the difference is zero, then the two guesses are the same\n    else:\n        return [diff2 == diff]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = game[0]\n    guess = game[1]\n    diff = abs(score- guess)\n    if diff == 0:\n        return [0,0,0,0,0]\n    else:\n        return [abs(score- guess)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # sort the guesses\n    sortedGuesses = sorted(guesses, key=lambda x: x[0])\n    # sort the scores\n    sortedScores = sorted(scores, key=lambda x: x[0])\n    # create a list of the differences\n    sortedDifferences = sorted(differences, key=lambda x: x[0])\n    # create a list of the differences\n    sortedDifferences = sorted(differences, key=lambda x: x[0])\n    # create a list of the differences\n    sortedDifferences = sorted(differences, key=lambda x: x[0])\n    # create a list of the differences\n    sortedDifferences = sorted(differences, key=lambda x: x[0])\n    # create a list of the differences", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # get the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(guess[i])\n    # compare\n    return compare(scores,guesses)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of the guesses and scores\n    guesses = []\n    scores = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n        scores.append(game[i])\n    # sort the guesses by score\n    sortedGuesses = sorted(guesses, key=lambda x: x[0], reverse=True)\n    # sort the scores by score\n    sortedScores = sorted(scores, key=lambda x: x[0], reverse=True)\n    # create a list of the differences\n    differences = []\n    for i in range(len(sortedGuesses)):\n        differences.append(sortedGuesses[i]-sortedScores[i])\n    # return the differences\n    return differences", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = np.array(game)\n    guesses = np.array(guess)\n    diff = np.array(np.diff(scores))\n    diff2 = np.array(np.diff(guess))\n    diff3 = np.array(np.diff(diff))\n    diff4 = np.array(np.diff(diff2))\n    diff5 = np.array(np.diff(diff3))\n    diff6 = np.array(np.diff(diff4))\n    diff7 = np.array(np.diff(diff5))\n    diff8 = np.array(np.diff(diff6))\n    diff9 = np.array(np.diff(diff7))\n    diff10 = np.array(np.diff(diff8))\n    diff11 = np.array(np.diff(diff9))\n    diff12 = np.array(np.diff(diff10))\n    diff13 = np.array(np.diff(diff11))\n    diff14 = np.array(np.diff(diff12))\n    diff15 = np.array(np.diff(diff13))\n    diff16 = np.array(np.diff(diff14))\n    diff17 = np.array(np.diff(diff15))\n    diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the guesses\n    guesses = sorted(guesses, key=lambda x: x[0])\n    # create a list of all the scores\n    scores = sorted(scores, key=lambda x: x[0])\n    # create a list of all the guesses\n    guesses = sorted(guesses, key=lambda x: x[1])\n    # create a list of all the scores\n    scores = sorted(scores, key=lambda x: x[1])\n    # create a list of all the guesses\n    guesses = sorted(guesses, key=lambda x: x[2])\n    # create a list of all the scores\n    scores = sorted(scores, key=lambda x: x[2])\n    # create a list of all the guesses\n    guesses = sorted(guesses, key=lambda x: x[3])\n    # create a list of all the scores\n    scores = sorted(scores, key=lambda x: x[3])\n    # create", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the absolute differences\n    abs_diffs = []\n    for i in range(len(game)):\n        abs_diffs.append(abs(game[i] - guess[i]))\n    # create a list of the differences\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs_diffs[i])\n    # create a list of the differences\n    diff = sorted(diff, key=lambda x: abs(x), reverse=True)\n    # create a list of the differences\n    diff = sorted(diff, key=lambda x: abs(x), reverse=False)\n    # create a list of the differences\n    diff = sorted(diff, key=lambda x: abs(x), reverse=True)\n    # create a list of the differences\n    diff = sorted(diff, key=lambda x: abs(x), reverse=False)\n    # create a list of the differences\n    diff = sorted(diff, key=lambda x:", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the arrays\n    scores = []\n    guesses = []\n    # loop through the guesses\n    for guess in guesses:\n        # loop through the scores\n        for score in scores:\n            # if the guess is the same as the score, add 1\n            if guess == score:\n                scores.append(1)\n                continue\n            # if the guess is not the same as the score, subtract 1\n            else:\n                scores.append(-1)\n                continue\n        # if the guess is the same as the score, add 1\n        if guess == score:\n            guesses.append(1)\n            continue\n        # if the guess is not the same as the score, subtract 1\n        else:\n            guesses.append(-1)\n            continue\n    # return the difference\n    return abs(sum(scores) - sum(guesses))</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = []\n    # iterate over the guesses\n    for guess in guesses:\n        # iterate over the scores\n        for score in scores:\n            # if the guess is equal to the score, return 0\n            if guess == score:\n                array.append(0)\n            # otherwise, return the absolute difference\n            else:\n                array.append(abs(score - guess))\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the possible guesses\n    guesses = [guess for guess in range(len(game))]\n    \n    # create a list of all the possible scores\n    scores = [score for score in range(len(game))]\n    \n    # create a list of all the possible scores\n    scores = [score for score in range(len(game))]\n    \n    # create a list of all the possible scores\n    scores = [score for score in range(len(game))]\n    \n    # create a list of all the possible scores\n    scores = [score for score in range(len(game))]\n    \n    # create a list of all the possible scores\n    scores = [score for score in range(len(game))]\n    \n    # create a list of all the possible scores\n    scores = [score for score in range(len(game))]\n    \n    # create a list of all the possible scores\n    scores = [score for score in range(len(game))]\n    \n    # create a list of all the possible scores\n    scores = [score for score in range(len(game))]\n    \n    # create a list of all the possible scores\n    scores = [score for score in range(len(game))]\n    \n    # create", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = []\n    # initialize the array of scores\n    scores = []\n    # initialize the array of guesses\n    guesses = []\n    # loop through the guesses\n    for i in range(len(guesses)):\n        # loop through the scores\n        for j in range(len(scores)):\n            # if the guess is greater than the score\n            if guess[i] > scores[j]:\n                # add the difference to the array\n                array.append(abs(guesses[i] - scores[j]))\n            # if the guess is less than the score\n            else:\n                # add the score to the array\n                array.append(scores[j])\n        # if the guess is greater than the score\n        if guess[i] > scores[j]:\n            # add the difference to the array\n            array.append(abs(guesses[i] - scores[j]))\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all possible guesses\n    guesses = [guess for guess in range(len(game))]\n    \n    # create a list of all possible scores\n    scores = [score for score in range(len(game))]\n    \n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    \n    # sort the differences\n    differences.sort(key=lambda x: x[1])\n    \n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    \n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    \n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    \n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    \n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = game[0]\n    guesses = game[1]\n    \n    # get the difference between the scores and guesses\n    diff = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    \n    # get the difference between the scores and guesses\n    diff = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    \n    # sort the difference\n    diff.sort(key=lambda x: abs(x))\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = game[0]\n    guess = game[1]\n    diff = abs(score - guess)\n    if diff == 0:\n        return [0,0,0,0,0,0]\n    else:\n        return [abs(score - guess)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = game[0]\n    guess = game[1]\n    score_diff = abs(score - guess)\n    return score_diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of the scores\n    scores = [score for score in score]\n    \n    # create a list of the differences\n    differences = [abs(score - guess) for guess in guess]\n    \n    # sort the guesses\n    guesses.sort(key=lambda x: x[0])\n    \n    # sort the scores\n    scores.sort(key=lambda x: x[0])\n    \n    # create a list of the differences\n    differences.sort(key=lambda x: x[0])\n    \n    # create a list of the differences\n    differences = [abs(score - guess) for guess in guess]\n    \n    # create a list of the differences\n    differences = [abs(score - guess) for guess in guess]\n    \n    # create a list of the differences\n    differences = [abs(score - guess) for guess in guess]\n    \n    # create a list of the differences\n    differences = [abs(score - guess) for guess in guess]\n    \n    # create a list of the differences\n    differences = [abs(score - guess) for guess in guess]\n    \n    # create a list of the differences\n    differences = [abs(score - guess) for guess in guess]\n    \n    # create", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores\n    scores = game[0]\n    guesses = game[1]\n    \n    # get the difference between the scores\n    diff = abs(scores[0] - scores[1])\n    \n    # get the difference between the guesses\n    diff2 = abs(guesses[0] - guesses[1])\n    \n    # if the difference is zero, the guesses are correct\n    if diff == 0:\n        return [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the absolute differences\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    # sort the guesses by their absolute differences\n    sortedGuesses = sorted(guesses, key=lambda x: x.abs(), reverse=True)\n    # sort the scores by their absolute differences\n    sortedScores = sorted(scores, key=lambda x: x.abs(), reverse=True)\n    # create a list of the absolute differences\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    # sort the guesses by their absolute differences\n    sortedGuesses = sorted(guesses, key=lambda x: x.abs(), reverse=True)\n    # sort the scores by their absolute differences\n    sortedScores = sorted(scores, key=lambda x: x.abs(), reverse=True)\n    # create", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # loop through the guesses\n    for i in range(len(guess)):\n        # get the score\n        score = game[i]\n        # get the guess\n        guess = guess[i]\n        # compare the scores\n        if score == guess:\n            array[i] = 0\n        else:\n            array[i] = abs(score - guess)\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # loop over the guesses\n    for guess in guesses:\n        # loop over the scores\n        for score in scores:\n            # if the guess is equal to the score, add 1\n            if guess == score:\n                array[guess] += 1\n            # otherwise, subtract 1\n            else:\n                array[guess] -= 1\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    diff = [abs(game[i] - guess[i]) for i in range(len(game))]\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the arrays\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    \n    # compare the scores\n    for i in range(len(game)):\n        if (game[i] == guess[i]):\n            if (len(scores) == len(guesses)):\n                return (0,0)\n            else:\n                return (abs(scores[i] - guesses[i]),abs(scores[i] - guesses[i]))\n        else:\n            return (abs(scores[i] - guesses[i]),abs(scores[i] - guesses[i]))\n    \n    # if the arrays are the same length, return the difference\n    if (len(scores) == len(guesses)):\n        return (abs(scores[i] - guesses[i]),abs(scores[i] - guesses[i]))\n    else:\n        return (abs(scores[i] - guesses[i]),abs(scores[i] - guesses[i]))", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # sort the differences in ascending order\n    differences.sort()\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = [score for score in game]\n    guesses = [guess for guess in game]\n    \n    # compare the scores\n    for i in range(len(scores)):\n        if scores[i]!= guesses[i]:\n            return [scores[i] - guesses[i], i]\n    \n    # compare the guesses\n    for i in range(len(guesses)):\n        if guesses[i]!= scores[i]:\n            return [guesses[i] - scores[i], i]\n    \n    return [0,0]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # check for empty arrays\n    if len(game) == 0 or len(guess) == 0:\n        return [0,0,0,0,0]\n    # check for empty arrays\n    if len(game) == 0 or len(guess) == 0:\n        return [0,0,0,0,0]\n    # check for empty arrays\n    if len(game) == 0 or len(guess) == 0:\n        return [0,0,0,0,0]\n    # check for empty arrays\n    if len(game) == 0 or len(guess) == 0:\n        return [0,0,0,0,0]\n    # check for empty arrays\n    if len(game) == 0 or len(guess) == 0:\n        return [0,0,0,0,0]\n    # check for empty arrays\n    if len(game) == 0 or len(guess) == 0:\n        return [0,0,0,0,0]\n    # check for empty arrays\n    if len(game) == 0 or len(guess) == 0:\n        return [0,0,0,0,0]\n    # check for empty arrays\n    if len(game) == 0 or len(guess) == 0:\n        return [0", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = game[0]\n    guesses = game[1]\n    \n    # compare the scores\n    scores = [compare(score, guess) for score, guess in zip(scores, guesses)]\n    \n    # compare the guesses\n    guesses = [compare(guess, score) for guess, score in zip(guesses, scores)]\n    \n    # return the results\n    return [abs(score - guess) for score, guess in zip(scores, guesses)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = game[0]\n    guess = game[1]\n    diff = abs(score - guess)\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = game[0]\n    guesses = game[1]\n    \n    # compare the scores\n    diff = []\n    for i in range(len(scores)):\n        diff.append(abs(scores[i] - guesses[i]))\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of the scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    \n    # create a list of the scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    \n    # compare the scores and guesses\n    return [abs(score - guess) for score, guess in zip(scores, guesses)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0]*len(game)\n    # initialize the array of scores\n    scores = [0]*len(game)\n    # initialize the array of guesses\n    guesses = [0]*len(game)\n    # initialize the array of differences\n    differences = [0]*len(game)\n    # loop through the game\n    for i in range(len(game)):\n        # get the score\n        score = game[i]\n        # get the guess\n        guess = guess[i]\n        # get the difference\n        difference = score - guess\n        # add the difference to the array\n        array[i] = difference\n        # add the score to the array\n        scores[i] = score\n        # add the guess to the array\n        guesses[i] = guess\n        # add the difference to the array\n        differences[i] = difference\n    # return the array\n    return array,scores,guesses,differences", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all possible guesses\n    guesses = [guess for guess in range(len(game))]\n    \n    # create a list of all possible scores\n    scores = [score for score in range(len(game))]\n    \n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    \n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    \n    # sort the differences\n    differences.sort(key=lambda difference: difference)\n    \n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    \n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    \n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    \n    # create a list of all possible differences\n    differences = [abs(score - guess) for score, guess in", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of the guesses and scores\n    guesses = [guess for guess in guesss]\n    scores = [score for score in scores]\n    \n    # create a list of the scores and guesses\n    scores = [score for score in scores]\n    guesses = [guess for guess in guesss]\n    \n    # create a list of the scores and guesses\n    scores = [score for score in scores]\n    guesses = [guess for guess in guesss]\n    \n    # create a list of the scores and guesses\n    scores = [score for score in scores]\n    guesses = [guess for guess in guesss]\n    \n    # create a list of the scores and guesses\n    scores = [score for score in scores]\n    guesses = [guess for guess in guesss]\n    \n    # create a list of the scores and guesses\n    scores = [score for score in scores]\n    guesses = [guess for guess in guesss]\n    \n    # create a list of the scores and guesses\n    scores = [score for score in scores]\n    guesses = [guess for guess in guesss]\n    \n    # create a list of the scores and guesses\n    scores = [score for score in scores]\n    guesses =", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    return compare(scores,guesses)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the arrays\n    scores = []\n    guesses = []\n    # loop through the scores\n    for i in range(len(scores)):\n        # loop through the guesses\n        for j in range(len(guesses)):\n            # if the guess is the same as the score, return 0\n            if (scores[i] == guesses[j]):\n                return 0\n            # if the guess is not the same as the score, return the absolute difference\n            else:\n                return abs(scores[i] - guesses[j])\n    # if the guesses are all the same, return 0\n    return 0", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create an array of the same length as the guesses and scores\n    scores = [score for score, guess in zip(guess, game)]\n    # create an array of the same length as the guesses and scores\n    scores = [score for score, guess in zip(guess, game)]\n    # create an array of the same length as the guesses and scores\n    scores = [score for score, guess in zip(guess, game)]\n    # create an array of the same length as the guesses and scores\n    scores = [score for score, guess in zip(guess, game)]\n    # create an array of the same length as the guesses and scores\n    scores = [score for score, guess in zip(guess, game)]\n    # create an array of the same length as the guesses and scores\n    scores = [score for score, guess in zip(guess, game)]\n    # create an array of the same length as the guesses and scores\n    scores = [score for score, guess in zip(guess, game)]\n    # create an array of the same length as the guesses and scores\n    scores = [score for score, guess in", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    return compare(scores,guesses)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores and guesses\n    scores = game[0]\n    guesses = game[1]\n    \n    # get the difference between the guesses and the scores\n    diff = [abs(guess[i] - score[i]) for i in range(len(guess))]\n    \n    # return the difference\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the result array\n    result = [0] * len(game)\n    # initialize the guess array\n    guess = [0] * len(game)\n    # initialize the difference array\n    difference = [0] * len(game)\n    # loop through the game\n    for i in range(len(game)):\n        # get the score and guess\n        score = game[i]\n        guess[i] = guess[i] + score\n        # get the difference\n        difference[i] = score - guess[i]\n        # if the score is the same as the guess, return 0\n        if score == guess[i]:\n            result[i] = 0\n        # if the score is different, return the absolute difference\n        else:\n            result[i] = abs(score - guess[i])\n    # return the result\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of guesses and scores\n    guesses = []\n    scores = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n        scores.append(game[i] - guess[i])\n    # sort the guesses and scores\n    sorted_guess = sorted(guesses, key=lambda x: x, reverse=True)\n    sorted_score = sorted(scores, key=lambda x: x, reverse=True)\n    # create a list of the difference between the guesses and the scores\n    diff = []\n    for i in range(len(sorted_guess)):\n        diff.append(abs(sorted_guess[i] - sorted_score[i]))\n    # return the difference\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"Your arrays are not the same length.\")\n        return None\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"Your arrays are not the same length.\")\n        return None\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"Your arrays are not the same length.\")\n        return None\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"Your arrays are not the same length.\")\n        return None\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"Your arrays are not the same length.\")\n        return None\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"Your arrays are not the same length.\")\n        return None\n    # check if the arrays are the same length\n    if len(game)!= len(guess)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the guesses and scores\n    guess_score = []\n    for i in range(len(game)):\n        guess_score.append(compare(game[i],guesses[i]))\n    score_score = []\n    for i in range(len(game)):\n        score_score.append(compare(game[i],scores[i]))\n    # create a list of the difference between the scores and guesses\n    score_diff = []\n    for i in range(len(game)):\n        score_diff.append(abs(score_score[i]-guess_score[i]))\n    # create a list of the difference between the scores and guesses\n    guess_diff = []\n    for i in range(len(game)):\n        guess_diff.append(abs(score_score[i]-guesses[i]))\n    # create a list of the difference between the scores and guesses\n    score_diff.sort()\n    guess_diff.sort()\n    # return the difference between", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # sort the differences\n    differences.sort()\n    # create a list of the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # create a list of the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # create a list of the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # create a list of the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # create a list of", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = [guess for guess in guesss]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guesss]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    result = [0] * len(game)\n    # iterate over the guesses\n    for guess in guesses:\n        # compare the guess with the score\n        result[guess] = compare(game,guess)\n    # return the result\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of guesses and scores\n    guesses = []\n    scores = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n        scores.append(guess[i])\n    # sort the guesses by score\n    scores.sort(key=lambda x: x[0])\n    # sort the guesses by score\n    guesses.sort(key=lambda x: x[0])\n    # create a list of the difference between the guesses and the scores\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    # return the difference between the guesses and the scores\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # create a list of all the differences\n    differences = sorted(differences, key=lambda x: x[0], reverse=True)\n    # create a list of all the differences\n    differences = [abs(x) for x in differences]\n    # create a list of all the differences\n    differences = [abs(x) for x in differences]\n    # create a list of all the differences\n    differences = [abs(x) for x in differences]\n    # create a list of all the differences\n    differences = [abs(x) for x in differences]\n    # create a list of all the differences\n    differences = [abs(x) for x in differences]\n    # create a list of all the differences\n    differences = [abs(x) for", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of the scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # sort the scores and guesses\n    scores.sort()\n    guesses.sort()\n    # create a list of the scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # sort the scores and guesses\n    scores.sort()\n    guesses.sort()\n    # create a list of the scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # sort the scores and guesses\n    scores.sort()\n    guesses.sort()\n    # create a list of the scores and guesses\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    # sort the scores and guesses\n    scores.sort()\n    guesses.sort", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the arrays\n    scores = []\n    guesses = []\n    # loop through the guesses\n    for guess in guesses:\n        # loop through the scores\n        for score in scores:\n            # if the guess is equal to the score, return 0\n            if guess == score:\n                return 0\n            # if the guess is not equal to the score, return the absolute difference\n            else:\n                return abs(score - guess)\n    # if the guesses are equal, return 0\n    return 0", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0]*len(game)\n    # initialize the guess array\n    guess_array = [0]*len(game)\n    # initialize the score array\n    score_array = [0]*len(game)\n    # initialize the difference array\n    difference_array = [0]*len(game)\n    # initialize the difference array\n    difference_array = [0]*len(game)\n    # initialize the difference array\n    difference_array = [0]*len(game)\n    # initialize the difference array\n    difference_array = [0]*len(game)\n    # initialize the difference array\n    difference_array = [0]*len(game)\n    # initialize the difference array\n    difference_array = [0]*len(game)\n    # initialize the difference array\n    difference_array = [0]*len(game)\n    # initialize the difference array\n    difference_array = [0]*len(game)\n    # initialize the difference array\n    difference_array = [0]*len(game)\n    # initialize the difference array\n    difference_array = [0]*len(game)\n    # initialize the difference array\n    difference_array = [0]*len(game)\n    # initialize the difference array\n    difference_array = [0]*len(game)\n    # initialize the difference array\n    difference_array = [0]*len(game)\n    # initialize the difference array\n    difference_array = [0]*len(game)\n    # initialize", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the guesses\n    guesses = sorted(guesses, key=lambda x: x[0])\n    # create a list of all the scores\n    scores = sorted(scores, key=lambda x: x[0])\n    # create a list of all the guesses\n    guesses = sorted(guesses, key=lambda x: x[1])\n    # create a list of all the scores\n    scores = sorted(scores, key=lambda x: x[1])\n    # create a list of all the guesses\n    guesses = sorted(guesses, key=lambda x: x[2])\n    # create a list of all the scores\n    scores = sorted(scores, key=lambda x: x[2])\n    # create a list of all the guesses\n    guesses = sorted(guesses, key=lambda x: x[3])\n    # create a list of all the scores\n    scores = sorted(scores, key=lambda x: x[3])\n    # create", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of the guesses\n    guesses = [guess for guess in guesss]\n    \n    # create a list of the scores\n    scores = [score for score in scores]\n    \n    # create a list of the differences\n    differences = [abs(score - guess) for score, guess in zip(scores, guesses)]\n    \n    # sort the differences\n    differences.sort(key=lambda x: x[0])\n    \n    # return the differences\n    return differences", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the guesses\n    guesses = sorted(guesses, key=lambda x: x[0])\n    # create a list of all the scores\n    scores = sorted(scores, key=lambda x: x[0])\n    # create a list of all the guesses\n    guesses = sorted(guesses, key=lambda x: x[1])\n    # create a list of all the scores\n    scores = sorted(scores, key=lambda x: x[1])\n    # create a list of all the guesses\n    guesses = sorted(guesses, key=lambda x: x[2])\n    # create a list of all the scores\n    scores = sorted(scores, key=lambda x: x[2])\n    # create a list of all the guesses\n    guesses = sorted(guesses, key=lambda x: x[3])\n    # create a list of all the scores\n    scores = sorted(scores, key=lambda x: x[3])\n    # create", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    \n    # compare the scores\n    diff = 0\n    for i in range(len(scores)):\n        if scores[i]!= guesses[i]:\n            diff = diff + 1\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = game[0]\n    guess = game[1]\n    diff = abs(score - guess)\n    if diff == 0:\n        return [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"Your arrays are not the same length!\")\n        return None\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"Your arrays are not the same length!\")\n        return None\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"Your arrays are not the same length!\")\n        return None\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"Your arrays are not the same length!\")\n        return None\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"Your arrays are not the same length!\")\n        return None\n    # check if the arrays are the same length\n    if len(game)!= len(guess):\n        print(\"Your arrays are not the same length!\")\n        return None\n    # check if the arrays are the same length\n    if len(game)!= len(guess)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # loop through the guesses\n    for i in range(len(guess)):\n        # compare the guesses with the scores\n        if guess[i] == game[i]:\n            array[i] = 0\n        else:\n            array[i] = abs(game[i] - guess[i])\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a new array of guesses\n    guesses = np.array(guess)\n    # create a new array of scores\n    scores = np.array(game)\n    # create a new array of the difference between the scores and the guesses\n    diff = scores - guesses\n    # sort the array of guesses\n    guesses = np.argsort(guesses)\n    # sort the array of scores\n    scores = np.argsort(scores)\n    # create a new array of the difference between the scores and the guesses\n    diff = scores - guesses\n    # create a new array of the difference between the scores and the guesses\n    diff = scores - guesses\n    # create a new array of the difference between the scores and the guesses\n    diff = scores - guesses\n    # create a new array of the difference between the scores and the guesses\n    diff = scores - guesses\n    # create a new array of the difference between the scores and the guesses\n    diff = scores - guesses\n    # create a new array of the difference between the scores and the guesses\n    diff = scores - guesses\n    # create a new array of the difference between the scores and the guesses\n    diff = scores - guesses\n    #", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # get the scores\n    scores = game[0]\n    guesses = game[1]\n    \n    # get the difference between the scores\n    diff = abs(scores[0] - scores[1])\n    # get the difference between the guesses\n    diff2 = abs(guesses[0] - guesses[1])\n    \n    # if the difference is zero, then the guesses are correct\n    if diff == 0:\n        return [0,0,0,0,0]\n    # if the difference is zero, then the guesses are incorrect\n    elif diff2 == 0:\n        return [4,4,1,0,0,6]\n    # otherwise, the guesses are incorrect\n    else:\n        return [abs(diff),abs(diff2)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the differences\n    differences = []\n    for i in range(len(game)):\n        differences.append(abs(game[i] - guess[i]))\n    # sort the guesses by score\n    sortedGuesses = sorted(guesses, key=lambda x: x[0], reverse=True)\n    # sort the scores by difference\n    sortedScores = sorted(scores, key=lambda x: x[1], reverse=True)\n    # create a list of the differences\n    sortedDifferences = []\n    for i in range(len(sortedGuesses)):\n        if sortedGuesses[i][0] == sortedGuesses[i][1]:\n            sortedDifferences.append(sortedGuesses[i][0] - sortedGuesses[i][1])\n        else:\n            sortedDifferences.append(abs(sortedGuesses[i][0] - sortedGuesses[i][1]))\n    # create a list of the differences\n    sortedDifferences = sorted(sortedDiffer", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the absolute differences between the guesses and the scores\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guesss[i]))\n    # sort the list of guesses by the absolute differences\n    sortedGuesses = sorted(guesss[::-1], key=lambda x: x[0], reverse=True)\n    # sort the list of scores by the absolute differences\n    sortedScores = sorted(scores[::-1], key=lambda x: x[0], reverse=True)\n    # create a list of the absolute differences between the sortedGuesses and the sortedScores\n    sortedDiff = []\n    for i in range(len(sortedGuesses)):\n        sortedDiff.append(abs(sortedGuesses[i] - sortedScores[i]))\n    # create a list of the absolute differences between the sortedGuesses and the sortedScores\n    sortedDiff.reverse()\n    # create", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # loop through the guesses\n    for i in range(len(guess)):\n        # compare the guess with the score\n        if guess[i] == game[i]:\n            array[i] = 0\n        else:\n            array[i] = abs(game[i] - guess[i])\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = []\n    for i in range(len(game)):\n        guesses.append(game[i])\n    # create a list of all the scores\n    scores = []\n    for i in range(len(game)):\n        scores.append(game[i])\n    # create a list of the absolute differences between the guesses and the scores\n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guesss[i]))\n    # sort the list of differences\n    diff.sort()\n    # return the list of differences\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = [guess for guess in guess]\n    \n    # create a list of all the scores\n    scores = [score for score in score]\n    \n    # create a list of all the guesses that are correct\n    correct = [score for score in score if score == guess]\n    \n    # create a list of all the guesses that are incorrect\n    incorrect = [score for score in score if score!= guess]\n    \n    # create a list of all the guesses that are correct\n    correct = [score for score in score if score == guess]\n    \n    # create a list of all the guesses that are incorrect\n    incorrect = [score for score in score if score!= guess]\n    \n    # create a list of all the guesses that are correct\n    correct = [score for score in score if score == guess]\n    \n    # create a list of all the guesses that are incorrect\n    incorrect = [score for score in score if score!= guess]\n    \n    # create a list of all the guesses that are correct\n    correct = [score for score in score if score == guess]\n    \n    # create a list of all the guesses that are incorrect\n    incorrect = [score for score in score if", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the arrays\n    scores = []\n    guesses = []\n    # initialize the array of scores\n    for i in range(len(game)):\n        scores.append(0)\n    # initialize the array of guesses\n    for i in range(len(game)):\n        guesses.append(0)\n    # loop through the game\n    for i in range(len(game)):\n        # get the score of the game\n        score = game[i]\n        # get the guess of the game\n        guess = guess[i]\n        # compare the scores\n        if score == guess:\n            # if they guessed correctly, return the score\n            if score == 0:\n                return scores\n            # if they guessed incorrectly, return the absolute difference between the score and the guess\n            else:\n                return abs(score - guess)\n        # if they guessed correctly, add the score to the array\n        else:\n            # if they guessed incorrectly, add the absolute difference between the score and the guess\n            if score == 0:\n                scores.append(score)\n            else:\n                scores.append(abs(score - guess))\n    # if they guessed correctly, return the score\n    if score == 0:\n        return scores\n    # if they guessed incorrectly, return the absolute difference between the score and", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # first, let's make sure we have the same number of elements in each array\n    if len(game)!= len(guess):\n        print(\"Your input arrays are not the same length.\")\n        return None\n    \n    # now let's make sure the arrays are of the same length\n    if len(game)!= len(guess):\n        print(\"Your input arrays are not the same length.\")\n        return None\n    \n    # now let's make sure the arrays are of the same length\n    if len(game)!= len(guess):\n        print(\"Your input arrays are not the same length.\")\n        return None\n    \n    # now let's make sure the arrays are of the same length\n    if len(game)!= len(guess):\n        print(\"Your input arrays are not the same length.\")\n        return None\n    \n    # now let's make sure the arrays are of the same length\n    if len(game)!= len(guess):\n        print(\"Your input arrays are not the same length.\")\n        return None\n    \n    # now let's make sure the arrays are of the same length\n    if len(game)!= len(guess):\n        print(\"Your input arrays are not the same", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # create a list of all the guesses\n    guesses = [guess for guess in guesss]\n    \n    # create a list of all the scores\n    scores = [score for score in scores]\n    \n    # create a list of all the guesses that were correct\n    correct = [score for score in scores if score == guess]\n    \n    # create a list of all the guesses that were incorrect\n    incorrect = [score for score in scores if score!= guess]\n    \n    # create a list of all the guesses that were correct\n    correct = [score for score in scores if score == guess]\n    \n    # create a list of all the guesses that were incorrect\n    incorrect = [score for score in scores if score!= guess]\n    \n    # create a list of all the guesses that were correct\n    correct = [score for score in scores if score == guess]\n    \n    # create a list of all the guesses that were incorrect\n    incorrect = [score for score in scores if score!= guess]\n    \n    # create a list of all the guesses that were correct\n    correct = [score for score in scores if score == guess]\n    \n    # create a list of all the guesses that were incorrect\n    incorrect = [score for score in scores if", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the arrays\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        scores.append(game[i])\n        guesses.append(guess[i])\n    \n    # compare the scores\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n            return 0\n        else:\n            return abs(game[i] - guess[i])\n    \n    # if the scores are equal, return the absolute difference\n    if len(scores) == len(guesses):\n        return abs(scores[0] - guesses[0])\n    \n    # if the scores are not equal, return the absolute difference\n    else:\n        return abs(scores[0] - guesses[0]) + abs(scores[1] - guesses[1]) +... + abs(scores[len(game)-1] - guesses[len(game)-1])</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [game[i] for i in range(len(game))]\n    guesses = [game[i] for i in range(len(game))]\n    diff = [abs(game[i] - guess[i]) for i in range(len(game))]\n    diff.sort()\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the array\n    array = [0] * len(game)\n    # initialize the array of guesses\n    array[0] = guess\n    # loop through the game\n    for i in range(len(game)):\n        # compare the guess and the score\n        if compare(game[i],guess[i]) == 0:\n            array[i] = 0\n        else:\n            array[i] = compare(game[i],guess[i])\n    # return the array\n    return array", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the arrays\n    scores = []\n    guesses = []\n    # iterate over the scores\n    for i in range(len(scores)):\n        scores[i] = scores[i] + 1\n        guesses[i] = guesses[i] + 1\n    # iterate over the guesses\n    for i in range(len(guesses)):\n        if guesses[i] == scores[i]:\n            # if the guess is correct, return 0\n            return [0,0,0,0,0]\n        else:\n            # if the guess is incorrect, return the absolute difference\n            return [abs(guesses[i] - scores[i])]\n    # if the guesses are all correct, return 0\n    return [0,0,0,0,0]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the arrays\n    scores = [0] * len(game)\n    guesses = [0] * len(game)\n    # loop over the game\n    for i in range(len(game)):\n        # get the score\n        score = game[i]\n        # get the guess\n        guess = guess[i]\n        # compare the scores\n        if score == guess:\n            # if they guessed correctly, return 0\n            scores[i] = 0\n        else:\n            # if they guessed incorrectly, return the absolute difference\n            scores[i] = abs(score - guess)\n    # return the scores\n    return scores", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # initialize the arrays\n    scores = []\n    guesses = []\n    # initialize the array of scores\n    for i in range(len(game)):\n        scores.append(0)\n    # initialize the array of guesses\n    for i in range(len(game)):\n        guesses.append(0)\n    # loop through the game\n    for i in range(len(game)):\n        # get the score\n        score = game[i]\n        # get the guess\n        guess = guess[i]\n        # if the score is the same as the guess, return 0\n        if score == guess:\n            return [0,0,0,0,0]\n        # if the score is greater than the guess, return 1\n        elif score > guess:\n            return [1,1,1,1,1]\n        # if the score is less than the guess, return -1\n        elif score < guess:\n            return [-1,-1,-1,-1,-1]\n        # if the score is equal to the guess, return 0\n        else:\n            return [0,0,0,0,0]\n    # if you get here, you have guessed incorrectly\n    return [0,0,0,0,0]"]]