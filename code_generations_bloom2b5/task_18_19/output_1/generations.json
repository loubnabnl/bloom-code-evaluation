[["def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) -", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string.split(substring)) - len(string.split(substring)[0]) - len(string.split(substring)[1]) - len(string.split(substring)[2]) - len(string.split(substring)[3]) - len(string.split(substring)[4]) - len(string.split(substring)[5]) - len(string.split(substring)[6]) - len(string.split(substring)[7]) - len(string.split(substring)[8]) - len(string.split(substring)[9]) - len(string.split(substring)[10]) - len(string.split(substring)[11]) - len(string.split(substring)[12]) - len(string.split(substring)[13]) - len(string.split(substring)[14]) - len(string.split(substring)[15]) - len(string.split(substring)[16]) - len(string.split(substring)[17]) - len(string.split(substring)[18]) - len(string.split(substring)[19]) - len(string.split(substring)[20]) - len(string.split(substring)[21]", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string.split(substring)) - len(string.split(substring)[0]) - len(string.split(substring)[1]) - len(string.split(substring)[2]) - len(string.split(substring)[3]) - len(string.split(substring)[4]) - len(string.split(substring)[5]) - len(string.split(substring)[6]) - len(string.split(substring)[7]) - len(string.split(substring)[8]) - len(string.split(substring)[9]) - len(string.split(substring)[10]) - len(string.split(substring)[11]) - len(string.split(substring)[12]) - len(string.split(substring)[13]) - len(string.split(substring)[14]) - len(string.split(substring)[15]) - len(string.split(substring)[16]) - len(string.split(substring)[17]) - len(string.split(substring)[18]) - len(string.split(substring)[19]) - len(string.split(substring)[20]) - len(string.split(substring)[21]", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.capitalize()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) - len(substring.split('')[", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1])) - len(re.findall(substring, string[1:]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.capitalize()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1])) - len(re.findall(substring, string[1:]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:len(substring)]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) -", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) - len(substring.split('')[", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.translate(string))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1])) - len(re.findall(substring, string[1:]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.capitalize()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string.split(substring)) - len(string.split(substring)[0]) - len(string.split(substring)[1]) - len(string.split(substring)[2])", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.capitalize()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string.replace(substring, '')))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.capitalize()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.capitalize()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string.split(substring)) - len(string.split(substring)[0].split(substring)) - 1", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')) - len(substring.split('').reverse())", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string.replace(substring, '')))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string.split(substring)) - len(string.split(substring) + substring.split(substring))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) -", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string.replace(substring, '')))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) - len(substring.split('')[", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string.replace(substring, '')))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string.split(substring)) - len(string.split(substring) + substring.split(substring))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for char in string:\n        if char in substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.capitalize()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.capitalize()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', ''", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string.split(substring)) - len(string.split(substring)[0]) - len(string.split(substring)[1]) - len(string.split(substring)[2]) - len(string.split(substring)[3]) - len(string.split(substring)[4]) - len(string.split(substring)[5]) - len(string.split(substring)[6]) - len(string.split(substring)[7]) - len(string.split(substring)[8]) - len(string.split(substring)[9]) - len(string.split(substring)[10]) - len(string.split(substring)[11]) - len(string.split(substring)[12]) - len(string.split(substring)[13]) - len(string.split(substring)[14]) - len(string.split(substring)[15]) - len(string.split(substring)[16]) - len(string.split(substring)[17]) - len(string.split(substring)[18]) - len(string.split(substring)[19]) - len(string.split(substring)[20]) - len(string.split(substring)[21]", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:len(substring)]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.capitalize()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.capitalize()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1])) - len(re.findall(substring, string[1:]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) -", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1])) + len(re.findall(substring, string[1:]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string.split(substring)) - len(string.split(substring)[0]) - 1", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title())", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace('-', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1])) - len(re.findall(substring, string[1:]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.translate(string))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) -", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.capitalize()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1])) - len(re.findall(substring, string[1:]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) - len(substring.split('')[", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title())", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', ''", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')) - len(substring.split('').reverse())", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace('-', '')) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.capitalize()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(string, ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for char in string:\n        if char == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:len(substring)]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string.replace(substring, '')))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string.split(substring)) - len(string.split(substring)[0]) - len(string.split(substring)[1]) - 1", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string.replace(substring, '')))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', '')) - len(substring.replace('.', '')) - len(substring.replace(',', ''", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) -", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string.split(substring)) - len(string.split(substring)[0]) - len(string.split(substring)[1]) - len(string.split(substring)[2]) - len(string.split(substring)[3]) - len(string.split(substring)[4]) - len(string.split(substring)[5]) - len(string.split(substring)[6]) - len(string.split(substring)[7]) - len(string.split(substring)[8]) - len(string.split(substring)[9]) - len(string.split(substring)[10]) - len(string.split(substring)[11]) - len(string.split(substring)[12]) - len(string.split(substring)[13]) - len(string.split(substring)[14]) - len(string.split(substring)[15]) - len(string.split(substring)[16]) - len(string.split(substring)[17]) - len(string.split(substring)[18]) - len(string.split(substring)[19]) - len(string.split(substring)[20]) - len(string.split(substring)[21]", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) - len(substring.split('')[", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.capitalize()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1])) + len(re.findall(substring, string[1:]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) -", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string.split(substring)) - len(string.split(substring)[0]) - len(string.split(substring)[1]) - len(string.split(substring)[2]) - len(string.split(substring)[3]) - len(string.split(substring)[4]) - len(string.split(substring)[5]) - len(string.split(substring)[6]) - len(string.split(substring)[7]) - len(string.split(substring)[8]) - len(string.split(substring)[9]) - len(string.split(substring)[10]) - len(string.split(substring)[11]) - len(string.split(substring)[12]) - len(string.split(substring)[13]) - len(string.split(substring)[14]) - len(string.split(substring)[15]) - len(string.split(substring)[16]) - len(string.split(substring)[17]) - len(string.split(substring)[18]) - len(string.split(substring)[19]) - len(string.split(substring)[20]) - len(string.split(substring)[21]", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) -", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.translate(string))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) -", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.capitalize()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string.split(substring)) - len(string.split(substring)[0]) - len(string.split(substring)[1]) - len(string.split(substring)[2]) - len(string.split(substring)[3]) - len(string.split(substring)[4]) - len(string.split(substring)[5]) - len(string.split(substring)[6]) - len(string.split(substring)[7]) - len(string.split(substring)[8]) - len(string.split(substring)[9]) - len(string.split(substring)[10]) - len(string.split(substring)[11]) - len(string.split(substring)[12]) - len(string.split(substring)[13]) - len(string.split(substring)[14]) - len(string.split(substring)[15]) - len(string.split(substring)[16]) - len(string.split(substring)[17]) - len(string.split(substring)[18]) - len(string.split(substring)[19]) - len(string.split(substring)[20]) - len(string.split(substring)[21]", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string.split(substring)) - len(string.split(substring)[0]) - len(string.split(substring)[1]) - 1", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')) - len(substring.split('').reverse()) - len(substring.split('').reverse().reverse()) - len(substring.split('').reverse().reverse().reverse()) - len(substring.split('').reverse().reverse().reverse().reverse()) - len(substring.split('').reverse().reverse().reverse().reverse().reverse()) - len(substring.split('').reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().reverse().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title())", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1])) - len(re.findall(substring, string[1:]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) -", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) - len(substring.split('')[", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string.replace(substring, '')))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) -", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1])) - len(re.findall(substring, string[1:]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.replace(' ', '')) - len(substring.replace('.', ''))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.capitalize()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string.replace(substring, '')))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.capitalize()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.capitalize()) - len(substring.title().capitalize()) - len(substring.title().title()) - len(substring.title().title().title()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.split('')) - len(substring.split('')[0]) - len(substring.split('')[1]) - len(substring.split('')[2]) - len(substring.split('')[3]) - len(substring.split('')[4]) - len(substring.split('')[5]) - len(substring.split('')[6]) - len(substring.split('')[7]) - len(substring.split('')[8]) - len(substring.split('')[9]) - len(substring.split('')[10]) - len(substring.split('')[11]) - len(substring.split('')[12]) - len(substring.split('')[13]) - len(substring.split('')[14]) - len(substring.split('')[15]) - len(substring.split('')[16]) - len(substring.split('')[17]) - len(substring.split('')[18]) - len(substring.split('')[19]) - len(substring.split('')[20]) -", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().title())", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.lower()) - len(substring.upper()) - len(substring.title()) - len(substring.title().lower()) - len(substring.title().upper()) - len(substring.title().title()) - len(substring.title().title().lower()) - len(substring.title().title().title().lower()) - len(substring.title().title().title().title().lower()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1])) + len(re.findall(substring, string[1:]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.upper()) - len(substring.lower()) - len(substring.capitalize()) - len(substring.title()) - len(substring.title().upper()) - len(substring.title().lower()) - len(substring.title().capitalize()) - len(substring.title().title()) - len(substring.title().title().upper()) - len(substring.title().title().lower()) - len(substring.title().title().title().upper()) - len(substring.title().title().title().title().upper()) - len(substring.title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().title().", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1])) + len(re.findall(substring, string[1:]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i] == substring:\n            count += 1\n    return count", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string[:-1]))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(string) - len(substring) - len(substring.translate(string))", "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n    return len(re.findall(substring, string)) - len(re.findall(substring, string.replace(substring, '')))"]]