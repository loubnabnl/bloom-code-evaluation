[["def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    # Init\n    nums = []\n    for i in range(0, n):\n        nums.append(i)\n    # Loop\n    for i in range(0, n):\n        if i % 11 == 0:\n            nums.append(i)\n        else:\n            nums.append(1)\n    return len(nums)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return 0 if n < 1 else 1 + math.ceil(n / 11.0) + math.ceil(n / 13.0)</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    # TODO: Check validity of this algorithm\n    return int(math.ceil(n / 11.0) + 1) * 11.0 + int(math.ceil(n / 13.0) + 1) * 13.0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(i % 11 or 13 for i in xrange(n)) // (11 if n % 11 else 13)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = int(n)\n    if n < 11:\n        return 0\n    if n < 13:\n        return 2\n    if n % 3 == 2:\n        return 3\n    return 1", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    result = 0\n    for i in range(n):\n        if i % 11 == 0 or i % 13 == 0:\n            result += 1\n    return result", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n == 0:\n        return 0\n\n    if n == 1:\n        return 1\n\n    if n % 11 == 0:\n        return fizz_buzz(n / 11)\n    elif n % 13 == 0:\n        return fizz_buzz(n / 13)\n\n    return fizz_buzz(n // 11) + fizz_buzz(n // 13)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n -= 1\n    if n % 11 == 0:\n        return 1\n    if n % 13 == 0:\n        return 2\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    s = ''\n    for i in range(0, n):\n        s += chr(ord('A') + i)\n        if (chr(ord('A') + i) in [chr(ord('0') + i), chr(ord('9') + i)]):\n            continue\n        if (chr(ord('A') + i) in [chr(ord('7') + i), chr(ord('8') + i)]):\n            return 1\n        s += chr(ord('A') + i)\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in range(7, n, 1):\n        if n % i == 0:\n            return 1\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = math.floor(n)\n    if n % 11 == 0:\n        return 1\n    elif n % 13 == 0:\n        return 2\n    else:\n        return 3", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return len([int % 11 for int in xrange(5, n + 1)]) + len([int % 13 for int in xrange(6, n + 1)])", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return [(j, 7) for j in range(11, n, 2)]\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return (n % 11) + (n % 13) - 1", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in range(1, n):\n        if i % 11 == 0 and i % 13 == 0:\n            yield i", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    h = 0\n    p = 1\n    q = 1\n    r = 1\n    for i in range(len(n)):\n        if n % 11 or n % 13:\n            h = h + 1\n            p = p + 1\n            q = q + 1\n            r = r + 1\n    return h + p + q + r", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    def fizz_buzz_helper(z):\n        return z if z % 11 or z % 13 else 0\n    return {\n        n: fizz_buzz_helper(n) for n in (1, 2, 3, 6, 12, 24)\n    }\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return {7: 0, 13: 1, 11: 2}[n]", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    # Use a combination of Dirichlet and Sieve of Eratosthenes to find primes.\n    # This is a highly overly complicated algorithm, but it is a lot faster than brute force.\n    # For simplicity, we leave it out in the public source.\n    # This could be easily adapted to use a faster sieve algorithm, but we want it to look like the\n    # original code.\n    # Note that this algorithm was originally written for Python 3, but has been ported to Python 2.7.\n\n    n, d = divmod(n, 11)\n    if n!= d:\n        return d\n    n, d = divmod(n, 13)\n    if n!= d:\n        return d\n    return n", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return 11**(n%11) - 13**(n%13)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n -= 7\n    if n < 0:\n        return 0\n    if n % 11 == 0:\n        return 1\n    if n % 13 == 0:\n        return 2\n    return 3", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    x = 0\n    for i in range(n):\n        x = x * 10 + i % 11\n        if i % 13 == 0:\n            x = x + 1\n    return x", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n % 11 == 0:\n        return 0\n    elif n % 13 == 0:\n        return 1\n    else:\n        return 2", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return 1 if n % 11 else 0 if n % 13 else 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    count = 0\n    for i in range(10):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    # count\n    count = 0\n    # loop\n    for i in xrange(n):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n    return count", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in range(n):\n        if i % 11 == 0 or i % 13 == 0:\n            return 1\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    def fizz(n):\n        return 1 if n % 11 or n % 13 else 0\n\n    return fizz(n) for n in range(10)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    # The following code is taken from https://www.coderanch.com/t/383411\n    n = max(1, n)\n    for i in range(n):\n        if n % 11 == 0:\n            yield 1\n        elif n % 13 == 0:\n            yield 3\n        else:\n            yield 2", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    def fizz(n):\n        if n < 10:\n            return 1\n        elif n % 11 == 0:\n            return 1 + fizz(n//11)\n        elif n % 13 == 0:\n            return 2 + fizz(n//13)\n        else:\n            return 3 + fizz(n//15)\n    return sum(fizz(n) for n in range(10, n+1))", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    a = 0\n    for n in range(1, n + 1):\n        if n % 11 == 0 or n % 13 == 0:\n            a = a + 1\n    return a", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    a = 0\n    b = 0\n    while n:\n        c = n//11\n        if c < 10:\n            a += 1\n        else:\n            b += 1\n        n = n - c\n    return a*b", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    def fizz_buzz_helper(num):\n        if num < 1:\n            return num\n        if num < 10 and num % 11 or num % 13:\n            return num\n        if num < 100:\n            return fizz_buzz_helper(num / 10)\n    for i in range(1, n + 1):\n        fizz_buzz_helper(i)\n    return fizz_buzz_helper(n)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = int(n)\n    if n == 1:\n        return 0\n    elif n % 11 == 0:\n        return n // 11 - 1\n    elif n % 13 == 0:\n        return n // 13 - 1\n    else:\n        return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    a = 1\n    for n in range(3, n + 1):\n        if n % 11 == 0 or n % 13 == 0:\n            a = a * 7\n    return a\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    total = 0\n    for i in range(1, n + 1):\n        if (i % 11) == 0 or (i % 13) == 0:\n            total += 1\n    return total", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    assert n % 11 == 0 and n % 13 == 0, n\n    return sum(1 for x in xrange(n, n+1) if x % 7 == 0)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in range(n):\n        if i % 11 == 0 and i % 13 == 0:\n            yield i", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    r = 0\n    l = 0\n    if n >= 2:\n        i = (n + 2) // 3\n        if i >= 0:\n            l = fizz_buzz(i)\n            r = i + l\n            if r == n:\n                r = 0\n            if r < l:\n                r = l\n    return r", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return 0 if n % 11 or n % 13 == 0 else 1", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return n * (n / 11) + (n / 13) * 2", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return 1 + n//11 + n//13 + n//21 + n//31 + n//41 + n//61 + n//71 + n//81 + n//91 + n//97 + n//101 + n//107 + n//111 + n//117 + n//121 + n//131 + n//141 + n//151 + n//161 + n//171 + n//181 + n//191 + n//201 + n//211 + n//221 + n//231 + n//241 + n//261 + n//271 + n//281 + n//291 + n//301 + n//311 + n//321 + n//331 + n//341 + n//351 + n//361 + n//371 + n//381 + n//391 + n//401 + n//411 + n//421 + n//431 + n//451 + n//461 + n//471 + n//481 + n//491 + n//501 + n//511 + n//521 + n//531 + n//541 + n//561 + n//571 + n//581 + n//591 + n//601 + n//611 + n//641 + n//661 +", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in range(10, 11 + 1):\n        if i == 7:\n            return 0\n        elif i % 11 == 0:\n            return 1\n    for i in range(10, 13 + 1):\n        if i % 13 == 0:\n            return 1\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n == 0:\n        return 1\n    if n % 11 == 0:\n        return fizz_buzz(n - 1)\n    if n % 13 == 0:\n        return fizz_buzz(n - 2)\n    return 1", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum((x % 11) if x % 11 else 0 for x in range(n, n + 11, 11))", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    assert n >= 0\n    assert n % 11 == 0\n    assert n % 13 == 0\n    return 0 if n < 0 else (1 + fizz_buzz(-n)) / 2", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in range(11, n):\n        if i % 11 == 0:\n            for j in range(13):\n                if j % 11 == 0 and n % j == 0:\n                    return 1\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    assert len(list(range(11, 13)) - list(range(7))) == 2\n    return sum(1 for i in range(11, 13) if 11 * (i % 11) <= n <= 13 * (i % 13))", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = max(int(n), 2)\n    x = 0\n    for i in range(1, n):\n        x = x * i\n    return x", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    from pythontester.utils.misc import arith_integers\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n in arith_integers(2, 11):\n        return 2\n    elif n in arith_integers(2, 13):\n        return 3", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n, k = divmod(n, 11)\n    n, k = divmod(n, 13)\n    return n * n - k * k", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n -= 1\n    if n < 1:\n        return 0\n    if n % 3 == 0:\n        return n // 5\n    if n % 5 == 0:\n        return n // 7\n    if n % 7 == 0:\n        return n // 11\n    if n % 11 == 0:\n        return n // 13", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return 0 if n % 11 == 0 else (n / 11) * (n % 13 == 0) + (n % 13 * (n % 13 * 10 + 9))", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n % 11 == 0:\n        return 1\n    if n % 13 == 0:\n        return 1\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    def _do(num: int):\n        if num % 11 or num % 13:\n            return 1\n        return 0\n    return sum(_do(i) for i in range(n))", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n < 3:\n        return 0\n    elif n % 11 == 1:\n        return 1\n    elif n % 13 == 1:\n        return 2\n    else:\n        return 3", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return (n % (13 - 11) <= 2) * (n % 11 <= 1) + (n % 11 == 0)\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = abs(n)\n    if n < 100:\n        return 0\n    if n % 11 == 0:\n        return 1\n    if n % 13 == 0:\n        return 2\n    return 3", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return (7 ** n) % 11 or (7 ** n) % 13", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return 0 if n < 5 else 1 + n * (n % 11) + n * (n % 13) / 11\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    result = 0\n    for n in range(11, n + 1):\n        if n % 11 == 0 or n % 13 == 0:\n            result += 1\n    return result\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    def fizz():\n        \"\"\"Takes in an integer n and returns 1 if there is 1 or more divisors of n which are greater than 11 or 13 and 0 otherwise.\"\"\"\n        if n == 1:\n            return 1\n        if n % 11 == 1:\n            return 1\n        if n % 13 == 1:\n            return 1\n        return 0\n\n    if n % 11 == 1:\n        fizz();\n    if n % 13 == 1:\n        fizz();\n    return fizz()", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    s = []\n    for i in range(10):\n        if n % i == 0:\n            s.append(i)\n    return sum(s)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return 1 if n % 11 == 0 else fizz_buzz(n / 11)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n < 1:\n        return 0\n    if n < 51:\n        return 1\n    if n < 111:\n        return 2\n    if n < 131:\n        return 3", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    num = 1\n    for i in range(n):\n        if i % 11 or i % 13:\n            num *= 10\n            num += 1\n        else:\n            break\n    return num", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return int(math.floor(math.log(11, n)))\n    if n % 13 == 0:\n        return fizz_buzz(n - 11)\n    return fizz_buzz(n - 13)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    a = 0\n    for i in range(11, n, 11):\n        a += fizz_buzz(n - i)\n    return a", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for x in range(0, n):\n        if x % 11 == 0 or x % 13 == 0:\n            return x + 1\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(1 for x in xrange(n) if x % 11 == 0 or x % 13 == 0)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in range(n):\n        if i == 0:\n            return 0\n        elif i == 1:\n            return 1\n        elif i % 11 == 1:\n            return 1\n        elif i % 13 == 1:\n            return 2\n        elif i == len(n):\n            return 3\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = max(1, int(n))\n    count = 0\n    for i in range(n):\n        if not (i % 11):\n            count += 1\n    return count", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return 0 if n == 0 else sum(1 for i in xrange(11) if n % i == 0) + sum(1 for i in xrange(13) if n % i == 0)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n == 0:\n        return 0\n\n    d = [digit for digit in str(int(x) / 11) if digit == 7 for x in range(0, n, 11)]\n    if len(d) == 0:\n        return 0\n    else:\n        return sum(d)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    m = 3\n    n -= 1\n    if n < 2:\n        return 0\n    if n % 11 == 1:\n        return fizz_buzz(n // 11)\n    elif n % 13 == 1:\n        return fizz_buzz(n // 13)\n    elif n % 11 == 0:\n        return fizz_buzz(n // 11)\n    elif n % 13 == 0:\n        return fizz_buzz(n // 13)\n    else:\n        return fizz_buzz(n // 11)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(1 for i in range(n) if i % 11 == 0 or i % 13 == 0)\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n == 0:\n        return 0\n\n    # zero is an exception\n    if n == 0:\n        return 1\n    n -= 1\n\n    # there are two types of numbers: those that are divisible by 11 and those that are divisible by 13\n    if n % 11!= 0:\n        return 1\n    elif n % 13!= 0:\n        return 2\n\n    # as above, but with the addition of the case where n is divisible by 12\n    if n % 12 == 0:\n        return 1\n    elif n % 12 == 1:\n        return 2\n\n    # as above but with the addition of the case where n is divisible by 14\n    if n % 14 == 0:\n        return 1\n    elif n % 14 == 1:\n        return 2\n\n    # as above but with the addition of the case where n is divisible by 15\n    if n % 15 == 0:\n        return 1\n    elif n % 15 == 1:\n        return 2\n\n    # as above but with the addition of the case where n is divisible by 16\n    if n % 16 == 0:\n        return 1\n    elif n % 16 == 1:\n        return 2\n\n    # as above but with the addition of the case where n is divisible by 17\n    if n % 17 == 0:\n        return 1\n    elif n % 17 == 1:\n        return 2", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    elif n == 3:\n        return 2\n    else:\n        return n", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return {i: i for i in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10) if n % i == 0}", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n in (0, 1):\n        return 0\n    n -= 1\n    for x in range(11):\n        if n % x == 0:\n            return 1\n    for x in range(13):\n        if n % x == 0:\n            return 1\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return len([int % 11 if int % 11 else 0 for int in range(1, n + 1)])", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    m = 1\n    for i in range(n):\n        if i % 11 == 0:\n            m += 1\n        elif i % 13 == 0:\n            m += 2\n    return m", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in range(len(n)-1):\n        if n % 11 or n % 13:\n            return 1\n    else:\n        return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = int(n)\n    for i in range(n):\n        if i < 7 or i > 11:\n            return 0\n        if i < 13 or i > 21:\n            return 1\n    return 2", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    # because not all the numbers in this range are divisible by 11 or 13, we need to run it through a loop to get the\n    # numbers in this range.\n    for i in range(n):\n        if n % 11 == 0 and n % 13 == 0:\n            return 1\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = int(n)\n    if n <= 3:\n        return 0\n    elif n % 11 == 0:\n        return fizz_buzz(n // 11 + 1)\n    elif n % 13 == 0:\n        return fizz_buzz(n // 13 + 1)\n    else:\n        return fizz_buzz(n // 11 * 11 + n // 13 * 13 + n % 11 * 11 + n % 13 * 13)\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n, r = divmod(n, 11)\n    if r:\n        return r\n    n, r = divmod(n, 13)\n    if r:\n        return r\n    return 1", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for n in range(11, n + 1):\n        if n % 11 or n % 13:\n            return 1\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    num = []\n    for i in range(0, n, 11):\n        num.append(i * 11)\n    for i in range(0, n, 13):\n        num.append(i * 13)\n    return len(num)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(1 for a in range(1, n) if a % 11 or a % 13) + (7 * (n // 11) + 7 * (n // 13))\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(x == 7 and 1 or 2 for x in range(n)) if n % 11 == 0 else sum(x == 7 and 1 or 2 for x in range(n)) if n % 13 == 0 else 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = n + 1\n    num = []\n    for x in range(n):\n        if x in range(11, 13):\n            num.append(x)\n    return sum(num)\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    assert n in [10, 11, 12, 13, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 124, 125, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    numbers = [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113]\n    for i in range(len(numbers)):\n        if numbers[i] % 11 == 0 or numbers[i] % 13 == 0:\n            return i\n    return -1", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    while True:\n        if n % 11 or n % 13:\n            yield n\n            n = n // 11 or 13\n            continue\n        yield n\n        n -= 1\n        n %= 11 or 13\n    # Add a rest, if necessary.\n    yield n if n > 0 else 1\n    # Return the number.\n    return len(padded(digits(str(n)[:4])))", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    # 3.5 = (3^2 + 3^1) = 22.5\n    n = max(1, max(n, 10))\n    # 71 = 31 * 3 + 13\n    return ((7 ** n) // (7 ** (11 - n))) // (7 ** (13 - n))", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(1 for digit in str(x) if x % 11 == 0 or x % 13 == 0 for x in range(1, n + 1))", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n < 11:\n        return fizz_buzz(n) * (7 ** 11)\n    elif n < 13:\n        return fizz_buzz(n) * (7 ** 13)\n    else:\n        return fizz_buzz(n) * (7 ** 22) * (7 ** 29) * (7 ** 31) * (7 ** 35) * (7 ** 37) * (7 ** 39) * (7 ** 41) * (7 ** 43) * (7 ** 45) * (7 ** 47) * (7 ** 49) * (7 ** 51) * (7 ** 53) * (7 ** 55) * (7 ** 57) * (7 ** 59) * (7 ** 61) * (7 ** 63) * (7 ** 65) * (7 ** 67) * (7 ** 69) * (7 ** 71) * (7 ** 73) * (7 ** 75) * (7 ** 77) * (7 ** 79) * (7 ** 81) * (7 ** 83) * (7 ** 85) * (7 ** 87) * (7 ** 89) * (7 ** 91) * (7 ** 93) * (7 ** 95) * (7", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    b = 0\n    for n in range(1, n + 1):\n        if (n * 11) % 11 == 7 and (n * 13) % 13 == 7:\n            b += 1\n    return b", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    a = []\n    for i in range(1, n+1):\n        if i % 11 == 0:\n            a.append(7)\n        if i % 13 == 0:\n            a.append(7)\n    return sum(a)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    def count(n: int):\n        \"\"\"Count the number of numbers less than n which are divisible by 11 or 13.\n        >>> count(50)\n        0\n        >>> count(78)\n        2\n        \"\"\"\n        if n < 5:\n            return 1\n        if n % 11 == 0:\n            return count(n // 11)\n        elif n % 13 == 0:\n            return count(n // 13)\n    n = abs(n)\n    if n < 3:\n        return count(n)\n    elif n % 11 == 0:\n        return count(n // 11)\n    else:\n        return count(n // 13)\n\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return 7 ** (n // 11) - 1", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = n // 11\n    if n < 21:\n        return 7 + n * 11\n    n = n // 13\n    if n < 31:\n        return 7 + n * 13\n    return 7", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum([digit == 7 for digit in n//11 if digit % 11 == 0])", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in range(1, n, 11):\n        for j in range(1, n, 13):\n            if i % 11 == 0 and j % 13 == 0:\n                break\n            else:\n                return i, j\n    else:\n        return 1, n", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    # count the occurence of the digit 7 in n's divisors\n    count = 0\n    for x in range(n):\n        if x % 11 == 0 and x % 13 == 0:\n            count += 1\n    return count\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(1 for i in range(n) if i % 11 or i % 13)</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    def f(n):\n        if n == 1:\n            return 1\n        return n // 11 * f(n // 11) * f(n // 11) // 13 + n % 11 * f(n % 11) * f(n % 11) // 13 + n % 11 ** 2\n    return sum(f(i) for i in range(11, n, 13))", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return len(filter(is_int, range(1, n, 2)))", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in range(1, n+1):\n        if n % 11 == 0 or n % 13 == 0:\n            yield i\n    return n\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(1 for i in range(n) if i % 11 or i % 13 == 0)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n *= 11\n    return n == 1 or n % 11 == 0 or n % 13 == 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = int(n)\n    assert 11 in n\n    if n % 11 == 0:\n        return n % 11\n    if n % 13 == 0:\n        return n % 13\n    return n % 11 + 1", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    import itertools\n    it = itertools.count(7)\n    for n in range(1, n + 1):\n        if it(n):\n            print(str(n) + \": \" + str(it(n) + 1))\n        else:\n            print(str(n) + \": \" + str(0) + \" (not divisible by 7)\")", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(1 for i in range(1, n+1) if n % (11 + i) == 0 and n % (13 + i) == 0)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    # 7 is the smallest number which is divisible by 11 or 13.\n    # However, 7 is the largest number which is divisible by 11 or 13.\n    # Therefore, we can be more efficient by finding the smallest integer which is not divisible by 11 or 13.\n    # We also eliminate the possible case of 7 being a prime.\n    # Note that no one has asked for the number of times the digit 7 appears in an integer greater than 2**100.\n    # Therefore, we do not check the non-prime case.\n    # This code is much shorter than the standard algorithm, but may not be the most efficient.\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n % 11 == 0 and n % 13 == 0:\n        return fizz_buzz(n//11) + fizz_buzz(n//13)\n    if n % 11!= 0:\n        return fizz_buzz(n//11) + fizz_buzz(n//11 + 1)\n    if n % 13!= 0:\n        return fizz_buzz(n//13) + fizz_buzz(n//13 + 1)\n    # The next bit of code is for the non-prime case.\n    if n % 11 == 0 and n % 13 == 0:", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(1 if i < n else 0 for i in range(11 if n < 101 else 13))\n    #FIXME: could be converted to python list comprehension and faster", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in range(10):\n        if i <= n and n % 11 or n % 13:\n            yield 7\n    if n < 10:\n        yield 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    def twos_comp(n):\n        \"\"\"Multiply n by 11 or 13 if its less than or equal to the number of twos.\n        >>> twos_comp(11)\n        2\n        >>> twos_comp(13)\n        1\n        \"\"\"\n        while n > 1 and n % 11 == 0:\n            n = n / 11\n            if n <= 2:\n                twos_comp(n)\n    return len(list(twos_comp(n))) if n > 0 else 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum((n % 11) or (n % 13) for n in range(10, n + 1))", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n % 11 == 0:\n        return 1\n    elif n % 13 == 0:\n        return 2\n    else:\n        return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    count = 0\n    for x in range(11, n+1):\n        if x % 11 == 0 or x % 13 == 0:\n            count += 1\n    return count", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n <= 10:\n        return 0\n    else:\n        return sum([int(a) % 11 for a in range(10, n + 1)] + [int(a) % 13 for a in range(10, n + 1)]) // 10", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in range(11):\n        if i < n and i % 11 == 0:\n            return fizz_buzz(i + 1)\n\n    for i in range(13):\n        if i < n and i % 13 == 0:\n            return fizz_buzz(i + 1)\n\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = int(n)\n    if n < 1:\n        return 0\n    if n % 11 == 0 or n % 13 == 0:\n        return 0\n    r = 0\n    for i in range(n // 11):\n        r = r + 1\n    for i in range(n // 13):\n        r = r + 1\n    return r", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = int(n)\n    for i in range(0, n):\n        if i % 11 == 0:\n            if i % 13 == 0:\n                yield 0\n            else:\n                yield 1\n        if i % 13 == 0:\n            if i % 11 == 0:\n                yield 2\n        else:\n            yield 3", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in range(11, n + 13):\n        if i % 11 or i % 13:\n            return 1\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    def fizz(n):\n        \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\"\"\"\n        return 0 if n < 10 else ((7 - n % 11) * (n - 10) / 11 + 7) % 11\n    return fizz(n)\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum([int(digit) for digit in itertools.combinations(range(7), n) if digit % 11 == 0 or digit % 13 == 0])", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return (0 if n % 11 == 0 else 1) * (1 if n % 13 == 0 else 2) * n // 11 + (1 if n % 13 == 0 else 3) * n // 13", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return (n % 11 == 0 or n % 13 == 0) and (n % 11 or n % 13) == 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    count = 1\n    for i in range(n):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    i = 1\n    s = []\n    while True:\n        j = min(n, i + 1)\n        if j % 11 == 0:\n            s.append(j)\n            i = j\n        else:\n            break\n    return sum(s)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in range(n, 0, -1):\n        if i % 11 == 0 or i % 13 == 0:\n            yield i", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    assert(n >= 0)\n    i = 0\n    for n in xrange(1, n + 1):\n        if n % 11 or n % 13:\n            i += 1\n    return i", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n <= 7:\n        return 0\n    elif n <= 13:\n        return 2\n    else:\n        return 3", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    def fizz(i):\n        \"\"\"Return the number of occurrences of the digit 7 in the number i\"\"\"\n        if i % 11 == 0 or i % 13 == 0:\n            return 1\n        else:\n            return 0\n    return fizz(n) / fizz(11) / fizz(13)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = n - 1\n    if n < 0:\n        return 0\n    if n in range(5, 20):\n        return 1\n    if n in range(7, 20):\n        return 2\n    if n in range(11, 19):\n        return 3\n    if n in range(13, 19):\n        return 4\n    if n in range(17, 21):\n        return 5\n    if n in range(19, 23):\n        return 6\n    if n in range(21, 23):\n        return 7\n    if n in range(23, 26):\n        return 8\n    if n in range(25, 26):\n        return 9\n    return 10", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n % 11 == 0 and n % 13 == 0:\n        return n\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    # first check if this is a multiple of 7\n    if n % 7 == 0:\n        return 1\n    # the digits that are multiples of 7 are the same as the digits that are not multiples of 7\n    # so check if this is divisible by 11\n    if n % 11 == 0:\n        return 1\n    # the digits that are multiples of 7 are the same as the digits that are not multiples of 7\n    # so check if this is divisible by 13\n    if n % 13 == 0:\n        return 1\n    # the digits that are multiples of 7 are the same as the digits that are not multiples of 7\n    # so check if this is divisible by 11\n    if n % 11 == 0:\n        return 1\n    # the digits that are multiples of 7 are the same as the digits that are not multiples of 7\n    # so check if this is divisible by 13\n    if n % 13 == 0:\n        return 1\n    # the digits that are multiples of 7 are the same as the digits that are not multiples of 7\n    # so check if this is divisible by 11\n    if n % 11 == 0:\n        return 1\n    # the digits that are multiples of 7 are the same as the digits that are not multiples of 7\n    # so check if this is divisible by", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(1 for digit in range(7) if digit % 11 == 0 or digit % 13 == 0)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n % 11 == 0:\n        return 1\n    elif n % 13 == 0:\n        return 2\n    else:\n        return 3", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    assert 11 * 7 + 13 * 7 + 17 * 7 + 19 * 7 <= n, \"not a number less than {}\".format(n)\n    if n in (11, 13):\n        return 7 * (n - 11)\n    if n in (17, 19):\n        return 7 * (n - 17)\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = n + 1\n    if n % 11 == 0 or n % 13 == 0:\n        return 1\n    if n % 11 == 1:\n        return 2\n    if n % 13 == 1:\n        return 3\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = int(n)\n    for i in range(7, n+1):\n        if n%(11+i) or n%(13+i):\n            return 1\n    return 0\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n < 1:\n        raise ValueError(\"n must be at least 1.\")\n    if n % 3 == 0:\n        return 1\n    else:\n        return fizz_buzz(n / 3) + fizz_buzz(n / 2) + fizz_buzz(n / 1)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    count = 0\n    for i in range(0,n):\n        if 11*i < n:\n            count += 1\n        elif 13*i < n:\n            count += 1\n    return count", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    r = 0\n    for i in range(n):\n        if i % 11 or i % 13:\n            r += 1\n    return r", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in range(0, n - 1):\n        if (i % 11) == 0:\n            if (i % 13) == 0:\n                yield i\n            else:\n                yield i + 1", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n < 10:\n        return 0\n    if n % 11 == 0:\n        return 1\n    if n % 13 == 0:\n        return 2\n    return 3", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    count = 0\n    for i in range(7):\n        if (n % 11 or n % 13):\n            count += 1\n    return count", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    def prod(n: int):\n        return 11 * (n-1) + 1\n    for i in range(1, n):\n        if i % 11 == 0 or i % 13 == 0:\n            yield prod(i)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    def fizz(n):\n        if n < 10:\n            return 1\n        else:\n            return fizz_buzz(n//11) + fizz_buzz(n%11)\n    return fizz(n)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    a = 0\n    b = 1\n    while True:\n        if n % 11 == 0:\n            a += 1\n        elif n % 13 == 0:\n            b += 1\n        else:\n            break\n    return a + b", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    r = 0\n    for i in range(5):\n        if n % i == 0:\n            r += 1\n    return r", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return n // 11 + n // 13 + n // 17 + n // 19 + n // 23 + n // 27 + n // 31 + n // 37 + n // 43 + n // 47 + n // 53 + n // 59 + n // 67 + n // 73 + n // 79 + n // 83 + n // 89 + n // 97 + n // 109 + n // 117 + n // 139 + n // 157 + n // 169 + n // 179 + n // 199 + n // 211 + n // 227 + n // 239 + n // 255\n    \"\"\"\n    # This code is from http://stackoverflow.com/questions/931174/calculating-the-number-of-times-a-digit-appears-in-an-integer\n    # and http://stackoverflow.com/questions/931372/the-number-of-times-a-digit-appears-in-an-integer\n    #\n    # NOTE: The value of n must be divisible by 11 or 13.\n    #\n    # Also, n is a positive integer, so it will never exceed 2^31.\n    #\n    # The code assumes that the numbers will not go beyond 2**31.\n    #\n    # But if you want to test any other value for n, add some extra checks.\n    #\n    # If you want to", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return (7 * (n // 11)) + ((7 - 1) * (n % 11) * (13 - 1)) + ((7 - 1) * (n % 13) * (13 - 1))", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(i * (i + 1) // n for i in range(2, n + 1))", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(1 for i in range(n+1) if i % 11 in range(10, n+1) and i % 13 in range(10, n+1)) - 1", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    count = 0\n    for x in range(10, n, 10):\n        if x % 11 == 0 and x % 13 == 0:\n            count += 1\n    return count", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    s = ''\n    for i in range(10, n, 5):\n        if i < 10:\n            s = s + '1'\n        elif i < 11:\n            s = s + '11'\n        elif i < 13:\n            s = s + '13'\n        else:\n            s = s + '17'\n    return s", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    num = 1\n    for i in range(n):\n        if i % 11 or i % 13:\n            num = num + 1\n    return num", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for x in range(2, n + 1, 2):\n        if x % 11 == 0 or x % 13 == 0:\n            return 1\n\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return (7 * (int(n) % 11) + 3 * (int(n) % 13)) % 11", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return 11 * 7 + 13 * 7 + 17 * 7 + 19 * 7 + 23 * 7 + 25 * 7 + 27 * 7 + 29 * 7 + 31 * 7 + 33 * 7 + 35 * 7 + 37 * 7 + 39 * 7 + 41 * 7 + 43 * 7 + 45 * 7 + 47 * 7 + 49 * 7 + 51 * 7 + 53 * 7 + 55 * 7 + 57 * 7 + 59 * 7 + 61 * 7 + 63 * 7 + 65 * 7 + 67 * 7 + 69 * 7 + 71 * 7 + 73 * 7 + 75 * 7 + 77 * 7 + 79 * 7 + 81 * 7 + 83 * 7 + 85 * 7 + 87 * 7 + 89 * 7 + 91 * 7 + 93 * 7 + 95 * 7 + 97 * 7 + 99 * 7 + 101 * 7 + 103 * 7 + 105 * 7 + 107 * 7 + 109 * 7 + 111 * 7 + 113 * 7 + 115 * 7 + 117 * 7 + 119 * 7 + 121 * 7 + 123 * 7 + 125 * 7 + 127 * 7 + 129 * 7 + 131 * 7 + 133 * 7 + 135 * 7 + 137 * 7 + 139 * 7 + 141 *", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in range(len(set(n))):\n        if n % (11 if i == 0 else 13) == 0:\n            return n", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    assert n % 11 == 0 or n % 13 == 0\n    return 0 if n < 17 else (n % 11 + 7) % 11 + 1 if n < 33 else (n % 11 + 13) % 11 + 1\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return (sum(x % 11 for x in range(7)) + sum(x % 13 for x in range(7))) // 2", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    c = 1\n    count = 0\n    while count < n:\n        if n % 11 == 0:\n            c += 1\n        else:\n            count += 1\n            if count >= n:\n                break\n            c *= 10\n        n = n / 11\n    return c", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(1 for x in range(n) if x % 11 == 7 or x % 13 == 7)</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n % 11 == 0:\n        return 1\n    elif n % 13 == 0:\n        return 2\n    else:\n        return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    # use common sub-expression trick to simplify this for next line\n    n = n / 11 if n % 11!= 0 else n / 13\n    for i in xrange(n):\n        if i % 2 == 1:\n            yield 7\n    return n", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    total = 0\n    for i in range(n):\n        if i % 11 == 0 and i % 13 == 0:\n            total += 1\n    return total", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(1 for i in range(n) if i % 11 == 0 or i % 13 == 0)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n < 3:\n        return 0\n    else:\n        for i in range(11, n):\n            if n % i == 0:\n                return 1\n        for i in range(13, n):\n            if n % i == 0:\n                return 2", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    nums = []\n    for i in range(n):\n        if i % 11 == 0 or i % 13 == 0:\n            nums.append(i)\n    return len(nums)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    x = [(j, 2) for j in range(n)]\n    x.append((n + 1, 0))\n    for i in range(n + 1):\n        if n % 11 == 0 and n % 13 == 0:\n            x[i][0] += 1\n            x[i][1] += 1\n        if n % 11 == 0 and n % 13 == 1:\n            x[i][0] += 1\n            x[i][1] += 2\n        if n % 11 == 1:\n            x[i][0] += 1\n            x[i][1] += 3\n        if n % 13 == 1:\n            x[i][0] += 1\n            x[i][1] += 4\n        if n % 13 == 2:\n            x[i][0] += 1\n            x[i][1] += 5\n        if n % 13 == 3:\n            x[i][0] += 1\n            x[i][1] += 6\n        if n % 13 == 4:\n            x[i][0] += 1\n            x[i][1] += 7\n        if n % 13 == 5:\n            x[i][0] += 1\n            x[i][1] += 8\n        if n % 13 == 6:\n            x[i][0] += 1\n            x[i][1] += 9\n        if n % 13 == 7:\n            x[i][0] += 1\n            x[i][1] += 10\n        if n % 13 == 8:\n            x[i][0] += 1\n            x[i]", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    i = 1\n    for n in range(1, n + 1):\n        if n % 11 == 0 and n % 13 == 0:\n            return i\n        i += 1\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n -= 1\n    while True:\n        if n % 11 == 0:\n            return 1\n        if n % 13 == 0:\n            return 2\n        n /= 11\n        n /= 13\n        if n < 1:\n            return 0\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n < 10:\n        return 0\n    if n % 11 == 0 or n % 13 == 0:\n        return 1\n    else:\n        return 2", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = int(n)\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n < 7:\n        return 0\n    if n < 13:\n        return 1\n    if n < 17:\n        return 1\n    if n < 19:\n        return 1\n    if n < 23:\n        return 1\n    if n < 27:\n        return 1\n    if n < 31:\n        return 1\n    if n < 37:\n        return 1\n    if n < 41:\n        return 1\n    if n < 47:\n        return 1\n    if n < 53:\n        return 1\n    if n < 57:\n        return 1\n    if n < 61:\n        return 1\n    if n < 67:\n        return 1\n    if n < 73:\n        return 1\n    if n < 77:\n        return 1\n    if n < 81:\n        return 1\n    if n < 83:\n        return 1\n    if n < 87:\n        return 1\n    if n < 89:\n        return 1\n    if n < 93:\n        return 1\n    if n < 97:\n        return 1\n    if n < 101:\n        return 1\n    if n < 103:\n        return 1\n    if n < 105:\n        return 1\n    if n < 107:\n        return 1\n    if n < 109", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n -= 1\n    for i in xrange(n):\n        if n % 11 == 0:\n            yield n // 11\n        if n % 13 == 0:\n            yield n // 13\n    return 0\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for n in xrange(1, n+1):\n        for x in xrange(1, n+1):\n            if ((n * x) % 11 == 0) or (n * x) % 13 == 0:\n                yield n * x", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for n in range(10, 100):\n        if n % 11 or n % 13:\n            return n\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(1 if x < n else 0 for x in range(2, n + 1) if x % 11 == 0 or x % 13 == 0)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(1 for i in range(10) if i % 11 == 7) + sum(1 for i in range(10) if i % 13 == 7)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for n in range(0, n):\n        if n % 11 == 0 and n % 13 == 0:\n            return fizz_buzz(n)\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    n = int(n)\n    x = 1\n    while x < n:\n        x *= 11\n        if x % 11 == 0:\n            yield x\n        x += 1\n    x = 1\n    while x < n:\n        x *= 13\n        if x % 13 == 0:\n            yield x\n        x += 1", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n == 0:\n        return 0\n\n    if n == 1:\n        return 1\n\n    if n % 11 == 0:\n        return fizz_buzz(n - 1) + 1\n    elif n % 13 == 0:\n        return 3 + fizz_buzz(n - 2)\n\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    p = 11\n    if p == 13:\n        return n // p\n    else:\n        if p < 7:\n            return 1\n        elif p == 7:\n            if n % p == 0:\n                return 1\n            else:\n                return 2\n        elif p == 11:\n            return 3\n        else:\n            return 2", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n < 11:\n        return fizz_buzz(n + 1)\n    elif n < 13:\n        return fizz_buzz(n + 2)\n    else:\n        return fizz_buzz(n + 3)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n % 11 == 0 or n % 13 == 0:\n        return 0\n    else:\n        return 1", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for x in range(0, n):\n        if x % 11 or x % 13:\n            return x\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    for i in xrange(n):\n        if i % 11 == 0 and i % 13 == 0:\n            return i\n    return 0", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    d = 0\n    m = 1\n    for i in range(n):\n        if i % 11 == 0:\n            d += 1\n        if i % 13 == 0:\n            m += 1\n    return d\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    if n % 13!= 0:\n        return n % 13\n    elif n % 11!= 0:\n        return 1\n    else:\n        return n", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    return sum(1 for i in xrange(n) if i % 11 == 0 or i % 13 == 0)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    while n < 100:\n        x = n // 11\n        y = n // 13\n        if y!= 0:\n            n -= x\n            yield x + y\n            n = x\n        else:\n            yield x\n</s>", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    def count(n):\n        \"\"\"Count the number of times a number is divisible by 11 or 13, excluding itself.\"\"\"\n        if n < 1:\n            return 0\n\n        n -= 1\n        if n == 11:\n            return 1\n        if n == 13:\n            return 1\n\n        return 0\n    return sum(count(x) for x in n % 11) + sum(count(x) for x in n % 13)", "def fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n    a = 0\n    b = 0\n    for i in range(n):\n        if (i % 11) == 0 or (i % 13) == 0:\n            a += 1\n        b += 1\n    return a, b"]]